<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://purl.org/ontology/olo/core#olo:slot> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.purl.org/drammar#hasADTComponent> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#InverseFunctionalProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2000/01/rdf-schema#label> "containsOLE" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2000/01/rdf-schema#comment> "Inverse of isOLElementOf. Connects the ordered list to its elements.\n        " <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#OrderedListElement> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsOLE> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.purl.org/drammar#isOLEContained> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#comment> "Abstract Plan An abstract plan is a recursive plan, i.e., a plan whose\n            elements are plans. Formally, an AbstractPlan is a list (List class) containing\n            (containsOLE) elements (OrderedListElements) that have plans as their data (hasData).\n            The plans contained in an abstract plan can be either abstract plans or directly\n            executable plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bb68404185a46ba6590d47f434c670891 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#label> "AbstractPlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/2000/01/rdf-schema#comment> "Timeline Timeline is a subclass of List whose function is to impose some\n            ordering on the units in a drama. Notice that the notion of timeline cannot be collapsed\n            onto the actual text: rather, it is simply an indexing posed upon units (which\n            correspond to a manifestation of drama in FRBR sense). In formal terms, the orders\n            object property has Timeline as its domain and units as its range, so a unit\n            \"orders\" some units. A Timeline contains unit. Formally, the elements\n            (OrderedListElements class) contained in a timeline (containsOLE property) are units. A\n            Timeline is surrounded by states of affairs that hold before and after it, namely\n            instances of the ConsistentSateSets class that precede and follow a given timeline.\n            Formally, the Timeline class is the domain of the hasTimelineEffect(Precondition)\n            properties, which have the ConsistentStateSet class as their range. A timeline is\n            motivated by some plan (motivates object property) and is spanned by some unit (span\n            object property). The relation between units and timelines is independent of the\n            scene/timeline relation." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/2000/01/rdf-schema#label> "Timeline" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/2002/07/owl#equivalentClass> _:B37d0ddafd47992399e8db2af55ec7396 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B217c7e52cc6544d80fa94303c784d299 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2000/01/rdf-schema#label> "DirectlyExecutablePlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2000/01/rdf-schema#comment> "DirectlyExecutablePlans Directly executable plans are plans that contain only\n            actions. Formally, a directly executale plan is a list (List class) that contains\n            (containsOLE) only elements (OrderedListElement) that have actions as their data\n            (hasData)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B9d150cf2ca74c9745009880de4c4cf75 <http://www.purl.org/drammar> .
