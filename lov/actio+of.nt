<https://w3id.org/GDPRov#Process> <http://www.w3.org/2000/01/rdf-schema#label> "Process"@en <https://w3id.org/GDPRov> .
<https://w3id.org/GDPRov#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/net/p-plan#Plan> <https://w3id.org/GDPRov> .
<https://w3id.org/GDPRov#Process> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://w3id.org/GDPRov> .
<https://w3id.org/GDPRov#Process> <http://www.w3.org/2000/01/rdf-schema#comment> "A Process describes a 'Plan' of action for carrying out a particular activity that uses or is related to Data or Consent"@en <https://w3id.org/GDPRov> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/2000/01/rdf-schema#comment> "hasFull field for building configuration files of actions"^^<http://w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/2000/01/rdf-schema#domain> <http://caressesrobot.org/ontology#Topic> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/2000/01/rdf-schema#label> "hasFull"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://caressesrobot.org/ontology> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#hasFull> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://w3.org/2002/07/owl#topDataProperty> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/2000/01/rdf-schema#label> "DailyRoutine"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://caressesrobot.org/ontology> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B85fd45a10f9157024c9eb938be35009e <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/2000/01/rdf-schema#comment> "Action or sequence of actions that are daily executed by the user. Possible Subclasses are: DoingPhysicalExercises, GettingDressed, HavingMeal, TakingMedicine, TakingCareOfOneself, and many others"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#DailyRoutine> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://caressesrobot.org/ontology#Habit> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#comment> "This class includes all Operators that should  be sent to the planner for the execution of actions. Operators achieve Goals by implementing Actions"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B4f03f65fb030645a9c610f522c7948c3 <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B3b2adddeee7dbef4f196cc64a89790d7 <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://caressesrobot.org/ontology#Topic> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#label> "Operator"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable"@en <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://caressesrobot.org/ontology> <http://caressesrobot.org/ontology> .
<http://caressesrobot.org/ontology#Operator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B536033efef6a61641002770326eb9d93 <http://caressesrobot.org/ontology> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2000/01/rdf-schema#comment> "DescriptionTemplate This class contains a well known role-based pattern for\n            representing the linguistic schemata that describe the elements of drama, such as the\n            entities and dynamics. Drammar imports this pattern from other ontologies, namely DOLCE.\n            The class DescriptionTemplate contains two classes: - Role - SituationSchema The class\n            SituationSchema provides the specific pattern for the description of incidents and\n            states, generically termed here as \"situations\". A situation can be either a\n            process or a state, usually described by a linguistic expression consisting of a verb\n            (\"giving\") for processes, such as in the expression \"Ophelia gives the\n            gift back to Hamlet\", or a by a preposition (\"behind\") for states, such\n            as in the expression \"Polonius is behind the tapestry\"). The Role class\n            provides the pattern for the roles that play a part in the state or process (in the\n            above example, the role of the \"donor\" filled by Ophelia, the role of the\n            \"recipient\" filled by Hamlet, etc.). The linguistic counterpart of the\n            role-based structure of the description templates is provided by a frame-like accounts\n            of the linguistic descriptions of events, such as Framenet or Verbnet\n            (https://framenet2.icsi.berkeley.edu/fnReports/data/frameIndex.xml). Based on a lexical\n            semantics perspective, these initiatives are aimed at grouping verbs (including\n            statives) into \"frames of action\", i.e., linguistic structures representing a\n            group of semantically similar verbs with the complements that accompany them. Following\n            a design choice that characterizes the Drammar ontology, all references to the external\n            (linguistic or commonsense) knowledge are mediated by the ExternalReference class, a top\n            level class whose function is specifically to act as a bridge to the external knowledge\n            (see the documentation of the class). So, neither the Roles nor the Situation Schemata\n            directly refer to the external linguistic knowledge they assume: rather, the hasExtRef\n            property links each component of the pattern onto its corresponding class within the\n            ExternalReference class: the SituationSchema class is related to the ExternalRefSchema,\n            the Role class is related to the ExternalRefRole class. Each ExternalReference subclass,\n            then, bridges each pattern component onto the corresponding component within the\n            external knowledge source via a specific data type property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2000/01/rdf-schema#label> "DescriptionTemplate" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#AbstractDataType> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#label> "Set" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#comment> "Set The class of set structures. The relation between sets and set members is\n            represented by the hasMember object property. It includes specific subclasses, with each\n            subclass characterized by a specific type of members. Sets include: - ConflictsSets:\n            sets of conflicting plans; - ConsistentStateSets: sets of consistent states (left and\n            right boundaries of timelines and plans). - Units: sets of actions." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B04a46ef400d875953274df13cb1c180e <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2002/07/owl#equivalentClass> _:Ba42f676e5e770cc8dfaf1d6e1adc9897 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#UnintentionalProcess> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#comment> "An Action is an intentional Process, which is a type of Process. Formally, an\n            action is an Process which is constrained to be contained (isMemberOf) some Unit. In\n            Drammar, an Action can be part of a plan of an agent (formally, a plan ia a list of\n            actions), or can be included in a Unit (ordered into some timeline). Only direct\n            executable plans (DirectlyExecutablePlan class) contain actions The Action class is\n            formally disjoint with the UnintentionalEventiveProcess class. We have introduced an\n            explicit boolean datatype property isIntentional, because it could be that the\n            annotators will use actions directly in the units (i.e. without explicitly introducing a\n            plan for it)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#label> "Action" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Process> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B217c7e52cc6544d80fa94303c784d299 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
