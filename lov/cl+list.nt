<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#label> "OrderedListElement" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#comment> "Class of the elements of the ordered lists (lists are plans and timelines).\n            Sometimes referred to as OLE. The hasOrderedListElement object property has the List\n            class as its domain and the OrderedListElement as its range. Notice that this class\n            works as a placeholder that represents the single item in a list (it is not the list\n            content itself): the property hasData links the OrderedListElement with the actual data,\n            i.e. the content of the item. For example, the OrderedListElements Plans have other\n            plans or actions as their data." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#ADTComponent> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/ontology/olo/core#olo:Slot> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#comment> "Abstract Plan An abstract plan is a recursive plan, i.e., a plan whose\n            elements are plans. Formally, an AbstractPlan is a list (List class) containing\n            (containsOLE) elements (OrderedListElements) that have plans as their data (hasData).\n            The plans contained in an abstract plan can be either abstract plans or directly\n            executable plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B0b7d2e0e70b9e6c7dd35b94f71eb483f <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#label> "AbstractPlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B3900329bcec474a721e9dd6156884a49 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2000/01/rdf-schema#label> "DirectlyExecutablePlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2000/01/rdf-schema#comment> "DirectlyExecutablePlans Directly executable plans are plans that contain only\n            actions. Formally, a directly executale plan is a list (List class) that contains\n            (containsOLE) only elements (OrderedListElement) that have actions as their data\n            (hasData)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DirectlyExecutablePlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B2a2e21f025310581d3919118914b94df <http://www.purl.org/drammar> .
