<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2002/07/owl#inverseOf> <http://erlangen-crm.org/current/P13i_was_destroyed_by> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2000/01/rdf-schema#label> "P13 destroyed"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis property allows specific instances of E18 Physical Thing that have been destroyed to be related to a destruction event.\nDestruction implies the end of an item's life as a subject of cultural documentation – the physical matter of which the item was composed may in fact continue to exist. A destruction event may be contiguous with a Production that brings into existence a derived object composed partly of matter from the destroyed object.\n\nExamples:\n- the Tay Bridge Desaster (E6) destroyed The Tay Bridge (E22)\n\nIn First Order Logic:\nP13 (x,y) ⊃ E6 (x)\nP13 (x,y) ⊃ E18(y)\nP13 (x,y) ⊃ P93(x,y)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2000/01/rdf-schema#domain> <http://erlangen-crm.org/current/E6_Destruction> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://erlangen-crm.org/current/P93_took_out_of_existence> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2004/02/skos/core#notation> "P13" <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P13_destroyed> <http://www.w3.org/2000/01/rdf-schema#range> <http://erlangen-crm.org/current/E18_Physical_Thing> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E63_Beginning_of_Existence> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://erlangen-crm.org/current/E5_Event> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E63_Beginning_of_Existence> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E63_Beginning_of_Existence> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B1b34f691e5e9beacf920c21e3e57126b <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E63_Beginning_of_Existence> <http://www.w3.org/2000/01/rdf-schema#label> "E63 Beginning of Existence"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E63_Beginning_of_Existence> <http://www.w3.org/2004/02/skos/core#notation> "E63" <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E63_Beginning_of_Existence> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis class comprises events that bring into existence any E77 Persistent Item.\n\nIt may be used for temporal reasoning about things (intellectual products, physical items, groups of people, living beings) beginning to exist; it serves as a hook for determination of a terminus post quem and ante quem.\n\nExamples:\n- the birth of my child\n- the birth of Snoopy, my dog\n- the calving of the iceberg that sank the Titanic\n- the construction of the Eiffel Tower\n\nIn First Order Logic:\nE63(x) ⊃ E5(x)"@en <http://erlangen-crm.org/current/> .
<http://purl.org/ipo/core#title> <http://www.w3.org/2000/01/rdf-schema#comment> "Title (word or phrase) that briefly describes something."@en <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://purl.org/dc/terms/title> <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/2000/01/rdf-schema#label> <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/ipo/core> <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/2000/01/rdf-schema#label> "title"@en <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#string> <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://purl.org/ipo/core> .
<http://purl.org/ipo/core#title> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#AnnotationProperty> <http://purl.org/ipo/core> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#state> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bff623e773c0d2c4053957f8b93acc148 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#comment> "State represents the static class of the Perdurant. State is the class that\n            bridges to the concept of State in upper ontologies, externally to Drammar. For example,\n            in DOLCE, states and process are the two distinct types of statives. Both factual and\n            eventive states are further divided into different state types: - MentalStates, namely\n            Belief, Goals, Values and Emotions (all sharing some propositional content in their\n            description); - StateOfAffairs, namely situations holding in the world. States participate\n            to some structure. In Drammar, these structures are ConsistenStateSets (types of Sets),\n            which borders timelines and plans. The specific type pf States are defined through the\n            use of specific types of StateSchema (subclass of DescriptionTemplate). So, its\n            subclasses are: - MentalState: the mental state of an agent; - StateOfAffairs: an\n            objective state of the story world." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#label> "State" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#process> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#label> "Process" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#comment> "Processes represents the dynamic class of the perdurants: they are gathered\n            into units, which are contained into ordered timelines bordered by states. Process is\n            the class that bridges to the concept of Process in upper ontologies, externally to\n            Drammar (like DOLCE, where States and Processes are types of Statives: here, we include\n            also the event types called accomplishments and achievements in DOLCE). Consider that\n            such resources are not of linguistic type. The DescriptionTemplate class (or, better,\n            its subclass FrameNetSchema), in fact, drives the behavior of the process inside a Plan\n            or a Unit, linking it (via the ExternalReference Class) to: 1. a Wordnet sense 2. a\n            Frame (from Framenet or Verbnet) 3. a set of Roles, played by roles encompassed in the\n            frame All these links are bridged by the ExternalReference Class, which has\n            \"quale\" properties that link the reference to specific resources. In the\n            external ontology, a process may be logically defined through the use of axioms: for\n            example, in the action of asking, it is assumed that Speaker and Addressee are connected\n            through some communication medium, e.g. co-presence in a room or a telephone. In\n            Drammar, the DramaStructures that contain the Processes are Units (subclasses of\n            DramaSets) and Plans (subclasses of DramaLists). They are then subdivided through a\n            further trait, that is whether the process is intentional (of an agent) or not (Action\n            or UnintentionalProcess). This trait is defined through a specific Datatype property, of\n            boolean type, called isIntentional. So, its subclasses are: - Action: with isIntentional\n            property valued TRUE; - UnintentionalProcess: with isIntentional property valued FALSE.\n            Same happens in parallel to the States, although in that case the trait concerns the\n            state schema." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
