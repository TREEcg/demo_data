<http://purl.org/iot/vocab/m3-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Badf66405fa4cc10175e546917baa164f <http://purl.org/iot/ontology/fiesta-iot> .
<http://purl.org/iot/vocab/m3-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.oclc.org/NET/UNIS/fiware/iot-lite#ActuatingDevice> <http://purl.org/iot/ontology/fiesta-iot> .
<http://purl.org/iot/vocab/m3-lite#Drawer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/iot/ontology/fiesta-iot> .
<http://purl.org/iot/vocab/m3-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#label> "Drawer Actuating Device"@en <http://purl.org/iot/ontology/fiesta-iot> .
<http://purl.org/iot/vocab/m3-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#comment> "An actuator to automatically open/close the drawer."@en <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2000/01/rdf-schema#label> "MentalStateSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "The MentalStateSchema class collects all the schemata that license the\n            behavior of the mental states. Following the guidelines for describing mental states in\n            Ferrario, R., & Oltramari, A. (2005, March). Towards a computational ontology of\n            mind. In Aerospace Conference, 2005 IEEE (pp. 1-9). IEEE, propositional attitudes such\n            as beliefs and goals are considered mental states in Drammar. The MentalState class\n            includes: - BeliefSchema - EmotionSchema - GoalSchema - ValueSchema The schemata\n            match the mental states included in Drammar. Mental states are grouped in the\n            DramaPerdurant class as eventive mental states (MentalState class) or as factual mental\n            states (F_MentalState class)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2002/07/owl#equivalentClass> _:Ba90ccc9ba34244eb3863503e8738ed6a <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#SituationSchema> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsTN> <http://www.w3.org/2000/01/rdf-schema#comment> "Connects the tree to\n            its (tree) nodes. E.g., the drama is a tree and the scenes are its tree\n            nodes." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsTN> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#TreeNode> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsTN> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsTN> <http://www.w3.org/2000/01/rdf-schema#label> "containsTN" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsTN> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.purl.org/drammar#hasADTComponent> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#containsTN> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Tree> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEndurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#endurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEndurant> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEndurant> <http://www.w3.org/2000/01/rdf-schema#comment> "DramaEndurant is an entity of drama that can be described as an endurant\n            following Gangemi et al. 2002. In Gangemi et al. 2002 \"Endurants are wholly present\n            (i.e., all their proper parts are present) at any time they are present\",\n            differently from perdurants, which are only partially present at any time they are\n            present. Endurants (and Perdurants, in some cases) play a role in processes and states:\n            an Endurant is connected to a role (Role class) in the description of a given process or\n            state by the hasRole object property. The class of drama endurants encompasses more\n            specific drama entities such as Agent and Object. This bipartite distinction is derived\n            from the drama literature, where - Agents that intentionally perform actions; - Objects\n            are involved in the actions in an unintentional way. For instance, in Hamlet, the King\n            of England is a drama endurant (but non an agent) because it is the filler of a role in\n            Claudius' actions (sending ... ) but does not intend any plan (a feature would\n            locate it in the Agent class). The difference beteween the King of England and a coffee\n            machine is entrusted to common sense knowlegde (e.g., the external lexical knowledge\n            stating the sementic type of these two entities). Reference: Gangemi, A., Guarino, N.,\n            Masolo, C., Oltramari, A., & Schneider, L. (2002). Sweetening ontologies with DOLCE.\n            In Knowledge engineering and knowledge management: Ontologies and the semantic Web (pp.\n            166-181). Springer Berlin Heidelberg." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEndurant> <http://www.w3.org/2000/01/rdf-schema#label> "DramaEndurant" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEndurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2000/01/rdf-schema#label> "DrammarScene" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Scene> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2002/07/owl#equivalentClass> _:B9c2bfc0a8293a0e73614bb62e4477b72 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2000/01/rdf-schema#comment> "DrammarScene A DrammarScene is a type of scene that hinges on characters'\n            conflicting plans. In Drammar, the conflict over plans is represented by a class, the\n            ConflictSet, which contains the set of plans in conflict. The hingesOn object property\n            connects the DrammarScene with the Conflict Set." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2000/01/rdf-schema#comment> "DescriptionTemplate This class contains a well known role-based pattern for\n            representing the linguistic schemata that describe the elements of drama, such as the\n            entities and dynamics. Drammar imports this pattern from other ontologies, namely DOLCE.\n            The class DescriptionTemplate contains two classes: - Role - SituationSchema The class\n            SituationSchema provides the specific pattern for the description of incidents and\n            states, generically termed here as \"situations\". A situation can be either a\n            process or a state, usually described by a linguistic expression consisting of a verb\n            (\"giving\") for processes, such as in the expression \"Ophelia gives the\n            gift back to Hamlet\", or a by a preposition (\"behind\") for states, such\n            as in the expression \"Polonius is behind the tapestry\"). The Role class\n            provides the pattern for the roles that play a part in the state or process (in the\n            above example, the role of the \"donor\" filled by Ophelia, the role of the\n            \"recipient\" filled by Hamlet, etc.). The linguistic counterpart of the\n            role-based structure of the description templates is provided by a frame-like accounts\n            of the linguistic descriptions of events, such as Framenet or Verbnet\n            (https://framenet2.icsi.berkeley.edu/fnReports/data/frameIndex.xml). Based on a lexical\n            semantics perspective, these initiatives are aimed at grouping verbs (including\n            statives) into \"frames of action\", i.e., linguistic structures representing a\n            group of semantically similar verbs with the complements that accompany them. Following\n            a design choice that characterizes the Drammar ontology, all references to the external\n            (linguistic or commonsense) knowledge are mediated by the ExternalReference class, a top\n            level class whose function is specifically to act as a bridge to the external knowledge\n            (see the documentation of the class). So, neither the Roles nor the Situation Schemata\n            directly refer to the external linguistic knowledge they assume: rather, the hasExtRef\n            property links each component of the pattern onto its corresponding class within the\n            ExternalReference class: the SituationSchema class is related to the ExternalRefSchema,\n            the Role class is related to the ExternalRefRole class. Each ExternalReference subclass,\n            then, bridges each pattern component onto the corresponding component within the\n            external knowledge source via a specific data type property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2000/01/rdf-schema#label> "DescriptionTemplate" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#process> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#label> "Process" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#comment> "Processes represents the dynamic class of the perdurants: they are gathered\n            into units, which are contained into ordered timelines bordered by states. Process is\n            the class that bridges to the concept of Process in upper ontologies, externally to\n            Drammar (like DOLCE, where States and Processes are types of Statives: here, we include\n            also the event types called accomplishments and achievements in DOLCE). Consider that\n            such resources are not of linguistic type. The DescriptionTemplate class (or, better,\n            its subclass FrameNetSchema), in fact, drives the behavior of the process inside a Plan\n            or a Unit, linking it (via the ExternalReference Class) to: 1. a Wordnet sense 2. a\n            Frame (from Framenet or Verbnet) 3. a set of Roles, played by roles encompassed in the\n            frame All these links are bridged by the ExternalReference Class, which has\n            \"quale\" properties that link the reference to specific resources. In the\n            external ontology, a process may be logically defined through the use of axioms: for\n            example, in the action of asking, it is assumed that Speaker and Addressee are connected\n            through some communication medium, e.g. co-presence in a room or a telephone. In\n            Drammar, the DramaStructures that contain the Processes are Units (subclasses of\n            DramaSets) and Plans (subclasses of DramaLists). They are then subdivided through a\n            further trait, that is whether the process is intentional (of an agent) or not (Action\n            or UnintentionalProcess). This trait is defined through a specific Datatype property, of\n            boolean type, called isIntentional. So, its subclasses are: - Action: with isIntentional\n            property valued TRUE; - UnintentionalProcess: with isIntentional property valued FALSE.\n            Same happens in parallel to the States, although in that case the trait concerns the\n            state schema." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Scene> <http://www.w3.org/2000/01/rdf-schema#label> "Scene" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Scene> <http://www.w3.org/2000/01/rdf-schema#comment> "Scene Drama is divided into scenes, which correspond to an extent of the\n            'text' of drama. Scenes (as a type of TreeNode) form a hierarchy, which\n            represents the recursive nature of drama. This is obtained by implementing the Scene\n            class as a subclass of the TreeNode class. Scenes contains children scenes: this\n            relation is modeled through the hasChild property. All scenes span some timeline (spans\n            object property), i.e., they have a correspondance with some extent of the drama text\n            (represented by the Timeline class)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Scene> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Scene> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bf50c8bcb9b74324a35ce21ad4b60f849 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Scene> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#TreeNode> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B3900329bcec474a721e9dd6156884a49 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DescriptionTemplate> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bbc70f6f5743d58bdc04cf768d6affdfd <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2000/01/rdf-schema#comment> "Role provides the pattern for the role fillers in a frame instantiation, that\n            occurs in SituationSchema, for describing processes and states. A Role is filled by a\n            DramaEntity: the fact that a given role has an entity as a filler is represented by the\n            hasFiller property and its inverse isFillerOf property. A Role belongs (isRoleOf) to a\n            given SituationSchema, namely a ProcessSchema or a StateSchema (hasRole property). The\n            Role class is related to its filler by the hasFiller property, whose range is the\n            DramaEntity class. For example, given the incident describable as \"Ophelia gives\n            the gift back to Hamlet\", the roles of \"donor\" (the one who does the\n            action of giving), \"recipient\" (the one wjho receives the object to be given)\n            and \"theme\" (the object of giving action) are all instance of the Role class\n            connected to the same Situation, each labeled with a linguistic label\n            (\"donor\", \"recipient\", etc.) and each connected to its filler via\n            the hasFiller property. Roles can also be intended as thematic roles of verbs following\n            the description contained in the Verbnet resource\n            (http://verbs.colorado.edu/verb-index/index.php). The Role class, via the hasExtRef\n            object property, is linked to the subclass of the top level ExternalReference class, the\n            ExternalRefRole class, whose function is to connect the description of the role with the\n            appropriate role name or URI in a linguistic account of roles through apposite data\n            properties (namely, the Role_framenetRoleID and Role_verbnetRoleType data properties\n            respectively for FrameNet and VerbNet)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2000/01/rdf-schema#label> "Role" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#AbstractDataType> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#comment> "List List is inspired by a well known ontology\n            (http://smiy.sourceforge.net/olo/spec/orderedlistontology.html#ordered_list); however,\n            its implementation in Drammar makes some simplifications (e.g., indexes are not\n            included) and renames some entities according to the terminology of the drama domain.\n            List in drama: - Plan: sequence of plans (abstract plans) or single actions (directly\n            executable plans); - Timeline: sequence of units." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#label> "List" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B9a52da5a462ca36b2e33ddd7ef706710 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/ontology/olo/core#olo:OrderedList> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B546e01849f715db2bccd8f81afd94152 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#List> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B80f77988efac90e772a3f6385260eb10 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ExternalReference> <http://www.w3.org/2000/01/rdf-schema#comment> "ExternalReference This is a class that provides the service of accumulating\n            all the \"quale\" datatype properties that refer to external linguistic or\n            commonsense knowledge sources. Through this class, the description of the drama entities\n            is bridged onto some external lexicon or ontology. Its subclasses are useful in\n            grouping, but do not represent specific issues in support." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ExternalReference> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ExternalReference> <http://www.w3.org/2000/01/rdf-schema#label> "ExternalReference" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/2000/01/rdf-schema#label> "hasFiller" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#FunctionalProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/2000/01/rdf-schema#comment> "Filler is the property that connects a Role of a FrameNetSchema with the\n            DramaEntity (DramaEndurant or DramaPerdurant) that fills that Role." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Role> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasFiller> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.purl.org/drammar#isFillerOf> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEntity> <http://www.w3.org/2000/01/rdf-schema#comment> "DramaEntity Class of all the dramatic entities, that is, of all the entities\n            that are peculiar to drama. Its sisters are classes that are not peculiar to drama, but\n            concern templates, (DescriptionTemplate), references to external lexical and semantic\n            systems (ExternalReference) and data structures (DataStructure) from computer\n            science." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEntity> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaEntity> <http://www.w3.org/2000/01/rdf-schema#label> "DramaEntity" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#comment> "The DramaPerdurant class contains the entities of drama that can described as\n            perdurants in DOLCE (Gangemi et al. 2002): \"Perdurants [...] just extend in time by\n            accumulating different temporal parts, so that, at any time they are present, they are\n            only partially present, in the sense that some of their proper temporal parts (e.g.,\n            their previous or future phases) may be not present.\" In other words, perdurants,\n            namaly processes, are not entirely present at any time they are present, differently\n            from endurants. The DramaEdurant is the class of elements of Drama that describe the\n            story dynamics, i.e. Processes and States. In the context of Drammar, the individuals of\n            this class describe the story advancement in terms of incidents and states holding\n            between incidents. Each has a specific relation to the segmentation of drama: processes\n            are grouped in units, states precedes and follows timelines (which contain units).\n            Notice that processes and states are not distinct in Framenet, the knowledge source we\n            refer to for describing perdurants outside of Drammar. Reference: Gangemi, A., Guarino,\n            N., Masolo, C., Oltramari, A., & Schneider, L. (2002). Sweetening ontologies with\n            DOLCE. In Knowledge engineering and knowledge management: Ontologies and the semantic\n            Web (pp. 166-181). Springer Berlin Heidelberg." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#label> "DramaPerdurant" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bdfce6ea442260af07821b583711798af <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#perdurant> <http://www.purl.org/drammar> .
<http://purl.org/iot/vocab/iot-taxonomy-lite#Drawer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/iot/vocab/iot-taxonomy-lite#> .
<http://purl.org/iot/vocab/iot-taxonomy-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/sosa/Actuator> <http://purl.org/iot/vocab/iot-taxonomy-lite#> .
<http://purl.org/iot/vocab/iot-taxonomy-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/iot/vocab/m3-lite#> <http://purl.org/iot/vocab/iot-taxonomy-lite#> .
<http://purl.org/iot/vocab/iot-taxonomy-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#label> "Drawer Actuating Device"@en <http://purl.org/iot/vocab/iot-taxonomy-lite#> .
<http://purl.org/iot/vocab/iot-taxonomy-lite#Drawer> <http://www.w3.org/2000/01/rdf-schema#comment> "An actuator to automatically open/close the drawer."@en <http://purl.org/iot/vocab/iot-taxonomy-lite#> .
