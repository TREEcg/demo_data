<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://def.seegrid.csiro.au/ontology/om/om-lite> <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/2000/01/rdf-schema#domain> _:B3ba304d2ee69878c98746520709841c2 <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/2000/01/rdf-schema#comment> "property whose value is the result of the observation\r\n\r\nThe association Phenomenon shall link the OM_Observation to the GF_PropertyType for which the OM_Observation:result (7.2.2.9) provides an estimate of its value. The property type has the role observedProperty with respect to the observation.\r\n\r\nThe observed property shall be a phenomenon associated with the feature-of-interest.\r\n\r\nAn observed property may be, but need not be, modelled as a property (in the sense of the General Feature Model) in a formal application schema that defines the type of the feature-of-interest.\r\n\r\nAn instance of GF_PropertyType shall describe a property that is either assignable or observable (7.1.2), such as “temperature”, “height”, “colour”, “material”. A property type may be an operation or function such as a spatiotemporal coverage. Property-type definitions may be organized into a hierarchy or ontology and managed in a register and catalogued to support discovery functions. The observed property supports semantic or thematic classification of observations, which is useful for discovery and data fusion.\r\n\r\nNOTE In general, the value of a specific observedProperty can be associated with different feature types in different observations, thus allowing the results of observations made in different projects or campaigns, and even from different disciplines, to be combined when required. A property-type register used in observations is most useful if each property type is not tied to a single feature type, or if equivalence relationships between similar property types from different feature types are provided." <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#FunctionalProperty> <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/2004/02/skos/core#definition> "The association Phenomenon shall link the OM_Observation to the GF_PropertyType for which the OM_Observation:result (7.2.2.9) provides an estimate of its value. The property type has the role observedProperty with respect to the observation.\r\n\r\nThe observed property shall be a phenomenon associated with the feature-of-interest.\r\n\r\nAn observed property may be, but need not be, modelled as a property (in the sense of the General Feature Model) in a formal application schema that defines the type of the feature-of-interest.\r\n\r\nAn instance of GF_PropertyType shall describe a property that is either assignable or observable (7.1.2), such as “temperature”, “height”, “colour”, “material”. A property type may be an operation or function such as a spatiotemporal coverage. Property-type definitions may be organized into a hierarchy or ontology and managed in a register and catalogued to support discovery functions. The observed property supports semantic or thematic classification of observations, which is useful for discovery and data fusion.\r\n\r\nNOTE In general, the value of a specific observedProperty can be associated with different feature types in different observations, thus allowing the results of observations made in different projects or campaigns, and even from different disciplines, to be combined when required. A property-type register used in observations is most useful if each property type is not tied to a single feature type, or if equivalence relationships between similar property types from different feature types are provided." <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://def.seegrid.csiro.au/ontology/om/om-lite#observedProperty> <http://www.w3.org/2000/01/rdf-schema#label> "observed property"@en <http://def.seegrid.csiro.au/ontology/om/om-lite> .
<http://www.purl.org/drammar#Belief> <http://www.w3.org/2002/07/owl#equivalentClass> _:B7bc886cd9e9e54a7ed0f16d3ac994cd1 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Belief> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#Goal> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Belief> <http://www.w3.org/2000/01/rdf-schema#label> "Belief" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Belief> <http://www.w3.org/2000/01/rdf-schema#comment> "A belief is what an agent believes (which may be true or not in the world) In\n            the BDI model, beliefs form the agent's knowledge about the world that the agent\n            relies on for devising plans to achieve her goals. In Drammar there is no distinction\n            between knowing and believing, because reasoning concerns the agent motivations for\n            acting, rather than the relationship between single agent knowledge and shared\n            knowledge. A belief is formally defined as the type of MentalState described by a\n            BeliefSchema. In the annotation, it is in the scope a ConsistenStateSet, that is\n            precondition or effect of a Plan. SWRL rules for mapping project a belief onto some\n            ConsistentStateSet which precedes or follows a timeline." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Belief> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Belief> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable" <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <https://w3id.org/pep/> <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2000/01/rdf-schema#domain> <https://w3id.org/pep/ProcessExecution> <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2000/01/rdf-schema#label> "executed by" <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2002/07/owl#inverseOf> <https://w3id.org/pep/executed> <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#FunctionalProperty> <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2000/01/rdf-schema#range> <https://w3id.org/pep/ProcessExecutor> <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/2000/01/rdf-schema#comment> "Relationship between an execution and the agent that made it. This concept generalizes `ssn:observedBy`, which in the first version of the SSN ontology is a sub property of `dul:includesObject`. \n\n`dul:includesObject` is a relation between situations and objects, e.g. 'this morning I've prepared my coffee and had my fingers burnt' (i.e.: the preparation of my coffee this morning included me)."@en <https://w3id.org/pep/> .
<https://w3id.org/pep/executedBy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <https://w3id.org/pep/> .
