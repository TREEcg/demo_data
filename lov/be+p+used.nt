<http://www.biopax.org/release/biopax-level3.owl#stoichiometricCoefficient> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#float> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#stoichiometricCoefficient> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#stoichiometricCoefficient> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.biopax.org/release/biopax-level3.owl#Stoichiometry> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#stoichiometricCoefficient> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#FunctionalProperty> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#stoichiometricCoefficient> <http://www.w3.org/2000/01/rdf-schema#comment> "Stoichiometric coefficient for one of the entities in an interaction or complex. This value can be any rational number. Generic values such as \"n\" or \"n+1\" should not be used - polymers are currently not covered." <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "ha valore"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "has data value"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#comment> "A datatype property that encodes values from a datatype for an Entity. \nThere are several ways to encode values in DOLCE (Ultralite):\n\n1) Directly assert an xsd:_ value to an Entity by using hasDataValue\n2) Assert a Region for an Entity by using hasRegion, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n3) Assert a Quality for an Entity by using hasQuality, then assert a Region for that Quality, and assert an xsd:_ value to that Region, by using hasRegionDataValue\n4) When the value is required, but not directly observed, assert a Parameter for an xsd:_ value by using hasParameterDataValue, and then associate the Parameter to an Entity by using isConstraintFor\n5) When the value is required, but not directly observed, you can also assert a Parameter for a Region by using parametrizes, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n\nThe five approaches obey different requirements. \nFor example, a simple value can be easily asserted by using pattern (1), but if one needs to assert an interval between two values, a Region should be introduced to materialize that interval, as pattern (2) suggests. \nFurthermore, if one needs to distinguish the individual Quality of a value, e.g. the particular nature of the density of a substance, pattern (3) can be used. \nPatterns (4) and (5) should be used instead when a constraint or a selection is modeled, independently from the actual observation of values in the real world." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Entity> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://purl.org/olia/ubyCat.owl#Determiner> <http://www.w3.org/2000/01/rdf-schema#label> "determiner" <http://purl.org/olia/ubyCat.owl> .
<http://purl.org/olia/ubyCat.owl#Determiner> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/olia/ubyCat.owl#SyntacticFeature> <http://purl.org/olia/ubyCat.owl> .
<http://purl.org/olia/ubyCat.owl#Determiner> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> "http://www.isocat.org/datcat/DC-3159" <http://purl.org/olia/ubyCat.owl> .
<http://purl.org/olia/ubyCat.owl#Determiner> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> "http://www.isocat.org/datcat/DC-1272" <http://purl.org/olia/ubyCat.owl> .
<http://purl.org/olia/ubyCat.owl#Determiner> <http://www.w3.org/2000/01/rdf-schema#comment> "In UBY-LMF, determiner is an attribute of the LMF class SyntacticArgument. For noun phrase arguments, this attribute encodes specific constraints on the determiner to be used (possessive or indefinite).\n\nExample given in VerbNet (possessive): They allow our smoking.\nExample from VerbNet (indefinite): an indefinite determiner is required for the noun phrase complement of \"echo\" as in \nThere echoed voices through the hall. (verb class sound_existence-47.4)" <http://purl.org/olia/ubyCat.owl> .
<http://purl.org/olia/ubyCat.owl#Determiner> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/olia/ubyCat.owl> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#boolean> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#double> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "Has Data Value"@en <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#domain> <http://purl.oclc.org/NET/ssnx/ssn#ObservationValue> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#comment> "A datatype property that encodes values from a datatype for an Entity. \nThere are several ways to encode values in DOLCE (Ultralite):\n\n1) Directly assert an xsd:_ value to an Entity by using hasDataValue\n2) Assert a Region for an Entity by using hasRegion, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n3) Assert a Quality for an Entity by using hasQuality, then assert a Region for that Quality, and assert an xsd:_ value to that Region, by using hasRegionDataValue\n4) When the value is required, but not directly observed, assert a Parameter for an xsd:_ value by using hasParameterDataValue, and then associate the Parameter to an Entity by using isConstraintFor\n5) When the value is required, but not directly observed, you can also assert a Parameter for a Region by using parametrizes, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n\nThe five approaches obey different requirements. \nFor example, a simple value can be easily asserted by using pattern (1), but if one needs to assert an interval between two values, a Region should be introduced to materialize that interval, as pattern (2) suggests. \nFurthermore, if one needs to distinguish the individual Quality of a value, e.g. the particular nature of the density of a substance, pattern (3) can be used. \nPatterns (4) and (5) should be used instead when a constraint or a selection is modeled, independently from the actual observation of values in the real world." <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "has data value"@en <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "ha valore"@it <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2002/07/owl#equivalentProperty> <http://www.semanticwater.com/WISDOM#hasValue> <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Entity> <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#comment> "A datatype property that encodes values from a datatype for an Entity. \nThere are several ways to encode values in DOLCE (Ultralite):\n\n1) Directly assert an xsd:_ value to an Entity by using hasDataValue\n2) Assert a Region for an Entity by using hasRegion, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n3) Assert a Quality for an Entity by using hasQuality, then assert a Region for that Quality, and assert an xsd:_ value to that Region, by using hasRegionDataValue\n4) When the value is required, but not directly observed, assert a Parameter for an xsd:_ value by using hasParameterDataValue, and then associate the Parameter to an Entity by using isConstraintFor\n5) When the value is required, but not directly observed, you can also assert a Parameter for a Region by using parametrizes, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n\nThe five approaches obey different requirements. \nFor example, a simple value can be easily asserted by using pattern (1), but if one needs to assert an interval between two values, a Region should be introduced to materialize that interval, as pattern (2) suggests. \nFurthermore, if one needs to distinguish the individual Quality of a value, e.g. the particular nature of the density of a substance, pattern (3) can be used. \nPatterns (4) and (5) should be used instead when a constraint or a selection is modeled, independently from the actual observation of values in the real world." <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://schema.org/SpeakableSpecification> <http://schema.org/category> "issue-1389" <http://schema.org/> .
<http://schema.org/SpeakableSpecification> <http://www.w3.org/2000/01/rdf-schema#comment> "A SpeakableSpecification indicates (typically via <a class=\"localLink\" href=\"http://schema.org/xpath\">xpath</a> or <a class=\"localLink\" href=\"http://schema.org/cssSelector\">cssSelector</a>) sections of a document that are highlighted as particularly <a class=\"localLink\" href=\"http://schema.org/speakable\">speakable</a>. Instances of this type are expected to be used primarily as values of the <a class=\"localLink\" href=\"http://schema.org/speakable\">speakable</a> property." <http://schema.org/> .
<http://schema.org/SpeakableSpecification> <http://www.w3.org/2000/01/rdf-schema#label> "SpeakableSpecification" <http://schema.org/> .
<http://schema.org/SpeakableSpecification> <http://purl.org/dc/terms/source> <https://github.com/schemaorg/schemaorg/issues/1389> <http://schema.org/> .
<http://schema.org/SpeakableSpecification> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://schema.org/> .
<http://schema.org/SpeakableSpecification> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://schema.org/Intangible> <http://schema.org/> .
