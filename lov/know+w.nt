<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B02b047e630dcee282542d4f9109d7b28 <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B3ee38d111f450c0fab78137ec43a28c2 <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Situation> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#label> "Classificazione"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#label> "Classification"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B6a35c3fb9001d3bfbfb8a17a661295d3 <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Classification> <http://www.w3.org/2000/01/rdf-schema#comment> "A special kind of Situation that allows to include time indexing for the classifies relation in situations. For example, if a Situation s 'my old cradle is used in these days as a flower pot' isSettingFor the entity 'my old cradle' and the TimeIntervals '8June2007' and '10June2007', and we know that s satisfies a functional Description for aesthetic objects, which defines the Concepts 'flower pot' and 'flower', then we also need to know what concept classifies 'my old cradle' at what time.\nIn order to solve this issue, we need to create a sub-situation s' for the classification time: 'my old cradle is a flower pot in 8June2007'. Such sub-situation s' isPartOf s." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://purl.org/net/VideoGameOntology#isCharacterInSession> <http://www.w3.org/2002/07/owl#inverseOf> <http://purl.org/net/VideoGameOntology#involvesCharacter> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isCharacterInSession> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isCharacterInSession> <http://www.w3.org/2000/01/rdf-schema#label> "is character in session"@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isCharacterInSession> <http://www.w3.org/2000/01/rdf-schema#comment> "The vgo:isCharacterInSession property connects the vgo:Character to a vgo:Session. A character participates in a game session (e.g., a football match or a counter strike round) during a period of time. As players can have multiple characters, a character needs to be connected to the session, in order to know which of those characters participated in the certain session."@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isCharacterInSession> <http://www.w3.org/2000/01/rdf-schema#range> <http://purl.org/net/VideoGameOntology#Session> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isCharacterInSession> <http://www.w3.org/2000/01/rdf-schema#domain> <http://purl.org/net/VideoGameOntology#Character> <http://purl.org/net/VideoGameOntology> .
<http://biohackathon.org/resource/faldo#StrandedPosition> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://biohackathon.org/resource/faldo#Position> <http://biohackathon.org/resource/faldo> .
<http://biohackathon.org/resource/faldo#StrandedPosition> <http://www.w3.org/2000/01/rdf-schema#label> "Stranded position" <http://biohackathon.org/resource/faldo> .
<http://biohackathon.org/resource/faldo#StrandedPosition> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://biohackathon.org/resource/faldo> .
<http://biohackathon.org/resource/faldo#StrandedPosition> <http://www.w3.org/2000/01/rdf-schema#comment> "Part of the coordinate system denoting on which strand the feature can be found. If you do not yet know which stand the feature is on, you should tag the position with just this class. If you know more you should use one of the subclasses. This means a region described with a '.' in GFF3. A GFF3 unstranded position does not have this type in FALDO -- those are just a 'position'." <http://biohackathon.org/resource/faldo> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#comment> "The Goal class represents the objectives of an agent. In the BDI model, the\n            agent is driven by her desires, or goal, and forms plans to achieve them. In Drammar, a\n            goal is achieved by a plan; the achives object property connects a plan with the goal it\n            achieves (a single goal, since the achieves property is functional). An agent intends\n            (intends object property) a goal. Formally, the Goal class is a defined as a subclass of\n            the MentalState class which is constrained: - to be the goal of some agent - to be part\n            of some ConsistentStateState - to be described by a GoalSchema Goal has a propositional\n            content that is - a process in the case of perform goal PG (Hamlet wants to ask Ophelia\n            ...) - a state in the case of - achievement (Hamlet wants Ophelia goes to a nunnery) -\n            maintenance (Hamlet wants Claudius (keeps) believing Hamlet is mad) - query (Hamlet\n            wants to know whether Ophelia is honest) In these various cases the propositional\n            content is different: - Perform Goal - PC: Action - AG - PC: State, embedded in one\n            Belief, with status false or Process, embedded in Belief, with accomplishment false - MG\n            - PC: State or Process, embedded in Belief, with status/accomplishment true - Query Goal\n            - PC: depends on query; e.g.: - Y/N question: the boolean status of a state (currently\n            implemented as a State with status TRUE) - Wh question: the filler of a role in some\n            state or process (currently not implemented) These are guidelines for writing the plans\n            correctly." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#label> "Goal" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2002/07/owl#equivalentClass> _:B04c7cf41a6ec0be308fa9591c321c541 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
