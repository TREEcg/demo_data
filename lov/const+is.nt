<http://data.europa.eu/esco/model#FacetedConcept> <http://purl.org/dc/terms/issued> "2014-02-03"^^<http://www.w3.org/2001/XMLSchema#date> <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B0fcc70331b97493c30941d6a5a3be81b <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bd19c21ddfeb01f59fa79ce841852390e <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://data.europa.eu/esco/model> <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2000/01/rdf-schema#comment> "The class of compound ESCO pillar concepts.\nA compound concept is a concept that is broken down in a set of mare basic component concepts  (e.g. a pianist is a 'musician' performing on a 'piano')\n\nAn ESCO concept is either a faceted concept or a simple concept (see http://data.europa.eu/esco/model#SimpleConcept).\n\nAn ESCO faceted (or compound) concept is the specialization of an ESCO concept that identifies one or more specialization facets (see http://data.europa.eu/esco/model#facet).\nA specializing facet is a group of concepts with a common characteristic (e.g. the group of music instruments).\nThe specialization makes a compound of the ESCO concept and of one concept of each of its related specializing  facets.\n\n- During the editorial phase, one or more faceted concepts may be created ad hoc by the ESCO taxonomists.\n- During the ESCO publishing phase all possible faceted concepts are generated by the publication process.  The process adds the possible compound conepts that were not created by the (human) taxonomist.\n- Each faceted concept is the specialization (i.e. the skos:narrowerTransitive) of an ESCO simple concept (see http://data.europa.eu/esco/model#constructedFrom)\n- All facet componets (i.e. the facet values) of the faceted conept are given by the property http://data.europa.eu/esco/model#hasFacet \n\nUniqueness rule: \nTwo instances of esco:FacetedConcept are the same if and only if both instances\n- refer the same simple ESCO concept using http://data.europa.eu/esco/model#constructedFrom\n- refer the same set of components (facet values) using http://data.europa.eu/esco/model#hasFacet\n\nThe faceted concept inherits certain characteristics from the Simple Concept it is constructed from:\n- the ESCO pillar type (Occupation, Skill or Qualification) of its simple concept it is constructed from (see esco:constructedFrom).\n- the memberOfISCOGroup of the occasional Occupation it is constructed from\n- the skillType and the skillReuseLevel of the occasional Skill it is constructed from\nFurther, inheritance rules apply as on ESCO concepts (see http://data.europa.eu/esco/model#Concept)."@en <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2000/01/rdf-schema#label> "Faceted ESCO concept"@en <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://data.europa.eu/esco/model#Concept> <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "proposed" <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2002/07/owl#disjointWith> <http://data.europa.eu/esco/model#SimpleConcept> <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://www.w3.org/2004/02/skos/core#editorialNote> "\nThe preferred label of a Faceted concept need not be persisted in the editorial system. It may be automatically constructed on publishing as follows:\n   {FacetedConcept prefLabel} :=  {SimpleConcept prefLabel} + ': ' + {facet prefLabel}  (  ' / ' + {facet prefLabel} ) *\n   where facet prefLabels are ordered alhabetically.\n   The (gender related) label roles are inherited from the prefered label of the SimplConcept.\nOccasionally the automated pref label will be overruled by a compound label."@en <http://data.europa.eu/esco/model> .
<http://data.europa.eu/esco/model#FacetedConcept> <http://purl.org/dc/terms/modified> "2014-02-03"^^<http://www.w3.org/2001/XMLSchema#date> <http://data.europa.eu/esco/model> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#comment> "The Goal class represents the objectives of an agent. In the BDI model, the\n            agent is driven by her desires, or goal, and forms plans to achieve them. In Drammar, a\n            goal is achieved by a plan; the achives object property connects a plan with the goal it\n            achieves (a single goal, since the achieves property is functional). An agent intends\n            (intends object property) a goal. Formally, the Goal class is a defined as a subclass of\n            the MentalState class which is constrained: - to be the goal of some agent - to be part\n            of some ConsistentStateState - to be described by a GoalSchema Goal has a propositional\n            content that is - a process in the case of perform goal PG (Hamlet wants to ask Ophelia\n            ...) - a state in the case of - achievement (Hamlet wants Ophelia goes to a nunnery) -\n            maintenance (Hamlet wants Claudius (keeps) believing Hamlet is mad) - query (Hamlet\n            wants to know whether Ophelia is honest) In these various cases the propositional\n            content is different: - Perform Goal - PC: Action - AG - PC: State, embedded in one\n            Belief, with status false or Process, embedded in Belief, with accomplishment false - MG\n            - PC: State or Process, embedded in Belief, with status/accomplishment true - Query Goal\n            - PC: depends on query; e.g.: - Y/N question: the boolean status of a state (currently\n            implemented as a State with status TRUE) - Wh question: the filler of a role in some\n            state or process (currently not implemented) These are guidelines for writing the plans\n            correctly." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#label> "Goal" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2002/07/owl#equivalentClass> _:B04c7cf41a6ec0be308fa9591c321c541 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2002/07/owl#equivalentClass> _:Ba42f676e5e770cc8dfaf1d6e1adc9897 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#UnintentionalProcess> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#comment> "An Action is an intentional Process, which is a type of Process. Formally, an\n            action is an Process which is constrained to be contained (isMemberOf) some Unit. In\n            Drammar, an Action can be part of a plan of an agent (formally, a plan ia a list of\n            actions), or can be included in a Unit (ordered into some timeline). Only direct\n            executable plans (DirectlyExecutablePlan class) contain actions The Action class is\n            formally disjoint with the UnintentionalEventiveProcess class. We have introduced an\n            explicit boolean datatype property isIntentional, because it could be that the\n            annotators will use actions directly in the units (i.e. without explicitly introducing a\n            plan for it)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#label> "Action" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Process> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ValueSchema> <http://www.w3.org/2000/01/rdf-schema#label> "ValueSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ValueSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalStateSchema> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ValueSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "The ValueSchema class describes an agent's Value. Formally,\n            it is a subclass of MentalStateSchema whose property quale_schemaType is constrained to\n            the string \"value\"." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ValueSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ValueSchema> <http://www.w3.org/2002/07/owl#equivalentClass> _:B2782676ae9307e88eeb91aec628bfd25 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#EmotionSchema> <http://www.w3.org/2000/01/rdf-schema#label> "EmotionSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#EmotionSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "An EmotionSchema represents the description of an EmotionState, bridged onto\n            some external linguistic or semantic system through the mediation of the\n            ExternalRefEmotionType class. The EmotionSchema is a MentalStateSchema for describing an\n            Emotion. Formally, it is constrained to the value \"emotion\" for the\n            quale_schemaType data property. The hasExtRef property links the EmotionSchema to the\n            ExternalRefEmotionType class which in turn links the description of the Emotion to a\n            reference theory of emotions." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#EmotionSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#EmotionSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalStateSchema> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#EmotionSchema> <http://www.w3.org/2002/07/owl#equivalentClass> _:B00315999b91631f88f5b0672c6a670b7 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2000/01/rdf-schema#label> "Value" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2000/01/rdf-schema#comment> "The Value Class represents the values of an agent. These values are\n            engaged in drama by the execution of the agents' plans. Formally, a Value is\n            a subclass of the MentalState class which is constrained to: - be in a given state, true\n            or false, of the boolean property atStake - be in a ConsistentStateSet (namely, the\n            consequences of some plan that puts the value at stake or brings it back to balance) -\n            be described by a ValueSchema. For example, in the nunnery scene, Ophelia's\n            answer \"At home, my Lord\", being a lie, results in a state that puts at stake\n            Hamlet's value of honesty." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bcec9b135b80f8f3daff58c1eeff08d15 <http://www.purl.org/drammar> .
<https://saref.etsi.org/saref4watr/Glacier> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://saref.etsi.org/saref4watr/SourceAsset> <https://saref.etsi.org/saref4watr/> .
<https://saref.etsi.org/saref4watr/Glacier> <http://www.w3.org/2000/01/rdf-schema#comment> "A glacier is a persistent body of dense ice that is constantly moving under its own weight."@en <https://saref.etsi.org/saref4watr/> .
<https://saref.etsi.org/saref4watr/Glacier> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://saref.etsi.org/saref4watr/> .
<https://saref.etsi.org/saref4watr/Glacier> <http://www.w3.org/2000/01/rdf-schema#label> "Glacier"@en <https://saref.etsi.org/saref4watr/> .
