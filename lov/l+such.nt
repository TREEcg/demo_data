<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/ns/prov#wasAttributedTo> <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#comment> "The resource was contributed to by the given agent.\n\nSpecifies an agent that provided any sort of help in conceiving the work that is expressed by the digital artifact.\n\nContributions can take many forms, of which PAV define the subproperties pav:authoredBy and pav:curatedBy; however other specific roles could also be specified by pav:contributedBy or custom subproperties, such as illustrating, investigating or managing the underlying data source. Contributions can additionally be expressed in detail using prov:qualifiedAttribution and prov:hadRole.\n\nNote that pav:contributedBy identifies only agents that contributed to the work, knowledge or intellectual property, and not agents that made the digital artifact or representation (pav:createdBy), thus the considerations for software agents is similar to for pav:authoredBy and pav:curatedBy.\n\npav:contributedBy is more specific than its superproperty dct:contributor - which might or might not be interpreted to also cover contributions to making the representation of the artifact.\n\n\nThe date of contribution can be expressed using pav:contributedOn - note however in the case of multiple contributors that there is no relationship in PAV identifying which agent contributed when or what. If capturing such lineage is desired, it should be additionally expressed using PROV relationships like prov:qualifiedAttribution or prov:wasGeneratedBy."@en <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/pav/createdBy> <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/pav/> <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2002/07/owl#equivalentProperty> <http://swan.mindinformatics.org/ontologies/1.2/pav/contributedBy> <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#label> "Contributed by"@en <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://purl.org/dc/terms/contributor> <http://purl.org/pav/> .
<http://purl.org/pav/contributedBy> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/pav/contributedOn> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/pav/authoredOn> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/pav/createdBy> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/pav/> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://purl.org/pav/contributedBy> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#label> "Authored by"@en <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2002/07/owl#equivalentProperty> <http://swan.mindinformatics.org/ontologies/1.2/pav/authoredBy> <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#comment> "An agent that originated or gave existence to the work that is expressed by the digital resource.\n\nThe author of the content of a resource may be different from the creator of the resource representation (although they are often the same). See pav:createdBy for a discussion.\n\npav:authoredBy is more specific than its superproperty dct:creator - which might or might not be interpreted to also cover the creation of the representation of the artifact.\n\nThe author is usually not a software agent (which would be indicated with pav:createdWith, pav:createdBy or pav:importedBy), unless the software actually authored the content itself; for instance an artificial intelligence algorithm which authored a piece of music or a machine learning algorithm that authored a classification of a tumor sample.\n\nThe date of authoring can be expressed using pav:authoredOn - note however in the case of multiple authors that there is no relationship in PAV identifying which agent contributed when or what. If capturing such lineage is desired, it should be additionally expressed using PROV relationships like prov:qualifiedAttribution or prov:wasGeneratedBy."@en <http://purl.org/pav/> .
<http://purl.org/pav/authoredBy> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://purl.org/dc/terms/creator> <http://purl.org/pav/> .
<http://spinrdf.org/spin#imports> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2002/07/owl#Ontology> <http://spinrdf.org/spin> .
<http://spinrdf.org/spin#imports> <http://www.w3.org/2000/01/rdf-schema#label> "imports" <http://spinrdf.org/spin> .
<http://spinrdf.org/spin#imports> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://spinrdf.org/spin#systemProperty> <http://spinrdf.org/spin> .
<http://spinrdf.org/spin#imports> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.w3.org/2002/07/owl#Ontology> <http://spinrdf.org/spin> .
<http://spinrdf.org/spin#imports> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#OntologyProperty> <http://spinrdf.org/spin> .
<http://spinrdf.org/spin#imports> <http://www.w3.org/2000/01/rdf-schema#comment> "Can be used to link an RDF graph (usually the instance of owl:Ontology) with a SPIN library to define constraints. SPIN-aware tools should include the definitions from those libraries for constraint checking. Using such libraries is a simpler alternative than explicitly importing them using owl:imports, because it does not force all the SPIN triples into the RDF model." <http://spinrdf.org/spin> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#comment> "This is a large comment field for those who want to investigate the different uses of the 'expresses' relation for modeling different approaches to meaning characterization and modeling.\nFor example, in all these cases, some aspect of meaning is involved:\n\n- Beehive means \"a structure in which bees are kept, typically in the form of a dome or box.\" (Oxford dictionary)\n- 'Beehive' is a synonym in noun synset 09218159 \"beehive|hive\" (WordNet)\n- 'the term Beehive can be interpreted as the fact of 'being a beehive', i.e. a relation that holds for concepts such as Bee, Honey, Hosting, etc.'\n- 'the text of Italian apiculture regulation expresses a rule by which beehives should be kept at least one kilometer away from inhabited areas'\n- 'the term Beehive expresses the concept Beehive'\n- ''Beehive' for apiculturists does not express the same meaning as for, say, fishermen'\n- 'Your meaning of 'Beautiful' does not seem to fit mine'\n- ''Beehive' is formally interpreted as the set of all beehives'\n- 'from the term 'Beehive', we can build a vector space of statistically significant cooccurring terms in the documents that contain it'\n- the lexeme 'Belly' expresses the role 'Body_Part' in the frame 'ObservableBodyParts' (FrameNet)\n\nAs the examples suggest, the 'meaning of meaning' is dependent on the background approach/theory that one assumes. One can hardly make a summary of the too many approaches and theories of meaning, therefore this relation is maybe the most controversial and difficult to explain; normally, in such cases it would be better to give up formalizing. \nHowever, the usefulness of having a 'semantic abstraction' in modeling information objects is so high (e.g. for the semantic web, interoperability, reengineering, etc.), that we accept this challenging task, although without taking any particular position in the debate. \nWe provide here some examples, which we want to generalize upon when using the 'expresses' relation to model semantic aspects of social reality.\n\nIn the most common approach, lexicographers that write dictionaries, glossaries, etc. assume that the meaning of a term is a paraphrase (or 'gloss', or 'definition'). \nAnother approach is provided by concept schemes like thesauri and lexicons, which assume that the meaning of a term is a 'concept', encoded as a 'lemma', 'synset', or 'descriptor'.\nStill another approach is that of psychologists and cognitive scientists, which often assume that the meaning of an information object is a concept encoded in the mind or cognitive system of an agent. \nA radically different approach is taken by social scientists and semioticians, who usually assume that meanings of an information object are spread across the communication practices in which members of a community use that object.\nAnother approach that tackles the distributed nature of meaning is assumed by geometrical models of semantics, which assume that the meaning of an InformationObject (e.g. a word) results from the set of informational contexts (e.g. within texts) in which that object is used similarly.\nThe logical approach to meaning is still different, since it assumes that the meaning of e.g. a term is equivalent to the set of individuals that the term can be applied to; for example, the meaning of 'Ali' is e.g. an individual person called Ali, the meaning of 'Airplane' is e.g. the set of airplanes, etc. \nFinally, an approach taken by structuralist linguistics and frame semantics is that a meaning is the relational context in which an information object can be applied; for example, a meaning of 'Airplane' is situated e.g. in the context ('frame') of passenger airline flights.\n\nThese different approaches are not necessarily conflicting, and they mostly talk about different aspects of so-called 'semantics'. They can be summarized and modelled within DOLCE-Ultralite as follows (notice that such list is far from exhaustive):\n\n(1) Informal meaning (as for linguistic or commonsense semantics: a distinction is assumed between (informal) meaning and reference; see isAbout for an alternative pattern on reference)\n\t- Paraphrase meaning (as for lexicographic semantics). Here it is modelled as the expresses relation between instances of InformationObject and different instances of InformationObject that act as 'paraphrases'\n\t- Conceptual meaning (as for 'concept scheme' semantics). Here it is modelled as the expresses relation between instances of InformationObject and instances of Concept\n\t- Relational meaning (as for frame semantics). Here it is modelled as the expresses relation between instances of InformationObject and instances of Description\n\t- Cognitive meaning (as for 'psychological' semantics). Here it is modelled as the expresses relation between any instance of InformationObject and any different instance of InformationObject that isRealizedBy a mental, cognitive or neural state (depending on which theory of mind is assumed). Such states can be considered here as instances of Process (occurring in the mind, cognitive system, or neural system of an agent)\n\t- Cultural meaning (as for 'social science' semantics). Here it is modelled as the expresses relation between instances of InformationObject and instances of SocialObject (institutions, cultural paradigms, norms, social practices, etc.)\n\t- Distributional meaning (as for geometrical models of meaning). Here it is modelled as the expresses relation between any instance of InformationObject and any different instance of InformationObject that isFormallyRepresentedIn some (geometrical) Region (e.g. a vector space)\n\n(2) Formal meaning (as for logic and formal semantics: no distinction is assumed between informal meaning and reference, therefore between 'expresses' and 'isAbout', which can be used interchangeably)\n\t- Object-level formal meaning (as in the traditional first-order logic semantics). Here it is modelled as the expresses relation between an instance of InformationObject and an instance of Collection that isGroundingFor (in most cases) a Set; isGroundingFor is defined in the ontology: http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl\n\t- Modal formal meaning (as in possible-world semantics). Here it is modelled as the expresses relation between an instance of InformationObject and an instance of Collection that isGroundingFor a Set, and which isPartOf some different instance of Collection that isGroundingFor a PossibleWorld\n\nThis is only a first step to provide a framework, in which one can model different aspects of meaning. A more developed ontology should approach the problem of integrating the different uses of 'expresses', so that different theories, resources, methods can interoperate." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#label> "esprime"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#associatedWith> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#InformationObject> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#SocialObject> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#comment> "A relation between an InformationObject and a 'meaning', generalized here as a 'SocialObject'. For example: 'A Beehive is a structure in which bees are kept, typically in the form of a dome or box.' (Oxford dictionary)'; 'the term Beehive expresses the concept Beehive in my apiculture ontology'.\nThe intuition for 'meaning' is intended to be very broad. A separate, large comment is included for those who want to investigate more on what kind of meaning can be represented in what form." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isExpressedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses> <http://www.w3.org/2000/01/rdf-schema#label> "expresses"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.opengis.net/ont/sf#PolyhedralSurface> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.opengis.net/ont/sf#Surface> <http://www.opengis.net/ont/sf> .
<http://www.opengis.net/ont/sf#PolyhedralSurface> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.opengis.net/ont/sf> <http://www.opengis.net/ont/sf> .
<http://www.opengis.net/ont/sf#PolyhedralSurface> <http://www.w3.org/2000/01/rdf-schema#label> "Polyhedral Surface"@en <http://www.opengis.net/ont/sf> .
<http://www.opengis.net/ont/sf#PolyhedralSurface> <http://www.w3.org/2000/01/rdf-schema#comment> "\nA PolyhedralSurface is a contiguous collection of polygons, which share common boundary segments. For each pair of polygons that touch, the common boundary shall be expressible as a finite collection of LineStrings. Each such LineString shall be part of the boundary of at most 2 Polygon patches. \nFor any two polygons that share a common boundary, the top of the polygon shall be consistent. This means that when two LinearRings from these two Polygons traverse the common boundary segment, they do so in opposite directions. Since the Polyhedral surface is contiguous, all polygons will be thus consistently oriented. This means that a non-oriented surface (such as Mbius band) shall not have single surface representations. They may be represented by a MultiSurface.\nIf each such LineString is the boundary of exactly 2 Polygon patches, then the PolyhedralSurface is a simple, closed polyhedron and is topologically isomorphic to the surface of a sphere. By the Jordan Surface Theorem (Jordans Theorem for 2-spheres), such polyhedrons enclose a solid topologically isomorphic to the interior of a sphere; the ball. In this case, the top of the surface will either point inward or outward of the enclosed finite solid. If outward, the surface is the exterior boundary of the enclosed surface. If inward, the surface is the interior of the infinite complement of the enclosed solid. A Ball with some number of voids (holes) inside can thus be presented as one exterior boundary shell, and some number in interior boundary shells.\n    "@en <http://www.opengis.net/ont/sf> .
<http://www.opengis.net/ont/sf#PolyhedralSurface> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.opengis.net/ont/sf> .
<http://www.opengis.net/ont/sf#PolyhedralSurface> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://www.opengis.net/ont/sf> .
<http://ns.inria.fr/ludo/v1/xapi#hasVersion> <http://www.w3.org/2000/01/rdf-schema#label> "Version"@en <http://ns.inria.fr/ludo/v1/xapi> .
<http://ns.inria.fr/ludo/v1/xapi#hasVersion> <http://www.w3.org/2000/01/rdf-schema#comment> "Version information in Statements helps systems that process data from an LRS get their bearings. Since the Statement data model is guaranteed consistent through all 1.0.x versions, in order to support data flow among such LRSs the LRS is given some flexibility on Statement versions that are accepted."@en <http://ns.inria.fr/ludo/v1/xapi> .
<http://ns.inria.fr/ludo/v1/xapi#hasVersion> <http://www.w3.org/2000/01/rdf-schema#domain> <http://ns.inria.fr/ludo/v1/xapi#Statement> <http://ns.inria.fr/ludo/v1/xapi> .
<http://ns.inria.fr/ludo/v1/xapi#hasVersion> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#string> <http://ns.inria.fr/ludo/v1/xapi> .
<http://ns.inria.fr/ludo/v1/xapi#hasVersion> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://ns.inria.fr/ludo/v1/xapi> .
<http://ns.inria.fr/munc#uncertaintyOperator> <http://www.w3.org/2000/01/rdf-schema#domain> <http://ns.inria.fr/munc#uncertaintyFeature> <http://ns.inria.fr/munc/> .
<http://ns.inria.fr/munc#uncertaintyOperator> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://ns.inria.fr/munc/> .
<http://ns.inria.fr/munc#uncertaintyOperator> <http://www.w3.org/2000/01/rdf-schema#range> <http://ns.inria.fr/munc#UncertaintyOperation> <http://ns.inria.fr/munc/> .
<http://ns.inria.fr/munc#uncertaintyOperator> <http://www.w3.org/2000/01/rdf-schema#comment> "Each Uncertainty approach has its own logic to reason over metadata, This class defines the methods that can be applied over Uncertainty Values. Such logic is the same used in reasoners and inference engines."@en <http://ns.inria.fr/munc/> .
<http://ns.inria.fr/munc#uncertaintyOperator> <http://www.w3.org/2000/01/rdf-schema#label> "uncertaintyOperator"@en <http://ns.inria.fr/munc/> .
<https://w3id.org/gom#AffineCoordinateSystemTransformation> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <https://w3id.org/gom#> <https://w3id.org/gom> .
<https://w3id.org/gom#AffineCoordinateSystemTransformation> <http://www.w3.org/2000/01/rdf-schema#label> "Affine Coordinate System Transformation"@en <https://w3id.org/gom> .
<https://w3id.org/gom#AffineCoordinateSystemTransformation> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://w3id.org/gom#CoordinateSystemTransformation> <https://w3id.org/gom> .
<https://w3id.org/gom#AffineCoordinateSystemTransformation> <http://www.w3.org/2000/01/rdf-schema#comment> "An affine transformation between 3D Cartesian Coordinate Systems. An instance of this class links to exactly two gom:CartesianCoordinateSystem instances using resp. gom:fromCartesianCoordinateSystem and gom:toCartesianCoordinateSystem. Each instance of gom:AffineCoordinateSystemTransformation also links to one or multiple literals containing matrices defining the transformation. In the simplest example, there is only one such linked literal containing an entire 4 X 4 transformation matrix, linked with the gom:hasTransformationMatrix datatype property."@en <https://w3id.org/gom> .
<https://w3id.org/gom#AffineCoordinateSystemTransformation> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://w3id.org/gom> .
