<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#posTag> <http://www.w3.org/2002/07/owl#versionInfo> "discouraged" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#posTag> <http://www.w3.org/2000/01/rdf-schema#comment> "To include the pos tag as it comes out of the NLP tool as RDF Literal. This property is discouraged to use alone, please use oliaLink and oliaCategory.  We included it, because some people might still want it and will even create their own property, if the string variant is missing " <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#posTag> <http://www.w3.org/2000/01/rdf-schema#label> "Part of speech tag"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#posTag> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#posTag> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#string> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#posTag> <http://www.w3.org/2000/01/rdf-schema#domain> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#String> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/2000/01/rdf-schema#comment> "The NLP Interchange Format (NIF) is an RDF/OWL-based format that aims to achieve interoperability between Natural Language Processing (NLP) tools, language resources and annotations. NIF consists of specifications, ontologies and software, which are combined under the version identifier \"2.0\", but are versioned individually. This ontology is developed by the NLP2RDF project (http://nlp2rdf.org) and provided as part of NIF 2.0 under CC-BY license as well as Apache 2.0. The ontology contains seven core URIs (String, RFC5147String, Context, isString, referenceContext, beginIndex, endIndex) that provide the foundation  to express NLP annotations effectively in RDF."@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/contributor> "Martin Brümmer" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/contributor> "Navid Nourbakhsh" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/nif-core-val.ttl> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/terms/license> <http://creativecommons.org/licenses/by/3.0/> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/vocab/vann/changes> <https://github.com/NLP2RDF/persistence.uni-leipzig.org/commits/master/ontologies/nif-core> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/terms/title> "NIF 2.0 Core Ontology"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/rights> "This ontology is licensed under Apache 2.0 (http://www.apache.org/licenses/LICENSE-2.0) and CC-BY (http://creativecommons.org/licenses/by/3.0/)"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/description> "For a more concise description about NIF, we refer the reader to the ISWC 2013 in Use paper: Integrating NLP using Linked Data by Sebastian Hellmann, Jens Lehmann, Sören Auer, and Martin Brümmer available at: http://svn.aksw.org/papers/2013/ISWC_NIF/public.pdf Also the NLP2RDF project page (http://nlp2rdf.org) provides more general documentation and pointers.\n    The NIF 2.0 Core Ontology (http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#) provides classes and properties to describe the relations between substrings, text, documents by assigning URIs to strings. These URIs can then be used as subjects in RDF triples and therefore they can be annotated easily. The NIF 2.0 Core Specification defines how such URIs are created and used: http://persistence.uni-leipzig.org/nlp2rdf/specification/core.html and it makes sense to read this document first, so you can understand the definitions in this ontology better. \n    \n    The main class in this ontology is nif:String, which is the class of all words over the alphabet of Unicode characters (sometimes called Σ∗). We built NIF upon the Unicode Normalization Form C, as this follows the recommendation of the RDF standard for rdf:Literal. Indices are to be counted in code units as is common in most programming language and SPARQL engines ( see 17.4.3.2 STRLEN and 17.4.3.3 SUBSTR on http://www.w3.org/TR/sparql11-query/). \n    \n    Each URI Scheme (nif:URIScheme) used to address strings is a subclass of nif:String and puts further restrictions over the syntax of the URIs.  For example, instances of type nif:RFC5147String have to adhere to the Syntax and Semantics of RFC 5147 (http://tools.ietf.org/html/rfc5147). Users of NIF can create their own URI schemes by subclassing nif:String and providing documentation on the Web in the rdfs:comment field.\n    \n    Another important  subclass of nif:String is the nif:Context OWL class. This class is assigned to the whole string of the text (i.e. all characters). The purpose of an individual of this class is special, because the string of this individual is used to calculate the indices for all substrings. Therefore, all substrings have to have a relation nif:referenceContext pointing to an instance of nif:Context. Furthermore, the datatype property nif:isString can be used to include the reference text as a literal within the RDF as is required for the web service scenario. An example of NIF Core can be seen on the top left of the example Figure.  \n\t\n\tOntology models\n\tThis ontology is split in different complimentary parts:\n\t* a terminological model (containing rdfs:comment, rdfs:label, rdfs:subClassOf, rdfs:subPropertyOf, rdfs:range and rdfs:domain statements)\n\t* an inference model (containing owl:TransitiveProperty, owl:hasKey), see nif-core-inf.ttl\n\t* a validation model (containing owl:FunctionalProperty, owl:DisjointWith), see nif-core-val.ttl\n\t* a Stanford profile model (containing a more complex structure)\n\tAn overview is given at the bottom of: http://persistence.uni-leipzig.org/nlp2rdf/ \n\n\tFeedback\n\tIf you'd like to leave feedback, please open an issue on GitHub (https://github.com/NLP2RDF/ontologies/issues) and read the README (https://github.com/NLP2RDF/ontologies#readme) or write an email to the mailing list: http://lists.informatik.uni-leipzig.de/mailman/listinfo/nlp2rdf\n\n\tVersioning process is explained here: http://persistence.uni-leipzig.org/nlp2rdf/specification/version.html Changelog is written to rdfs:comment (resource level versioning).\n"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/terms/license> <http://www.apache.org/licenses/LICENSE-2.0> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/publisher> "AKSW, University Leipzig" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/vocab/vann/preferredNamespaceUri> "http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/2002/07/owl#versionInfo> "Versioning done on resource level. See https://github.com/NLP2RDF/ontologies/blob/master/nif-core/nif-core.ttl" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/2000/01/rdf-schema#label> "NIF 2.0 Core Ontology"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/vocab/vann/preferredNamespacePrefix> "nif" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/creator> "Sebastian Hellmann" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/nif-core-inf.ttl> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/nif-core.ttl> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> <http://purl.org/dc/elements/1.1/description> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/nif-core-ontology_web.png> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2000/01/rdf-schema#label> "Word"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Structure> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2000/01/rdf-schema#comment> "\n    The Word class represents strings that are tokens or words. A string is a Word, if it is a word. We don't nitpic about whether it is a a pronoun, a name, a punctuation mark or an apostrophe or whether it is separated by white space from another Word or something else. The string 'He enters the room.' for example has 5 words. Words are assigned by a tokenizer NIF Implementation. Single word phrases might be tagged as nif:Word and nif:Phrase. \n    \n    Example 1: \"The White House\" are three Words separated by whitespace\n        \n    Comment 1: We adopted the definition style from foaf:Person, see here: http://xmlns.com/foaf/spec/#term_Person We are well aware that the world out there is much more complicated, but we are ignorant about it, for the following reasons:\n    Comment 2:  \n    \n    1. NIF has a client-server and the client has the ability to dictate the tokenization to the server (i.e. the NIF Implementation) by sending properly tokenized NIF annotated with nif:Word. All NIF Implementations are supposed to honor and respect the current assignment of the Word class. Thus the client should decide which NIF Implementation should create the tokenization. Therefore this class is not descriptive, but prescriptive.\n    2. The client may choose to send an existing tokenization to a NIF Implementation, with the capability to change (for better or for worse) the tokenization. \n    \n    \n   \n    The class has not been named 'Token' as the NLP definition of 'token' is descriptive (and not well-defined), while the assignment of what is a Word and what not is prescriptive, e.g. \"can't\" could be described as one, two or three tokens or defined as being one, two or three words. For further reading, we refer the reader to: By all these lovely tokens... Merging conflicting tokenizations by Christian Chiarcos, Julia Ritz, and Manfred Stede. Language Resources and Evaluation 46(1):53-74 (2012) or the short form: http://www.aclweb.org/anthology/W09-3005\n    There the task at hand is to merge two tokenization T_1 and T_2 which is normally not the case in the NIF world as tokenization is prescribed, i.e. given as a baseline (Note that this ideal state might not be achieved by all implementations.)\n    \n    Changelog:\n    * 0.1.1 fixed spelling\n    * 0.2.1 added a proper definition.\n    * 0.2.3 added examples and clarifications\n    "@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2002/07/owl#versionInfo> "0.2.2" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
