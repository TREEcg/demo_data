<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/creator> "DERI International" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/type> "http://www.w3.org/2000/01/rdf-schema#Class" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/title> "Location"@EN <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/date> "2004-10-20" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/format> "application/rdf+xml" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/rights> "http://www.deri.org/privacy.html" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/publisher> "DERI International" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/coverage> "world" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://www.w3.org/2000/01/rdf-schema#comment> "This class is the superclass for all classes defining geographical locations. The approach for this subontology is to have a hierarchy of location classes, such that instances of the classes further down in the hierarchy can be contained in instances of the classes higher up in the hierarchy. On each level, there exist two sister classes: class L defines a certain type of location, while class SubL defines locations which can be contained in instances of L. SubL then defines a property inL, to express which instance of L an instance of SubL is contained in. E.g. for a class Continent, there exists a class SubContinent. All children of SubContinent (either direct or transitive) define locations that can be contained in a continent, such as countries, regions, cities, etc. By virtue of inheritance, all these location classes then have a property inContinent, to express that they are contained in some continent. In a simpler, flat structure, inContinent would have to be defined explicitly for all kinds of locations that can be contained in a continent.\nThe intepretation of the inL predicates should be as follows: if, for a particular instance K, inL has a value, this value is valid. If inL has no value, the value of inL in the next location K is contained in valid, and so forth. E.g. an instance \"Hawaii\" has the value \"Oceania\" defined for <link>inContinent</link> and \"USA\" for <link>inCountry</link>. \"Delaware\" has no value for inContinent. \"USA\" has the value \"North America\" for <link>inContinent</link>. The interpretation would be that \"Hawaii\" is located in \"Oceania\", while \"Delaware\" is located in \"North America\".\nWe are aware of the fact that this approach is idealized and can therefore conflict with reality in some situations. E.g., the exact borders of continents are not always defined (there are contradicting opinions on where exactly Europe begins or ends). Countries could be contained in more than one continent (Turkey belongs to both Europe and Asia). However, we think that these situations are marginal and have little or no impact on the intended use of this ontology.\nWe think that this recursive modelling of locations is at the same time simple and powerful enough to capture all necessary aspects of the concept of location for a domain such as an SWPortal. While the SubL classes might appear to be somewhat artificial, they are actually not. They are just an abstraction for geographical entities that are (under normal circumstances) smaller than entities of type L. As such, they are no more abstract than, say, the concept of an agent.\n" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://www.w3.org/2000/01/rdf-schema#label> "Location"@en <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/description> "This class is the superclass for all classes defining geographical locations. The approach for this subontology is to have a hierarchy of location classes, such that instances of the classes further down in the hierarchy can be contained in instances of the classes higher up in the hierarchy. On each level, there exist two sister classes: class L defines a certain type of location, while class SubL defines locations which can be contained in instances of L. SubL then defines a property inL, to express which instance of L an instance of SubL is contained in. E.g. for a class Continent, there exists a class SubContinent. All children of SubContinent (either direct or transitive) define locations that can be contained in a continent, such as countries, regions, cities, etc. By virtue of inheritance, all these location classes then have a property inContinent, to express that they are contained in some continent. In a simpler, flat structure, inContinent would have to be defined explicitly for all kinds of locations that can be contained in a continent.\nThe intepretation of the inL predicates should be as follows: if, for a particular instance K, inL has a value, this value is valid. If inL has no value, the value of inL in the next location K is contained in valid, and so forth. E.g. an instance \"Hawaii\" has the value \"Oceania\" defined for <link>inContinent</link> and \"USA\" for <link>inCountry</link>. \"Delaware\" has no value for inContinent. \"USA\" has the value \"North America\" for <link>inContinent</link>. The interpretation would be that \"Hawaii\" is located in \"Oceania\", while \"Delaware\" is located in \"North America\".\nWe are aware of the fact that this approach is idealized and can therefore conflict with reality in some situations. E.g., the exact borders of continents are not always defined (there are contradicting opinions on where exactly Europe begins or ends). Countries could be contained in more than one continent (Turkey belongs to both Europe and Asia). However, we think that these situations are marginal and have little or no impact on the intended use of this ontology.\nWe think that this recursive modelling of locations is at the same time simple and powerful enough to capture all necessary aspects of the concept of location for a domain such as an SWPortal. While the SubL classes might appear to be somewhat artificial, they are actually not. They are just an abstraction for geographical entities that are (under normal circumstances) smaller than entities of type L. As such, they are no more abstract than, say, the concept of an agent.\n"@EN <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://sw-portal.deri.org/ontologies/swportal> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#label> "defines lifecycle of instances"@en <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://purl.org/vocab/vann/example> "Der Lebenszyklus von Geschäftsobjeten des BOT 'Sendung' ist definiert durch den Sendsungslebenszyklus: 'Sendungsdaten erfasst','Bearbeitet im Start-Paketzentrum', 'Bearbeitet im Ziel-Paketzentrum', 'ausgeliefert'"@de <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#comment> "Specifies the life cycle of the Business Object instances on the conceptual type level. The current life cycle state of an individual Business Object is referred to from each Business Object via the property lifecycle:state."@en <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.data-knowledge.org/dk/> <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.data-knowledge.org/dk/DataLifecycle> <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#comment> "Spezifiziert den Lebenszyklus der Geschäftsobjektinstanzen auf der konzeptuellen Typebene. Der aktuelle Lebenszyklusstatus eines individuellen Geschäftsobjekts wird von jedem Geschäftsobjekt über die Relation lifecycle:state referenziert."@de <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.data-knowledge.org/dk/DataConceptualization> <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://purl.org/vocab/vann/example> "The life cycle of Business Objects of BOT 'Shipment' is defined by the Shipment Life Cycle: 'Shipment data collected', 'Handled at start parcel center', 'Handled at destination parcel center', 'Delivered'"@en <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.data-knowledge.org/dk/> .
<http://www.data-knowledge.org/dk/definesLifecycleOfInstances> <http://www.w3.org/2000/01/rdf-schema#label> "definiert den Lebenszyklus von Instanzen"@de <http://www.data-knowledge.org/dk/> .
