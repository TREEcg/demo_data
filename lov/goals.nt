<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#comment> "The Goal class represents the objectives of an agent. In the BDI model, the\n            agent is driven by her desires, or goal, and forms plans to achieve them. In Drammar, a\n            goal is achieved by a plan; the achives object property connects a plan with the goal it\n            achieves (a single goal, since the achieves property is functional). An agent intends\n            (intends object property) a goal. Formally, the Goal class is a defined as a subclass of\n            the MentalState class which is constrained: - to be the goal of some agent - to be part\n            of some ConsistentStateState - to be described by a GoalSchema Goal has a propositional\n            content that is - a process in the case of perform goal PG (Hamlet wants to ask Ophelia\n            ...) - a state in the case of - achievement (Hamlet wants Ophelia goes to a nunnery) -\n            maintenance (Hamlet wants Claudius (keeps) believing Hamlet is mad) - query (Hamlet\n            wants to know whether Ophelia is honest) In these various cases the propositional\n            content is different: - Perform Goal - PC: Action - AG - PC: State, embedded in one\n            Belief, with status false or Process, embedded in Belief, with accomplishment false - MG\n            - PC: State or Process, embedded in Belief, with status/accomplishment true - Query Goal\n            - PC: depends on query; e.g.: - Y/N question: the boolean status of a state (currently\n            implemented as a State with status TRUE) - Wh question: the filler of a role in some\n            state or process (currently not implemented) These are guidelines for writing the plans\n            correctly." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#label> "Goal" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bc92d95397ae1e3560df8d869c3f0fd84 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#state> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bff623e773c0d2c4053957f8b93acc148 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#comment> "State represents the static class of the Perdurant. State is the class that\n            bridges to the concept of State in upper ontologies, externally to Drammar. For example,\n            in DOLCE, states and process are the two distinct types of statives. Both factual and\n            eventive states are further divided into different state types: - MentalStates, namely\n            Belief, Goals, Values and Emotions (all sharing some propositional content in their\n            description); - StateOfAffairs, namely situations holding in the world. States participate\n            to some structure. In Drammar, these structures are ConsistenStateSets (types of Sets),\n            which borders timelines and plans. The specific type pf States are defined through the\n            use of specific types of StateSchema (subclass of DescriptionTemplate). So, its\n            subclasses are: - MentalState: the mental state of an agent; - StateOfAffairs: an\n            objective state of the story world." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#label> "State" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Schema_type> <http://www.w3.org/2000/01/rdf-schema#range> _:Bc39e9f34edd89f3daa5c9d86ffc1c241 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Schema_type> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#SituationSchema> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Schema_type> <http://www.w3.org/2000/01/rdf-schema#comment> "This datatype property represents the type of schema for some construct. Its\n            value correspond to the different types of state acknowledged in Drammar : beliefs,\n            goals, etc. Each value correspond to a state type: e.g., \"belief\" for the\n            Belief class. In particular, framenet is the magic word for the schemata extracted from\n            Framenet." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Schema_type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Schema_type> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/2002/07/owl#topDataProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Schema_type> <http://www.w3.org/2000/01/rdf-schema#label> "Schema_type" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/2000/01/rdf-schema#label> "hasGoal" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.purl.org/drammar#isGoalOf> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.purl.org/drammar#hasMentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#Goal> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Agent> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/2000/01/rdf-schema#comment> "The property which connects an agent with her/his goals." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasGoal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B3900329bcec474a721e9dd6156884a49 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2000/01/rdf-schema#comment> "Agent. Derived from BDI model, a mentalist model of agent which sees the agent\n            as a rational entity who form intentions, or plans, (based on her beliefs) to achieve\n            her desires (or goals). See Bratman et al. 1988 and Cohen and Levesque 1995. Agents are\n            those entities in drama, that potentially - have goals (object property hasGoal); -\n            intend plans to achieve goals (object property intends); - participate in actions with\n            some role (object property isFillerOf); In addition, agents have emotional states (as a\n            result of targeted emotions appraisal processes) and have moral values (hasValue): -\n            feel emotions as a result of a cognitive appraisal process (specific object properties\n            link each the appraisal of each emotion type to the agent); - have values (object\n            property hasValue); The requirement, in drama, is that an agent has a plan, since the\n            fact of having a goal would not be sufficient to ensure that the goal is translated into\n            some concrete, perceivable behavior in drama. Having a plan, instead, implies that the\n            agent also has goal. Notice that some Agent (e.g. Polonius) is involved in an action\n            without being intentional (e.g., being the topic of a conversation), it remains\n            classified as an Agent in Drammar, though it fills a different role in the frame (e.g.,\n            Topic of Conversation). References: Bratman, M. E., Israel, D. J., & Pollack, M. E.\n            (1988). Plans and resourceâbounded practical reasoning. Computational intelligence,\n            4(3), 349-355. Cohen, P. R., & Levesque, H. J. (1995, June). Communicative Actions\n            for Artificial Agents. In ICMAS (Vol. 95, pp. 65-72)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2002/07/owl#equivalentClass> _:B63447b25934404f7e81e4527e87b3a01 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2000/01/rdf-schema#label> "Agent" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#Object> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaEndurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inSupportOf> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inSupportOf> <http://www.w3.org/2000/01/rdf-schema#comment> "The support relation over goals (parallel to inConflictWith)" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inSupportOf> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inSupportOf> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/2002/07/owl#topObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inSupportOf> <http://www.w3.org/2000/01/rdf-schema#label> "inSupportOf" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inSupportOf> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isPropositionalContentOf> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isPropositionalContentOf> <http://www.w3.org/2000/01/rdf-schema#comment> "Inverse of hasPropositionalContent. It links a BeliefSchema or a GoalSchema to\n            a State or Process." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isPropositionalContentOf> <http://www.w3.org/2000/01/rdf-schema#label> "isPropositionalContentOf" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2000/01/rdf-schema#label> "MentalState" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2000/01/rdf-schema#comment> "MentalStates are EventiveStates that are attributed to the mind of an agent.\n            There are four types of mental states: 1. Emotion 2. Belief 3. Goal 4. Value Belief and\n            Goal are traditionally described as having a propositional content because they both\n            concern some attitude of the agent toward a proposition; in Drammar, we don't\n            enforce this distinction because the reference theoriesd we adopt for emotion and values\n            also enforce some time of propositional content. The only difference is that only the\n            schema types for beliefs and goals (BeliefSchema and GoalSchema) have a propositional\n            content attached to it (through the propositionalContent object property). A MentalState\n            is defined as an EventiveState that is described by a MentalStateSchema. The latter are\n            to be specified as EmotionSchema, BeliefSchema, GoalSchema, ValueSchema,\n            depending on the MentalState type: so, the MentalStateSchema type works as a selector\n            for the right trait of the mental schema." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#State> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bd72c191414c83afd9aa4f13ccddf15ec <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inConflictWith> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inConflictWith> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#SymmetricProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inConflictWith> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inConflictWith> <http://www.w3.org/2000/01/rdf-schema#label> "inConflictWith" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inConflictWith> <http://www.w3.org/2000/01/rdf-schema#comment> "The conflict relation over plans. The ontology is neutral with respect with\n            conflicts over other entity types, such a goals: it only assumes that conflicts over\n            plans are observable." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#inConflictWith> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<https://w3id.org/dingo#CareerPurposeCriterion> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://w3id.org/dingo#Criterion> <https://w3id.org/dingo/> .
<https://w3id.org/dingo#CareerPurposeCriterion> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <https://w3id.org/dingo#> <https://w3id.org/dingo/> .
<https://w3id.org/dingo#CareerPurposeCriterion> <http://www.w3.org/2000/01/rdf-schema#label> "CareerPurposeCriterion" <https://w3id.org/dingo/> .
<https://w3id.org/dingo#CareerPurposeCriterion> <http://www.w3.org/2000/01/rdf-schema#comment> "Specifies that grants are awarded on the basis of career-related goals and applicants must be at a defined career stage (defined academic degree) to be achieved." <https://w3id.org/dingo/> .
<https://w3id.org/dingo#CareerPurposeCriterion> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <https://w3id.org/dingo/> .
<https://saref.etsi.org/saref4inma/Factory> <http://www.w3.org/2000/01/rdf-schema#label> "Factory"@en <https://saref.etsi.org/saref4inma/> .
<https://saref.etsi.org/saref4inma/Factory> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://saref.etsi.org/saref4bldg/Building> <https://saref.etsi.org/saref4inma/> .
<https://saref.etsi.org/saref4inma/Factory> <http://www.w3.org/2000/01/rdf-schema#comment> "A subclass of s4bldg:Building specialized for the purpose of SAREF4INMA, a factory represents one or more organizations sharing a definit mission, goals and objectives which provides an output such as a product (definition taken from IEC 62264). A factory can be divided in one or multiple sites. " <https://saref.etsi.org/saref4inma/> .
<https://saref.etsi.org/saref4inma/Factory> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://saref.etsi.org/saref4inma/> .
