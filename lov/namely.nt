<http://www.biopax.org/release/biopax-level3.owl#BiochemicalReaction> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.biopax.org/release/biopax-level3.owl#ComplexAssembly> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#BiochemicalReaction> <http://www.w3.org/2000/01/rdf-schema#comment> "Definition: A conversion in which molecules of one or more physicalEntity pools, undergo covalent modifications and become a member of one or more other physicalEntity pools. The substrates of biochemical reactions are defined in terms of sums of species. This is a convention in biochemistry, and, in principle, all EC reactions should be biochemical reactions.\n\nExamples: ATP + H2O = ADP + Pi\n\nComment: In the example reaction above, ATP is considered to be an equilibrium mixture of several species, namely ATP4-, HATP3-, H2ATP2-, MgATP2-, MgHATP-, and Mg2ATP. Additional species may also need to be considered if other ions (e.g. Ca2+) that bind ATP are present. Similar considerations apply to ADP and to inorganic phosphate (Pi). When writing biochemical reactions, it is not necessary to attach charges to the biochemical reactants or to include ions such as H+ and Mg2+ in the equation. The reaction is written in the direction specified by the EC nomenclature system, if applicable, regardless of the physiological direction(s) in which the reaction proceeds. Polymerization reactions involving large polymers whose structure is not explicitly captured should generally be represented as unbalanced reactions in which the monomer is consumed but the polymer remains unchanged, e.g. glycogen + glucose = glycogen. A better coverage for polymerization will be developed." <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#BiochemicalReaction> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.biopax.org/release/biopax-level3.owl#Degradation> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#BiochemicalReaction> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.biopax.org/release/biopax-level3.owl#Conversion> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.biopax.org/release/biopax-level3.owl#BiochemicalReaction> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.biopax.org/release/biopax-level3.owl> .
<http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#SDTV_480i> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#TVDisplayResolution> <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1> .
<http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#SDTV_480i> <http://www.w3.org/2000/01/rdf-schema#label> "SDTV 480i"@de <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1> .
<http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#SDTV_480i> <http://www.w3.org/2000/01/rdf-schema#label> "SDTV 480i"@en <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1> .
<http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#SDTV_480i> <http://www.w3.org/2000/01/rdf-schema#comment> "480i is the shorthand name for a video mode, namely the U.S. NTSC television system or digital television systems with the same characteristics. The i, which is sometimes uppercase, stands for interlaced, the 480 for a vertical frame resolution of 480 lines containing picture information; while NTSC has a total of 525 lines, only 480 of these are used to display the image.\n\n(This description is partly based on or reuses content from the Wikipedia article \"480i\" (http://en.wikipedia.org/wiki/480i) and is licensed under the GNU Free Documentation License (http://www.gnu.org/copyleft/fdl.html).)"@en <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1> .
<http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#SDTV_480i> <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1#belongsToModule> "TV"@en <http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1> .
<http://www.ontotext.com/proton/protonext#PieceOfArt> <http://www.w3.org/2000/01/rdf-schema#label> "Piece of Art"@en <http://www.ontotext.com/proton/protonext> .
<http://www.ontotext.com/proton/protonext#PieceOfArt> <http://www.w3.org/2000/01/rdf-schema#comment> "An artifact, namely a piece of art, usually, matterial object. Typical instances are paintings and sculptures. Corresponds to the Wordnet 1.7.1 synset \"art, fine art - the products of human creativity; works of art collectively; \"an art exhibition\"@en ; \"a fine collection of art\")\""@en <http://www.ontotext.com/proton/protonext> .
<http://www.ontotext.com/proton/protonext#PieceOfArt> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ontotext.com/proton/protonext> .
<http://www.ontotext.com/proton/protonext#PieceOfArt> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ontotext.com/proton/protontop#Object> <http://www.ontotext.com/proton/protonext> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://ns.inria.fr/ludo/v1/gamemodel#> <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#string> <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#label> "Has Event Trigger Class"@en <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2002/07/owl#propertyDisjointWith> <http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerCommand> <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#comment> "Event triggers are used to invoke the transition between game sections and activate the game events within a game scenario. They can be classified into four distinct classes, namely: Input trigger detects user input via hardware interface or graphical user interface (GUI); Time trigger is essentially a countdown timer with an interval value with frequency of once, to repeat infinitely or to repeat finitely; Proximity trigger like input trigger has a hotspot that detects the collision of a specified game object, a class of game object or a group of game objects from different classes; Game mechanics trigger is associated to a range of game application related of events such media event, game event and simulation event. Each event trigger is associated with a command that specify the transition between game sections or activation of a game event."@en <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable" <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#domain> <http://ns.inria.fr/ludo/v1/gamemodel#EventTrigger> <http://ns.inria.fr/ludo/v1/gamepresentation#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#label> "Has Event Trigger Class"@en <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#string> <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://ns.inria.fr/ludo/v1/gamemodel#> <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#comment> "Event triggers are used to invoke the transition between game sections and activate the game events within a game scenario. They can be classified into four distinct classes, namely: Input trigger detects user input via hardware interface or graphical user interface (GUI); Time trigger is essentially a countdown timer with an interval value with frequency of once, to repeat infinitely or to repeat finitely; Proximity trigger like input trigger has a hotspot that detects the collision of a specified game object, a class of game object or a group of game objects from different classes; Game mechanics trigger is associated to a range of game application related of events such media event, game event and simulation event. Each event trigger is associated with a command that specify the transition between game sections or activation of a game event."@en <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2002/07/owl#propertyDisjointWith> <http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerCommand> <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable" <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://ns.inria.fr/ludo/v1/gamemodel#hasEventTriggerClass> <http://www.w3.org/2000/01/rdf-schema#domain> <http://ns.inria.fr/ludo/v1/gamemodel#EventTrigger> <http://ns.inria.fr/ludo/v1/gamemodel#> .
<http://purl.org/toco/PhysicalInfrastructure> <http://www.w3.org/2000/01/rdf-schema#comment> "Describe all the physical resources in a telecommunication network system, which is divided into three main modules, namely, device, interface, link. \n\nPlease be reminded the electromagnetic wave (which is the links of all wireless communication netwoks), even if it is invisable, physically exists. Thus, it is also described in the subclass of \"net;PhysicalInfrastructure\"." <http://purl.org/toco/> .
<http://purl.org/toco/PhysicalInfrastructure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/toco/> .
<http://www.purl.org/drammar#isDataOf> <http://www.w3.org/2000/01/rdf-schema#comment> "isDataOf connects some entity to a data structure component (namely, an\n            OrderedListElement) of which it is the content." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isDataOf> <http://www.w3.org/2000/01/rdf-schema#label> "isDataOf" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isDataOf> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#label> "isMotivationFor" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#Timeline> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#comment> "A plan is the motivation for a timeline, namely for a list of units containing\n            actions. This property is functional: so, a plan can motivate only a timeline. Notice\n            that this implies that a plan cannot motivate the same timeline motivated by a sub-plan,\n            and that a plan cannot motivate the same timeline motivated by a more abstract plan. Of\n            course, the fact that this property is functional does not imply that a single timeline\n            cannot be motivated by more plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#FunctionalProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#state> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2002/07/owl#equivalentClass> _:B67d36bca81285cecfb21957b9e3f133e <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#comment> "State represents the static class of the Perdurant. State is the class that\n            bridges to the concept of State in upper ontologies, externally to Drammar. For example,\n            in DOLCE, states and process are the two distinct types of statives. Both factual and\n            eventive states are further divided into different state types: - MentalStates, namely\n            Belief, Goals, Values and Emotions (all sharing some propositional content in their\n            description); - StateOfAffairs, namely situations holding in the world. States participate\n            to some structure. In Drammar, these structures are ConsistenStateSets (types of Sets),\n            which borders timelines and plans. The specific type pf States are defined through the\n            use of specific types of StateSchema (subclass of DescriptionTemplate). So, its\n            subclasses are: - MentalState: the mental state of an agent; - StateOfAffairs: an\n            objective state of the story world." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#label> "State" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DataStructure> <http://www.w3.org/2000/01/rdf-schema#comment> "DataStructure This class encodes the data structures that provide structural\n            organization to the other entities. It includes abstract data types (namely sets, lists\n            and trees) and data type components." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DataStructure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DataStructure> <http://www.w3.org/2000/01/rdf-schema#label> "DataStructure" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/2000/01/rdf-schema#comment> "Timeline Timeline is a subclass of List whose function is to impose some\n            ordering on the units in a drama. Notice that the notion of timeline cannot be collapsed\n            onto the actual text: rather, it is simply an indexing posed upon units (which\n            correspond to a manifestation of drama in FRBR sense). In formal terms, the orders\n            object property has Timeline as its domain and units as its range, so a unit\n            \"orders\" some units. A Timeline contains unit. Formally, the elements\n            (OrderedListElements class) contained in a timeline (containsOLE property) are units. A\n            Timeline is surrounded by states of affairs that hold before and after it, namely\n            instances of the ConsistentSateSets class that precede and follow a given timeline.\n            Formally, the Timeline class is the domain of the hasTimelineEffect(Precondition)\n            properties, which have the ConsistentStateSet class as their range. A timeline is\n            motivated by some plan (motivates object property) and is spanned by some unit (span\n            object property). The relation between units and timelines is independent of the\n            scene/timeline relation." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/2000/01/rdf-schema#label> "Timeline" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Timeline> <http://www.w3.org/2002/07/owl#equivalentClass> _:B37d0ddafd47992399e8db2af55ec7396 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DescriptionTemplate> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "The situation schema provides the pattern for the description of incidents and states. It is inspired by the Situation ontology Pattern of the Ontology Design Pattern initiative (http://ontologydesignpatterns.org/). So, a SituationSchema describes (\"describes\" object property) a DramaPerdurant (either a State or a Process).\nThe schema works as a hub for the roles involved in a situation. The property hasRole links the Situation class (its domain) with the Role class (the range of the property). Also, notice that, as illustrated in the documentation of the SituationSchema class, a Situation Schema (or, better, its subclasses) does not directly refer to the external linguistic knowledge employed to describe drama: rather, it refers to the ExternalRefSchema class (subclass of the top level ExternalReference class), which in  turn refers to the linguistic knowledge. The SituationSchema class specializes into specific schemata for describing specific type of situations: \n- FrameNetSchema: for describing processes, like giving or killing (in Drammar, they are grouped into units arranged on timelines), and states, like being behind some object or being dead (in Drammar, they are bundled into sets that border timelines and plans). \n- MentalStateSchema: this class groups the specific types of schemata for describing the mental states of the agents in Drammar, namely beliefs, goals, emotions and values. \nTechnically, the subtypes of SituationSchema are characterized by different values of the quale_schemaType data property: \"belief\", \"emotion\", \"framenet\", \"goal\",  \"value\". \nFinally, it is worth mentioning that is a specific design choice of Drammar not to represent the nesting of states: only the type of the top level state, e.g., a belief, is represented, independent of what that belief contains in turn. This flat style of representation is determined by the decision not to commit to a specific logical account of state types. When Drammar is employed for annotation, the content nested into a state is described informally in natural language description accompanying the state, if needed. \nRefs: Gangemi, A., & Presutti, V. (2009). Ontology design patterns. In Handbook on ontologies (pp. 221-243). Springer Berlin, Heidelberg." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#label> "SituationSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#TreeNode> <http://www.w3.org/2000/01/rdf-schema#label> "TreeNode" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#TreeNode> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B4f995ea0cdb283679ba96959068aee93 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#TreeNode> <http://www.w3.org/2000/01/rdf-schema#comment> "TreeNode The TreeNode class represents tree-like structures in drama, namely\n            Scenes. This class only represents the recursive structure of drama without an explicit\n            commitment to the notion of 'drama as a tree'." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#TreeNode> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#TreeNode> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#ADTComponent> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B217c7e52cc6544d80fa94303c784d299 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bba4688098c96eea157b889db168ec561 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DescriptionTemplate> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2000/01/rdf-schema#comment> "Role provides the pattern for the role fillers in a frame instantiation, that\n            occurs in SituationSchema, for describing processes and states. A Role is filled by a\n            DramaEntity: the fact that a given role has an entity as a filler is represented by the\n            hasFiller property and its inverse isFillerOf property. A Role belongs (isRoleOf) to a\n            given SituationSchema, namely a ProcessSchema or a StateSchema (hasRole property). The\n            Role class is related to its filler by the hasFiller property, whose range is the\n            DramaEntity class. For example, given the incident describable as \"Ophelia gives\n            the gift back to Hamlet\", the roles of \"donor\" (the one who does the\n            action of giving), \"recipient\" (the one wjho receives the object to be given)\n            and \"theme\" (the object of giving action) are all instance of the Role class\n            connected to the same Situation, each labeled with a linguistic label\n            (\"donor\", \"recipient\", etc.) and each connected to its filler via\n            the hasFiller property. Roles can also be intended as thematic roles of verbs following\n            the description contained in the Verbnet resource\n            (http://verbs.colorado.edu/verb-index/index.php). The Role class, via the hasExtRef\n            object property, is linked to the subclass of the top level ExternalReference class, the\n            ExternalRefRole class, whose function is to connect the description of the role with the\n            appropriate role name or URI in a linguistic account of roles through apposite data\n            properties (namely, the Role_framenetRoleID and Role_verbnetRoleType data properties\n            respectively for FrameNet and VerbNet)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Role> <http://www.w3.org/2000/01/rdf-schema#label> "Role" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#StateOfAffairs> <http://www.w3.org/2000/01/rdf-schema#comment> "StateofAffairs are states that concern the storyworld as a whole; they are\n            described by a FrameNetSchema, namely a SituationSchema that points (through the\n            ExternalRefSchema class) points to a specific frame. This class gathers all states that\n            are external to the characters' mental states, and can be linguistically described\n            through some external resources such as FrameNet." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#StateOfAffairs> <http://www.w3.org/2000/01/rdf-schema#label> "StateOfAffairs" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#StateOfAffairs> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#State> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#StateOfAffairs> <http://www.w3.org/2002/07/owl#equivalentClass> _:Baf9341aa0e8ca83a5f3a91d424f00956 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#StateOfAffairs> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasMotivationIn> <http://www.w3.org/2000/01/rdf-schema#label> "hasMotivationIn" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasMotivationIn> <http://www.w3.org/2000/01/rdf-schema#comment> "The hasMotivation property represents the relation bewteen a plan and the\n            timeline it motivates (namely, where the actions of the plan are actually\n            contained)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasMotivationIn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#hasMotivationIn> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.purl.org/drammar#isMotivationFor> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2000/01/rdf-schema#label> "Value" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2000/01/rdf-schema#comment> "The Value Class represents the values of an agent. These values are\n            engaged in drama by the execution of the agents' plans. Formally, a Value is\n            a subclass of the MentalState class which is constrained to: - be in a given state, true\n            or false, of the boolean property atStake - be in a ConsistentStateSet (namely, the\n            consequences of some plan that puts the value at stake or brings it back to balance) -\n            be described by a ValueSchema. For example, in the nunnery scene, Ophelia's\n            answer \"At home, my Lord\", being a lie, results in a state that puts at stake\n            Hamlet's value of honesty." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Value> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bcec9b135b80f8f3daff58c1eeff08d15 <http://www.purl.org/drammar> .
<https://www.w3.org/2019/wot/json-schema#NullSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://www.w3.org/2019/wot/json-schema#DataSchema> <https://www.w3.org/2019/wot/json-schema#> .
<https://www.w3.org/2019/wot/json-schema#NullSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "Metadata describing data of type <code>null</code>. This subclass is indicated by the value <code>null</code> assigned to <code>type</code> in <code>DataSchema</code> instances. This Subclass describes only one acceptable value, namely <code>null</code>. It can be used as part of a <code>oneOf</code> declaration, where it is used to indicate, that the data can also be <code>null</code>."@en <https://www.w3.org/2019/wot/json-schema#> .
<https://www.w3.org/2019/wot/json-schema#NullSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://www.w3.org/2019/wot/json-schema#> .
