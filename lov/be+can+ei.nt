<http://www.ontotext.com/proton/protontop#Happening> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ontotext.com/proton/protontop#Entity> <http://www.ontotext.com/proton/protontop> .
<http://www.ontotext.com/proton/protontop#Happening> <http://www.w3.org/2000/01/rdf-schema#comment> "Something that happens. It can be either dynamic - like in \"drawing a circle\", or static - like in \"being a president\". In all cases, a happening (an event, a situation, or a time period) has a certain (usually quite concrete) temporal positioning - in the simplest case it is the one, denoted by start and end point in time."@en <http://www.ontotext.com/proton/protontop> .
<http://www.ontotext.com/proton/protontop#Happening> <http://www.w3.org/2000/01/rdf-schema#label> "Happening"@en <http://www.ontotext.com/proton/protontop> .
<http://www.ontotext.com/proton/protontop#Happening> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ontotext.com/proton/protontop> .
<http://erlangen-crm.org/current/E77_Persistent_Item> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis class comprises items that have a persistent identity, sometimes known as \"endurants\" in philosophy.\n\nThey can be repeatedly recognized within the duration of their existence by identity criteria rather than by continuity or observation. Persistent Items can be either physical entities, such as people, animals or things, or conceptual entities such as ideas, concepts, products of the imagination or common names. \n\nThe criteria that determine the identity of an item are often difficult to establish -; the decision depends largely on the judgement of the observer. For example, a building is regarded as no longer existing if it is dismantled and the materials reused in a different configuration. On the other hand, human beings go through radical and profound changes during their life-span, affecting both material composition and form, yet preserve their identity by other criteria. Similarly, inanimate objects may be subject to exchange of parts and matter. The class E77 Persistent Item does not take any position about the nature of the applicable identity criteria and if actual knowledge about identity of an instance of this class exists. There may be cases, where the identity of an E77 Persistent Item is not decidable by a certain state of knowledge.\nThe main classes of objects that fall outside the scope the E77 Persistent Item class are temporal objects such as periods, events and acts, and descriptive properties.\n\nExamples:\n- Leonardo da Vinci\n- Stonehenge\n- the hole in the ozone layer\n- the First Law of Thermodynamics\n- the Bermuda Triangle\n\nIn First Order Logic:\nE77(x) âŠƒ E1(x)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E77_Persistent_Item> <http://www.w3.org/2000/01/rdf-schema#label> "E77 Persistent Item"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E77_Persistent_Item> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://erlangen-crm.org/current/E1_CRM_Entity> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E77_Persistent_Item> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E77_Persistent_Item> <http://www.w3.org/2004/02/skos/core#notation> "E77" <http://erlangen-crm.org/current/> .
<http://purl.org/net/VideoGameOntology#Character> <http://www.w3.org/2000/01/rdf-schema#label> "Character"@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#Character> <http://www.w3.org/2000/01/rdf-schema#comment> "A vgo:Character is any actor that can exists in a game. A character  can be a human-like creature as seen traditionally in video games. However, a character could also be a car, a paddle in game of Pong or spaceship of a space shooter game. This is often contextually related to the gameplay of a certain game. A character can be either controller by a player or by a computer."@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#Character> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#GameProduct> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#GameProduct> <http://www.w3.org/2000/01/rdf-schema#comment> "A vgo:GameProduct is anything that is for sale inside a game. These can be either normal game items purchased with in-game currency or with real world money. An example of vgo:GameProduct could be a consumable health potion bought with real money, a better weapon or some visual improvement (e.g. Hats in Steam). Basically a game product can be anything, a character, an item or an achievement.\nGameProduct is a subclass of Good Relations: ProductOrService & schema:Product. Since vgo:GameProduct is a type of buyable product, it reuses the properties available in the schema and Good Relations, such as currency price, validity of the offer and so on."@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#GameProduct> <http://www.w3.org/2000/01/rdf-schema#label> "game product"@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#GameProduct> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://schema.org/Product> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#GameProduct> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B54484479084387527394fa2946c2cfbf <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#GameProduct> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/goodrelations/v1#ProductOrService> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter> <http://www.w3.org/2000/01/rdf-schema#comment> "The vgo:isEventTriggeredByCharacter connects the vgo:InstantaneousEvent to specific vgo:Character. This describes that an event is often caused by a character. The character in question can be either a character controlled by a player or a computer. For example, both player and non-player characters can trigger a character death event."@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter> <http://www.w3.org/2000/01/rdf-schema#label> "is event triggered by character"@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter> <http://www.w3.org/2000/01/rdf-schema#domain> <http://purl.org/net/VideoGameOntology#InstantaneousEvent> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter> <http://www.w3.org/2000/01/rdf-schema#range> <http://purl.org/net/VideoGameOntology#Character> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#Player> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#Player> <http://www.w3.org/2000/01/rdf-schema#comment> "The vgo:Player describes the entity playing the game. This can be either a human or a computer. vgo:Player class is used to keep a profile of a certain playing entity and to connect all the games, achievements and characters he/she has. The vgo:Player is a subclass of foaf:Person as it contains all relative information of a certain person."@en <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#Player> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://xmlns.com/foaf/0.1/Agent> <http://purl.org/net/VideoGameOntology> .
<http://purl.org/net/VideoGameOntology#Player> <http://www.w3.org/2000/01/rdf-schema#label> "Player"@en <http://purl.org/net/VideoGameOntology> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2000/01/rdf-schema#comment> "DescriptionTemplate This class contains a well known role-based pattern for\n            representing the linguistic schemata that describe the elements of drama, such as the\n            entities and dynamics. Drammar imports this pattern from other ontologies, namely DOLCE.\n            The class DescriptionTemplate contains two classes: - Role - SituationSchema The class\n            SituationSchema provides the specific pattern for the description of incidents and\n            states, generically termed here as \"situations\". A situation can be either a\n            process or a state, usually described by a linguistic expression consisting of a verb\n            (\"giving\") for processes, such as in the expression \"Ophelia gives the\n            gift back to Hamlet\", or a by a preposition (\"behind\") for states, such\n            as in the expression \"Polonius is behind the tapestry\"). The Role class\n            provides the pattern for the roles that play a part in the state or process (in the\n            above example, the role of the \"donor\" filled by Ophelia, the role of the\n            \"recipient\" filled by Hamlet, etc.). The linguistic counterpart of the\n            role-based structure of the description templates is provided by a frame-like accounts\n            of the linguistic descriptions of events, such as Framenet or Verbnet\n            (https://framenet2.icsi.berkeley.edu/fnReports/data/frameIndex.xml). Based on a lexical\n            semantics perspective, these initiatives are aimed at grouping verbs (including\n            statives) into \"frames of action\", i.e., linguistic structures representing a\n            group of semantically similar verbs with the complements that accompany them. Following\n            a design choice that characterizes the Drammar ontology, all references to the external\n            (linguistic or commonsense) knowledge are mediated by the ExternalReference class, a top\n            level class whose function is specifically to act as a bridge to the external knowledge\n            (see the documentation of the class). So, neither the Roles nor the Situation Schemata\n            directly refer to the external linguistic knowledge they assume: rather, the hasExtRef\n            property links each component of the pattern onto its corresponding class within the\n            ExternalReference class: the SituationSchema class is related to the ExternalRefSchema,\n            the Role class is related to the ExternalRefRole class. Each ExternalReference subclass,\n            then, bridges each pattern component onto the corresponding component within the\n            external knowledge source via a specific data type property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/2000/01/rdf-schema#label> "DescriptionTemplate" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DescriptionTemplate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#comment> "Abstract Plan An abstract plan is a recursive plan, i.e., a plan whose\n            elements are plans. Formally, an AbstractPlan is a list (List class) containing\n            (containsOLE) elements (OrderedListElements) that have plans as their data (hasData).\n            The plans contained in an abstract plan can be either abstract plans or directly\n            executable plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B0b7d2e0e70b9e6c7dd35b94f71eb483f <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#label> "AbstractPlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
