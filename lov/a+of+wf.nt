<http://purl.org/wf4ever/ro#Resource> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/ro> .
<http://purl.org/wf4ever/ro#Resource> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bbfa3978a84a9facbac7306737458cddc <http://purl.org/wf4ever/ro> .
<http://purl.org/wf4ever/ro#Resource> <http://www.w3.org/2000/01/rdf-schema#comment> "An ro:Resource is an ore:AggregatedResource which ore:isAggregatedBy an ro:ResearchObject. \n\nThis specialisation requires that there exists an ore:Proxy which is ore:proxyFor this resource, and which is ore:proxyIn the same ro:ResearchObject the resource ore:isAggregatedBy. Any annotations on such a proxy will descrive the ro:Resource within that particular ro:ResearchObject, in particular dct:creator and dct:created on the proxy will specify who added the resource to the aggregation at what time.\n\nNote that annotations (ro:AggregatedAnnotation) can be added to both the ro:Resource and the ore:Proxy - depending on if the annotation is seen to be globally true (such as the provenance of how the resource was created) or locally true within the Research Object (such as the the resource playing the role of a wf4ever:Dataset).\n\nNot all resources aggregated by an ro:ResearchObject are ro:Resource instances, in particular ro:AggregatedAnnotations will also be aggregated, but will not be \"true\" RO resources (and thus don't need their own ore:Proxy).  \n\nAggregated resources MAY also be organised in (potentially nested) ro:Folders to reflect a file-system like structure. Note that any such resources SHOULD also be aggregated in the \"mother\" ro:ResearchObject.\n"@en <http://purl.org/wf4ever/ro> .
<http://purl.org/wf4ever/ro#Resource> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B89584ed06246db6c14e5a4d2851426f5 <http://purl.org/wf4ever/ro> .
<http://purl.org/wf4ever/ro#Resource> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.openarchives.org/ore/terms/AggregatedResource> <http://purl.org/wf4ever/ro> .
<http://purl.org/wf4ever/wfdesc#Configuration> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/wf4ever/wfdesc#Parameter> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Configuration> <http://www.w3.org/2000/01/rdf-schema#label> "Configuration"@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Configuration> <http://www.w3.org/2000/01/rdf-schema#comment> "A configuration is a kind of parameter to a wfdesc:Process (linked using wfdesc:hasConfiguration) to indicate a setting, flag or customization which somewhat modifies or controls the behaviour of the wfdesc:Process.\n\nDifferent workflow systems have stronger or weaker differentiation between inputs and configurations, so a wfdesc:Configuration MAY also be a wfdesc:Input in the case of a dynamic configuration provided by the workflow itself.\n\nNote that attributes which define or specify the process to invoke, like a wf4ever:script, or a wf4ever:serviceURI of a wf4ever:WebService, are not normally considered Configurations."@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Configuration> <http://www.w3.org/2002/07/owl#disjointWith> <http://purl.org/wf4ever/wfdesc#Output> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Configuration> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/wf4ever/wfdesc> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Configuration> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#WorkflowInstance> <http://www.w3.org/2000/01/rdf-schema#comment> "A wfdesc:WorkflowInstance is a specialisation of a wfdesc:Workflow description which defines all data/parameters/settings that are required to form a wfprov:WorkflowRun.\nIn other words a wdesc:WorkflowInstance is a workflow description that is ready to run.\n        "@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#WorkflowInstance> <http://www.w3.org/2000/01/rdf-schema#label> "Workflow Instance"@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#WorkflowInstance> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/wf4ever/wfdesc> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#WorkflowInstance> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#WorkflowInstance> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/wf4ever/wfdesc#Workflow> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Workflow> <http://www.w3.org/2000/01/rdf-schema#comment> "A wfdesc:Workflow is a directed graph in which the nodes are wfdesc:Process instances and the edges (wfdesc:DataLink instances) represent data dependencies between the constituent wfdesc:Process descriptions.\n\nThe resource that contains the wfdesc:WorkflowDefinition (say the XML file saved from a workflow designer tool) can be specified with wfdesc:hasWorkflowDefinition. Research objects might aggregate a wfdesc:Workflow, a wfdesc:WorkflowDefinition, or (recommended) both.\n\nA wfdesc:Workflow defines associated wfdesc:Process using wfdesc:hasSubProcess. A specialisation of this property is wfdesc:hasSubWorkflow, signifying that the process is a wfdesc:Workflow itself, which is further described in a similar fashion.\n\nAs a subclass of wfdesc:Process a wfdesc:Workflow can also define wfdesc:hasInput/wfdesc:hasOutput parameters - these would be inputs taken at workflow execution time, and final outputs of the workflow. (Note: Not all dataflow systems have this concept of workflow parameters)\n\nwfdesc:Parameter descriptions are linked using wfdesc:DataLink descriptions associated with the wfdesc:Workflow using wfdesc:hasDataLink.\n\nA wfdesc:Parameter defined with wfdesc:hasInput on a wfdesc:Workflow is considered an wfdesc:Input \"outside\" the workflow (ie. if it is a subworkflow), but an wfdesc:Output \"inside\" the workflow (where it can be connected to a wfdesc:Input of a wfdesc:Process). Thus such parameters can be linked \"through\" the workflow without having a \"mirrored\" port inside.\n\n\nExample:\n\n```\n@prefix wfdesc: <http://purl.org/wf4ever/wfdesc#> .\n:outerWorkflow a wfdesc:Workflow ;\n  wfdesc:hasSubWorkflow :innerWorkflow ;\n  wfdesc:hasSubProcess :procA, :procC .\n\n:procA a wfdesc:Process ;\n  wfdesc:hasOutput :param1 .\n\n:procC a wfdesc:Process ;\n  wfdesc:hasInput :param2 ;\n  wfdesc:hasOutput :param3 .\n\n\n:innerWorkflow a wfdesc:Workflow ;\n  wfdesc:hasInput :param4 ;\n  wfdesc:hasOutput :param5 ;\n  wfdesc:hasProcess :procB .\n\n:procB a wfdesc:Process ;\n  wfdesc:hasInput :param6 ;\n  wfdesc:hasOutput :param7 .\n\n:innerWorkflow wfdesc:hasDataLink\n   [ wfdesc:hasSource :param4; wfdesc:hasSink :param6 ],\n   [ wfdesc:hasSource :param7; wfdesc:hasSink :param5 ] .\n\n:outerWorkflow wfdesc:hasDataLink\n  [ wfdesc:hasSource :param1; wfdesc:hasSink :param4 ],\n  [ wfdesc:hasSource :param5; wfdesc:hasSink :param2 ] .\n```\n\n\nIn this example :param1 is the output of :procA. :param1 is the source in a datalink that goes to the input :param4 of the :innerWorkflow. :param4 is however also the source of an inner datalink, going to input :param6 of the nested :procB.\n\nFrom this :param4 is both an wfdesc:Input and wfdesc:Output (which is why these two classes are not disjoint)"@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Workflow> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Workflow> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/wf4ever/wfdesc> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Workflow> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/wf4ever/wfdesc#Process> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Workflow> <http://www.w3.org/2000/01/rdf-schema#label> "Workflow"@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Workflow> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfdesc#WorkflowDefinition> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Parameter> <http://www.w3.org/2000/01/rdf-schema#label> "Parameter"@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Parameter> <http://www.w3.org/2000/01/rdf-schema#comment> "This class represent a parameter of a wfdesc:Process. A wfdesc:Parameter must be a wfdesc:Input, a wfdesc:Output, or a wfdesc:Configuration.\n\nNote that a parameter MAY be both an wfdesc:Input and wfdesc:Output when it is used on both sides of a subworkflow - see wfdesc:Workflow and wfdesc:DataLink for details.\n\nA wfdesc:Configuration MAY also be a wfdesc:Input, indicating that the configuration is of a dynamic nature, decided by the workflow."@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Parameter> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Parameter> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/wf4ever/wfdesc> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#Parameter> <http://www.w3.org/2002/07/owl#equivalentClass> _:B2ff0875c987260a765354e7b3da84c18 <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#DataLink> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/wf4ever/wfdesc> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#DataLink> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#DataLink> <http://www.w3.org/2000/01/rdf-schema#comment> "wfdesc:DataLink is used to represent data dependencies between wfdesc:Process descriptions. It means that the artifact generated at an wfdesc:Output (identified using wfdesc:hasSource) will be used by a wfdescInput (identified using wfdesc:hasSink).\n\nThe wfdesc:Processes that owns the wfdesc:Parameter instances which are the source and sink of a wfdesc:DataLink must be wfdesc:hasSubProcess of a the same wfdesc:Workflow which wfdesc:hasDataLink the data link, or be be parameters of that same workflow.\n\nThus links can only be made within a wfdesc:Workflow - although ports owned by the workflow itself appear both inside and outside the workflow (in opposite roles)."@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfdesc#DataLink> <http://www.w3.org/2000/01/rdf-schema#label> "Data Link"@en <http://purl.org/wf4ever/wfdesc> .
<http://purl.org/wf4ever/wfprov#wasPartOfWorkflowRun> <http://www.w3.org/2000/01/rdf-schema#range> <http://purl.org/wf4ever/wfprov#WorkflowRun> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#wasPartOfWorkflowRun> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#wasPartOfWorkflowRun> <http://www.w3.org/2000/01/rdf-schema#domain> <http://purl.org/wf4ever/wfprov#ProcessRun> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#wasPartOfWorkflowRun> <http://www.w3.org/2000/01/rdf-schema#comment> "This property specifies that a wfprov:ProcessRun was executed as part of a wfprov:WorkflowRun. This typically corresponds to wfdesc:hasSubProcess in the workflow description."@en <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/2000/01/rdf-schema#comment> "The wfprov ontology shows how to express minimal provenance information about the execution of a workflow described using the wf ontology. \n\nHere the concern is mainly the provenance which affects the research object, so in particular how some ro:Resource's might have been generated or used by the execution of a wfdesc:Workflow.\n\nThe main class here is a wfprov:WorkflowRun which shows how wfprov:Artifact instances (the data) wfprov:wasOutputFrom a wfprov:ProcessRun for generated artifacts, or wfprov:usedInput for consumed artifacts. The WorkflowRun is also a ProcessRun, and so the overall inputs and outputs of thw workflow execution can be described in the same manner.\n\nThese provenance details are linked to the corresponding wfdesc descriptions using wfdesc:describedbyProcess, wfdesc:describedByWorkflow and wfdesc:describedByParameter.\n\n\nThis ontology can be further linked to more specific provenance ontologies like OPM-V or W3C PROV-O, but this should be done separately."@en <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/2002/07/owl#imports> <http://purl.org/wf4ever/wfdesc> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://purl.org/dc/elements/1.1/description> "The wfprov ontology shows how to express minimal provenance information about the execution of a workflow described using the wfdesc ontology. "@en <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/2002/07/owl#imports> <http://xmlns.com/foaf/0.1/> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/2002/07/owl#versionInfo> "0.1.1" <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/2002/07/owl#versionIRI> <https://raw.github.com/wf4ever/ro/0.1.1/wfprov.owl> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://purl.org/dc/elements/1.1/title> "The Wfprov Ontology"@en <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/ro> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfprov#describedByProcess> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfprov#usedInput> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfprov#Artifact> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfprov#WorkflowRun> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfprov#wasOutputFrom> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/wf4ever/wfdesc#Process> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/wf4ever/wfprov> .
<http://purl.org/wf4ever/wfprov#ProcessRun> <http://www.w3.org/2000/01/rdf-schema#comment> "A process run is a particular execution of a wfdesc:Process description (wfprov:describedByProcess), which can wfprov:usedInput some wfprov:Artifact instances, and produce new artifacts (wfprov:wasOutputFrom). A wfprov:WorkflowRun is a specialisation of this class."@en <http://purl.org/wf4ever/wfprov> .
