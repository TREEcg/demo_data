<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#comment> "    \n   <p>The modulus of an RSA public and private key. \n   Or the modulus of a DSA Key.\n   The modulus is encoded as a hex binary. The binary is the same as the one encoded in the \n  <a href=\"http://www.w3.org/TR/xmldsig-core/#sec-CryptoBinary\">XML DSIG CryptoBinary</a>\n  </p>\n  <blockquote>\n   This specification defines the ds:CryptoBinary simple type for representing arbitrary-length integers (e.g. \"bignums\") in XML as octet strings. The integer value is first converted to a \"big endian\" bitstring. The bitstring is then padded with leading zero bits so that the total number of bits == 0 mod 8 (so that there are an integral number of octets). If the bitstring contains entire leading octets that are zero, these are removed (so the high-order octet is always non-zero).\n  </blockquote>\n <p>The only difference is that the octet string is then encoded using either xsd:base64Binary or xsd:hexBinary. Currently for all usages of this relation, the xsd:hexBinary datatype should be used until the SPARQL working group specifies specifies in its <a href=\"http://www.w3.org/TR/sparql11-entailment/#DEntRegime\">D-Entailment</a> that those two types are equivalent.</p>\n <p>It would have been better had there been a hexInteger datatype that was standard and supported by all tools.</p>\n   "@en <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.w3.org/ns/auth/cert#DSAKey> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "unstable" <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#hexBinary> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#base64Binary> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.w3.org/ns/auth/cert#> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.w3.org/ns/auth/cert#RSAKey> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#modulus> <http://www.w3.org/2000/01/rdf-schema#label> "modulus"@en <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/sparql-service-description#EmptyGraphs> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/ns/sparql-service-description#Feature> <http://www.w3.org/ns/sparql-service-description> .
<http://www.w3.org/ns/sparql-service-description#EmptyGraphs> <http://www.w3.org/2000/01/rdf-schema#comment> "sd:EmptyGraphs, when used as the object of the sd:feature property, indicates that the underlying graph store supports empty graphs. A graph store that supports empty graphs MUST NOT remove graphs that are left empty after triples are removed from them." <http://www.w3.org/ns/sparql-service-description> .
<http://www.w3.org/ns/sparql-service-description#EmptyGraphs> <http://www.w3.org/2000/01/rdf-schema#label> "Empty Graphs" <http://www.w3.org/ns/sparql-service-description> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/2000/01/rdf-schema#label> "E80 Part Removal"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis class comprises the activities that result in an instance of E18 Physical Thing being decreased by the removal of a part.\n\nTypical scenarios include the detachment of an accessory, the removal of a component or part of a composite object, or the deaccessioning of an object from a curated E78 Collection. If the E80 Part Removal results in the total decomposition of the original object into pieces, such that the whole ceases to exist, the activity should instead be modelled as an E81 Transformation, i.e. a simultaneous destruction and production. In cases where the part removed has no discernible identity prior to its removal but does have an identity subsequent to its removal, the activity should be regarded as both E80 Part Removal and E12 Production. This class of activities forms a basis for reasoning about the history, and continuity of identity over time, of objects that are removed from other objects, such as precious gemstones being extracted from different items of jewelry, or cultural artifacts being deaccessioned from different museum collections over their lifespan.\n\nExamples:\n- the removal of the engine from my car\n- the disposal of object number 1976:234 from the collection\n\nIn First Order Logic:\nE80(x) âŠƒ E11(x)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B859e894674ec1551eeb8f5738148f720 <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B8c2d3e4b6025d8d31c61f07f8bde8309 <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://erlangen-crm.org/current/E11_Modification> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E80_Part_Removal> <http://www.w3.org/2004/02/skos/core#notation> "E80" <http://erlangen-crm.org/current/> .
