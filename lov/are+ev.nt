<http://purl.org/prog/streamed_by_parent_event> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/prog/> <http://purl.org/prog/> .
<http://purl.org/prog/streamed_by_parent_event> <http://www.w3.org/2000/01/rdf-schema#comment> "Indicates that one of the streams in this visualisation is events that are event:sub_event of the event:Event indicated. This can be used to show several workshops in an event. This should only apply to things which are immediately stated explicitly as event:sub_event, it is assumed that the consumer will not treat this property as transitive, unless they are doing something weird or clever." <http://purl.org/prog/> .
<http://purl.org/prog/streamed_by_parent_event> <http://www.w3.org/2000/01/rdf-schema#label> "programme has a stream for sub-events of" <http://purl.org/prog/> .
<http://purl.org/prog/streamed_by_parent_event> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> <http://purl.org/prog/> .
<http://vocab.datex.org/terms#Accident> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B5de363e5290c807e6a3391d051c082f0 <http://vocab.datex.org/terms#> .
<http://vocab.datex.org/terms#Accident> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> <http://vocab.datex.org/terms#> .
<http://vocab.datex.org/terms#Accident> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://vocab.datex.org/terms#TrafficElement> <http://vocab.datex.org/terms#> .
<http://vocab.datex.org/terms#Accident> <http://www.w3.org/2000/01/rdf-schema#comment> "Accidents are events where one or more vehicles are involved in collisions or in leaving the roadway. These include collisions between vehicles or with other road users or obstacles."@en <http://vocab.datex.org/terms#> .
<http://vocab.datex.org/terms#Accident> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://vocab.datex.org/terms#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/cwmo/#Ideation> <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/cwmo/#CreativePhase> <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/cwmo/#Implementation> <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://purl.org/cwmo/#ProblemAnalysis> <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/2000/01/rdf-schema#comment> "The idea evaluation class is a phase of the creative process where the idea are evluated, sorted or ranked."@en <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/2002/07/owl#sameAs> <http://purl.org/cwmo/#Implementation> <http://purl.org/cwmo/#> .
<http://purl.org/cwmo/#IdeaEvaluation> <http://www.w3.org/2000/01/rdf-schema#label> "IdeaEvaluation"@en <http://purl.org/cwmo/#> .
<http://www.w3.org/ns/shacl#SPARQLAskValidator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/shacl#SPARQLAskExecutable> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLAskValidator> <http://www.w3.org/2000/01/rdf-schema#label> "SPARQL ASK validator"@en <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLAskValidator> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.w3.org/ns/shacl#> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLAskValidator> <http://www.w3.org/2000/01/rdf-schema#comment> "The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms."@en <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLAskValidator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/shacl#Validator> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLAskValidator> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLSelectValidator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/shacl#SPARQLSelectExecutable> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLSelectValidator> <http://www.w3.org/2000/01/rdf-schema#comment> "The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform."@en <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLSelectValidator> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLSelectValidator> <http://www.w3.org/2000/01/rdf-schema#label> "SPARQL SELECT validator"@en <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLSelectValidator> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.w3.org/ns/shacl#> <http://www.w3.org/ns/shacl#> .
<http://www.w3.org/ns/shacl#SPARQLSelectValidator> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/shacl#Validator> <http://www.w3.org/ns/shacl#> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2000/01/rdf-schema#label> "MentalState" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2000/01/rdf-schema#comment> "MentalStates are EventiveStates that are attributed to the mind of an agent.\n            There are four types of mental states: 1. Emotion 2. Belief 3. Goal 4. Value Belief and\n            Goal are traditionally described as having a propositional content because they both\n            concern some attitude of the agent toward a proposition; in Drammar, we don't\n            enforce this distinction because the reference theoriesd we adopt for emotion and values\n            also enforce some time of propositional content. The only difference is that only the\n            schema types for beliefs and goals (BeliefSchema and GoalSchema) have a propositional\n            content attached to it (through the propositionalContent object property). A MentalState\n            is defined as an EventiveState that is described by a MentalStateSchema. The latter are\n            to be specified as EmotionSchema, BeliefSchema, GoalSchema, ValueSchema,\n            depending on the MentalState type: so, the MentalStateSchema type works as a selector\n            for the right trait of the mental schema." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#State> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalState> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bd72c191414c83afd9aa4f13ccddf15ec <http://www.purl.org/drammar> .
