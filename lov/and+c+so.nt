<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2000/01/rdf-schema#label> "identity"@en <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.w3.org/ns/auth/cert#> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2000/01/rdf-schema#comment> "\n    the identity of the public key. This is the entity that knows the private key and \n    so can decrypt messages encrypted with the public key, or encrypt messages that can \n    be decrypted with the public key. \n    "@en <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.w3.org/ns/auth/cert#PublicKey> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2004/02/skos/core#editorialNote> "\n         It turns out that this relation is unintuitive to write out and to name.\n         One should instead use cert:key\n    "@en <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "archaic" <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> <http://www.w3.org/ns/auth/cert#> .
<http://www.w3.org/ns/auth/cert#identity> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.w3.org/ns/auth/cert#key> <http://www.w3.org/ns/auth/cert#> .
