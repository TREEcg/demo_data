<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#state> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2002/07/owl#equivalentClass> _:B67d36bca81285cecfb21957b9e3f133e <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#comment> "State represents the static class of the Perdurant. State is the class that\n            bridges to the concept of State in upper ontologies, externally to Drammar. For example,\n            in DOLCE, states and process are the two distinct types of statives. Both factual and\n            eventive states are further divided into different state types: - MentalStates, namely\n            Belief, Goals, Values and Emotions (all sharing some propositional content in their\n            description); - StateOfAffairs, namely situations holding in the world. States participate\n            to some structure. In Drammar, these structures are ConsistenStateSets (types of Sets),\n            which borders timelines and plans. The specific type pf States are defined through the\n            use of specific types of StateSchema (subclass of DescriptionTemplate). So, its\n            subclasses are: - MentalState: the mental state of an agent; - StateOfAffairs: an\n            objective state of the story world." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#label> "State" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/2000/01/rdf-schema#label> "Complex link set"@en <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/2002/07/owl#disjointWith> <http://rdfs.org/ns/void#Dataset> <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/query/voidext#VirtualLinkSet> <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://purl.org/query/voidext#queryLinkset> "prefix void:    <http://rdfs.org/ns/void#>\r\nprefix voidext:<http://purl.org/query/voidext#>\r\nprefix dcterms: <http://purl.org/dc/terms/>\r\n\r\nSELECT distinct ?links ?source_dataset1_name ?target_dataset2_name ?predicate \r\n ?intersection_type ?subj_type ?obj_type  ?source_endpoint ?target_endpoint \r\n ?resourceMapping {\r\n  \r\n #values(?dataset1){ (bioquery:EBI_ORDO) }\r\n #values(?dataset2){ (bioquery:DRUGBANK) }\r\n\r\n ?links a voidext:ComplexLinkSet.\r\n ?links  voidext:intersectAt ?set2;\r\n         voidext:intersectionType/rdfs:label ?intersection_type.\r\n ?set2   voidext:isSubsetOf ?target_db.\r\n ?target_db dcterms:title ?target_dataset2_name;\r\n            void:sparqlEndpoint ?target_endpoint.\r\n ?set2 void:linkPredicate ?predicate2 .\r\n \r\n\r\n ?links  voidext:intersectAt ?set1.\r\n ?set1 void:linkPredicate ?predicate .\r\n ?set1 voidext:isSubsetOf ?source_db .\r\n ?source_db dcterms:title ?source_dataset1_name;\r\n            void:sparqlEndpoint ?source_endpoint.\r\noptional{ ?set1 voidext:linkPredicateDomain ?subj_type}\r\noptional{ ?set1 voidext:linkPredicateRange ?obj_type.}\r\noptional{ ?links voidext:recommendedMapping ?set1.\r\n               ?set1 voidext:resourceMapping  ?resourceMapping}\r\nfilter(?source_db != ?target_db)        \r\n                         \r\n} order by ?links"^^<http://www.w3.org/2000/01/rdf-schema#Literal> <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/2000/01/rdf-schema#comment> "It is a complex virtual link set. A complex link set is composed of exactly two link sets xor two shared instance sets where xor is the exclusive or. For example, two link sets that intersects at some graph node (e.g. the object nodes of link predicates)."@en <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bea46ef85b3e978813e54a2735d8ae059 <http://purl.org/query/voidext> .
<http://purl.org/query/voidext#ComplexLinkSet> <http://purl.org/query/voidext#querySharedInstanceSet> "prefix void:    <http://rdfs.org/ns/void#>\r\nprefix voidext:<http://purl.org/query/voidext#>\r\nprefix dcterms: <http://purl.org/dc/terms/>\r\n\r\nSELECT distinct ?links ?source_dataset1_name ?target_dataset2_name ?sharedType\r\n  ?resourceMapping ?source_endpoint ?target_endpoint{\r\n  \r\n #values(?source_db){ (bioquery:EBI) }\r\n #values(?target_db){ (bioquery:UNIPROT) }\r\n\r\n ?links a voidext:ComplexLinkSet.\r\n ?links voidext:intersectAt ?set1; voidext:intersectAt ?set2.\r\n ?set1  voidext:isSubsetOf ?target_db.\r\n ?target_db dcterms:title ?target_dataset2_name;\r\n           void:sparqlEndpoint ?target_endpoint.\r\n ?set2 voidext:sharedInstanceType  ?sharedType .\r\n ?set2 voidext:isSubsetOf ?source_db .\r\n ?source_db dcterms:title ?source_dataset1_name;\r\n            void:sparqlEndpoint ?source_endpoint.\r\n\r\n optional{   ?links voidext:recommendedMapping ?set2.\r\n             ?set2 voidext:resourceMapping  ?resourceMapping}\r\n filter(?target_db != ?source_db)        \r\n                         \r\n} order by ?links"^^<http://www.w3.org/2000/01/rdf-schema#Literal> <http://purl.org/query/voidext> .
