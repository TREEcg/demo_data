<http://ontology.it/itsmo/v1#LifeCycle> <http://www.w3.org/2000/01/rdf-schema#label> "Life cycle"@en <http://ontology.it/itsmo/v1> .
<http://ontology.it/itsmo/v1#LifeCycle> <http://www.w3.org/2000/01/rdf-schema#comment> "A set of related LifeCycleStage. Could be implementetd with a state machine."@en <http://ontology.it/itsmo/v1> .
<http://ontology.it/itsmo/v1#LifeCycle> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://ontology.it/itsmo/v1> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2000/01/rdf-schema#label> "Word"@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Structure> <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2000/01/rdf-schema#comment> "\n    The Word class represents strings that are tokens or words. A string is a Word, if it is a word. We don't nitpic about whether it is a a pronoun, a name, a punctuation mark or an apostrophe or whether it is separated by white space from another Word or something else. The string 'He enters the room.' for example has 5 words. Words are assigned by a tokenizer NIF Implementation. Single word phrases might be tagged as nif:Word and nif:Phrase. \n    \n    Example 1: \"The White House\" are three Words separated by whitespace\n        \n    Comment 1: We adopted the definition style from foaf:Person, see here: http://xmlns.com/foaf/spec/#term_Person We are well aware that the world out there is much more complicated, but we are ignorant about it, for the following reasons:\n    Comment 2:  \n    \n    1. NIF has a client-server and the client has the ability to dictate the tokenization to the server (i.e. the NIF Implementation) by sending properly tokenized NIF annotated with nif:Word. All NIF Implementations are supposed to honor and respect the current assignment of the Word class. Thus the client should decide which NIF Implementation should create the tokenization. Therefore this class is not descriptive, but prescriptive.\n    2. The client may choose to send an existing tokenization to a NIF Implementation, with the capability to change (for better or for worse) the tokenization. \n    \n    \n   \n    The class has not been named 'Token' as the NLP definition of 'token' is descriptive (and not well-defined), while the assignment of what is a Word and what not is prescriptive, e.g. \"can't\" could be described as one, two or three tokens or defined as being one, two or three words. For further reading, we refer the reader to: By all these lovely tokens... Merging conflicting tokenizations by Christian Chiarcos, Julia Ritz, and Manfred Stede. Language Resources and Evaluation 46(1):53-74 (2012) or the short form: http://www.aclweb.org/anthology/W09-3005\n    There the task at hand is to merge two tokenization T_1 and T_2 which is normally not the case in the NIF world as tokenization is prescribed, i.e. given as a baseline (Note that this ideal state might not be achieved by all implementations.)\n    \n    Changelog:\n    * 0.1.1 fixed spelling\n    * 0.2.1 added a proper definition.\n    * 0.2.3 added examples and clarifications\n    "@en <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#Word> <http://www.w3.org/2002/07/owl#versionInfo> "0.2.2" <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#comment> "A State is a land area of governance within a country. A state may have counties, cities and towns within its area." <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#label> "Estado"@es <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/ontology/places#> <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "testing" <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#label> "État"@fr-fr <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#label> "State" <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#label> "State"@en <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#label> "国家"@zh <http://purl.org/ontology/places> .
<http://purl.org/ontology/places#State> <http://www.w3.org/2000/01/rdf-schema#label> "Staat"@de <http://purl.org/ontology/places> .
<http://purl.org/spar/fabio/solid-state-memory> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> <http://purl.org/spar/fabio> .
<http://purl.org/spar/fabio/solid-state-memory> <http://www.w3.org/2000/01/rdf-schema#comment> "A digital storage device built entirely from solid electronic materials with no moving parts, e.g. a USB flash drive."@en <http://purl.org/spar/fabio> .
<http://purl.org/spar/fabio/solid-state-memory> <http://www.w3.org/2000/01/rdf-schema#label> "solid state memory"@en <http://purl.org/spar/fabio> .
<http://purl.org/spar/fabio/solid-state-memory> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/spar/fabio/DigitalStorageMedium> <http://purl.org/spar/fabio> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/2002/07/owl#Thing> <https://w3id.org/omg> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://w3id.org/omg> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/2002/07/owl#disjointWith> <https://w3id.org/opm#PropertyState> <https://w3id.org/omg> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <https://w3id.org/opm#PropertyState> <https://w3id.org/omg> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/2000/01/rdf-schema#label> "Geometry state"@en <https://w3id.org/omg> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/2000/01/rdf-schema#label> "Geometriestatus"@de <https://w3id.org/omg> .
<https://w3id.org/omg#GeometryState> <http://www.w3.org/2000/01/rdf-schema#comment> "A geometry state is an evaluation holding the geometry description and metadata about a geometry that was true for the given time. \nIn case of geometry states, changing geometric properties does not cause the need for a new geometry state as long as the property was changed using the OPM concepts. If this is not the case, a copy of the now valid graph must be created and attached to a new geometry state. If an object within the geometry graph is changed (e.g. changing the primitive \"Box\" into a primitive \"Sphere\"), the old primitive (\"Box\") should be classified as opm:Deleted and the new primitive (\"Sphere\") should be added to the geometry graph in the correct place. The new geometry state should then be connected to any object of the geometry graph that is not opm:Deleted using the omg:containsGeometryObject relation.\nMetadata of a geometry state must as a minimum be the time of generation stated by prov:generatedAtTime, but preferably also a prov:wasAttributedTo reference to the agent who created the state. In case properties are changed using the OPM concepts, the most current time of generation and agent who created the state will be determined using the omg:containsPropertyState relation.\nDerived geometry descriptions are also stored as states as these change when the base geometry changes."@en <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/2000/01/rdf-schema#domain> <https://w3id.org/omg#Geometry> <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/2000/01/rdf-schema#label> "has geometry state"@en <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <https://w3id.org/opm#hasPropertyState> <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#InverseFunctionalProperty> <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/2000/01/rdf-schema#range> <https://w3id.org/omg#GeometryState> <https://w3id.org/omg> .
<https://w3id.org/omg#hasGeometryState> <http://www.w3.org/2000/01/rdf-schema#comment> "Relation between a geometry and one of its geometry states. For each revision in an RDF-based geometry descriptions where changes were made to the graph nodes and not the properties, a new state must be defined to capture the new graph. This property is inverse functional as one geometry state can only belong to one geometry."@en <https://w3id.org/omg> .
