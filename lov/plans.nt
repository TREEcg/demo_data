<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/description> "PROV extension for linking Plans and parts of plans to their respective executions."@en <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/created> "2012-11-10"^^<http://www.w3.org/2001/XMLSchema#date> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://www.w3.org/2000/01/rdf-schema#comment> "PROV extension for linking Plans and parts of plans to their respective executions. Created by Daniel Garijo and Yolanda Gil" <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/license> "http://creativecommons.org/licenses/by-nc-sa/2.0/" <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/vocab/vann/preferredNamespaceUri> "http://purl.org/net/p-plan#" <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://www.w3.org/2002/07/owl#versionInfo> "1.3" <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/modified> "2014-03-12"^^<http://www.w3.org/2001/XMLSchema#date> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/creator> "http://www.isi.edu/~gil/"^^<http://www.w3.org/2001/XMLSchema#anyURI> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/creator> "http://delicias.dia.fi.upm.es/members/DGarijo#me"^^<http://www.w3.org/2001/XMLSchema#anyURI> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/vocab/vann/preferredNamespacePrefix> "p-plan" <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Thing> <http://purl.org/net/p-plan#> .
<http://purl.org/net/p-plan#> <http://purl.org/dc/terms/title> "The P-Plan ontology"@en <http://purl.org/net/p-plan#> .
<http://purl.org/spar/fabio/StillImage> <http://www.w3.org/2000/01/rdf-schema#label> "still image"@en <http://purl.org/spar/fabio> .
<http://purl.org/spar/fabio/StillImage> <http://www.w3.org/2000/01/rdf-schema#comment> "A recorded static visual representation. This class of image includes diagrams, drawings, graphs, graphic designs, plans, maps, photographs and prints."@en <http://purl.org/spar/fabio> .
<http://purl.org/spar/fabio/StillImage> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/spar/fabio/Image> <http://purl.org/spar/fabio> .
<http://purl.org/spar/fabio/StillImage> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/spar/fabio> .
<http://vocab.deri.ie/cogs#DataManagementLayer> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://vocab.deri.ie/cogs#Layer> <http://vocab.deri.ie/cogs> .
<http://vocab.deri.ie/cogs#DataManagementLayer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://vocab.deri.ie/cogs> .
<http://vocab.deri.ie/cogs#DataManagementLayer> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://vocab.deri.ie/cogs> .
<http://vocab.deri.ie/cogs#DataManagementLayer> <http://www.w3.org/2000/01/rdf-schema#label> "DataManagementLayer" <http://vocab.deri.ie/cogs> .
<http://vocab.deri.ie/cogs#DataManagementLayer> <http://www.w3.org/2000/01/rdf-schema#comment> "Layer responsible for the development, execution and supervision of plans, policies, programs and practices that control, protect, deliver and enhance the value of data and information assets. @en-us" <http://vocab.deri.ie/cogs> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.cidoc-crm.org/cidoc-crm/E73_Information_Object> <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "Projeto ou Procedimento"@pt <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "Σχέδιο"@el <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "Design or Procedure"@en <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "Conception ou procédure"@fr <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "Entwurf oder Verfahren"@de <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "Проект или Процедура"@ru <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#comment> "This class comprises documented plans for the execution of actions in order to achieve a result of a specific quality, form or contents. In particular it comprises plans for deliberate human activities that may result in the modification or production of instances of E24 Physical Thing. \nInstances of E29 Design or Procedure can be structured in parts and sequences or depend on others. This is modelled using P69 is associated with. \nDesigns or procedures can be seen as one of the following:\n1.\tA schema for the activities it describes\n2.\tA schema of the products that result from their application. \n3.\tAn independent intellectual product that may have never been applied, such as Leonardo da Vinci’s famous plans for flying machines.\nBecause designs or procedures may never be applied or only partially executed, the CRM models a loose relationship between the plan and the respective product.\n"@en <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "usou técnica específica"@pt <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "использовал особую технику"@ru <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#comment> "This property identifies a specific instance of E29 Design or Procedure in order to carry out an instance of E7 Activity or parts of it. \nThe property differs from P32 used general technique (was technique of) in that P33 refers to an instance of E29 Design or Procedure, which is a concrete information object in its own right rather than simply being a term or a method known by tradition. \nTypical examples would include intervention plans for conservation or the construction plans of a building.\n"@en <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.cidoc-crm.org/cidoc-crm/P16_used_specific_object> <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "used specific technique"@en <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "benutzte das bestimmte Verfahren"@de <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.cidoc-crm.org/cidoc-crm/E7_Activity> <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "χρησιμοποίησε συγκεκριμένη τεχνική"@el <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "a employé comme technique spécifique"@fr <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.cidoc-crm.org/cidoc-crm/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.cidoc-crm.org/cidoc-crm/E29_Design_or_Procedure> <http://www.cidoc-crm.org/cidoc-crm/> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC17_Conceptual_Object> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable" <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#comment> "This class comprises documented plans for the execution of actions in order to achieve a result of a specific quality, form or contents. In particular it comprises plans for deliberate human activities that may result in the modification or production of instances of E24 Physical Thing.\n\nInstances of E29 Design or Procedure can be structured in parts and sequences or depend on others. This is modelled using P69 is associated with.\n\nDesigns or procedures can be seen as one of the following:\n\n1. schema for the activities it describes\n2. A schema of the products that result from their application.\n3. An independent intellectual product that may have never been applied, such as Leonardo da Vinci's famous plans for flying machines.\n4. Because designs or procedures may never be applied or only partially executed, the CRM models a loose relationship between the plan and the respective product.\n[Scope Note for E29 Design or Procedure (CIDOC CRM)]"@en <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://purl.org/dc/elements/1.1/type> <http://dublincore.org/usage/documents/principles/#vocabulary-term> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://purl.org/dc/terms/hasVersion> <http://dublincore.org/usage/terms/history/#StillImage-001> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/2000/01/rdf-schema#label> "Still Image"@en-us <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/2000/01/rdf-schema#comment> "A static visual representation. Examples of\n        still images are: paintings, drawings, graphic designs,\n        plans and maps."@en-us <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/dc/dcmitype/> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/dc/terms/DCMIType> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/dc/dcmitype/Image> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://purl.org/dc/dcmitype/StillImage> <http://purl.org/dc/terms/issued> "2003-11-18" <http://www.ics.forth.gr/isl/VoIDWarehouse/VoID_Extension_Schema.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#label> "Metodo"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#label> "Method"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#comment> "A method is a Description that defines or uses concepts in order to guide carrying out actions aimed at a solution with respect to a problem. \nIt is different from a Plan, because plans could be carried out in order to follow a method, but a method can be followed by executing alternative plans." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.w3.org/2002/07/owl#versionInfo> "3.31" <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.w3.org/2000/01/rdf-schema#comment> "The DOLCE+DnS Ultralite ontology.\nIt is a simplification of some parts of the DOLCE Lite-Plus library (cf. http://www.ontologydesignpatterns.org/ont/dul/DLP397.owl). \nMain aspects in which DOLCE+DnS Ultralite departs from DOLCE Lite-Plus are the following:\n\n- The names of classes and relations have been made more intuitive\n- The DnS-related part is closer to the newer 'constructive DnS' ontology (http://www.ontologydesignpatterns.org/ont/dul/cDnS.owl).\n- Temporal and spatial relations are simplified\n- Qualities and regions are more relaxed than in DOLCE-Full: they can be used as attributes of any entity, although two axioms state that each quality has a region and viceversa\n- Axiomatization makes use of simpler constructs than DOLCE Lite-Plus\n- The architecture of the ontology is pattern-based, which means that DOLCE+DnS Ultralite is also available in modules, called 'content ontology design patterns', which can be applied independently in the design of domain ontologies (cf. http://www.ontologydesignpatterns.org).  If many modules are needed in a same ontology project, it is anyway useful to use this integrated version.\n\nThe final result is a lightweight, easy-to-apply foundational ontology for modeling either physical or social contexts.\nSeveral extensions of DOLCE+DnS Ultralite have been designed; see for example the extensions for information objects: http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl, \nfor systems: http://www.ontologydesignpatterns.org/ont/dul/SystemsLite.owl, \nfor plans: http://www.ontologydesignpatterns.org/ont/dul/PlansLite.owl, \nfor the legal domain: http://www.ontologydesignpatterns.org/ont/dul/CLO/CoreLegal.owl, \nand for the lexical and semiotic domains: http://www.ontologydesignpatterns.org/ont/lmm/LMM_L2.owl; etc." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Ontology> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.w3.org/2002/07/owl#versionInfo> "Created by Aldo Gangemi as both a simplification and extension of DOLCE and Descriptions and Situations ontologies." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.w3.org/2002/07/owl#versionInfo> "In 3.2, the links between instances of Region or Parameter, and datatypes have been revised and made more powerful, in order to support efficient design patterns for data value modelling in OWL1.0.\nAlso, the names of the related properties have been changed in order to make them more intuitive.\nFurthermore, a large comment field has been added to the 'expresses' object property, in order to clarify some issues about the many interpretations.\nIn 3.3, the relation between regions, parameters, and datatypes has been still improved.\nIn 3.5, the person-related classes have been refactored: Person in 3.4 is now SocialPerson, to avoid confusion with commonsense intuition; Person is now the union of social persons and humans, therefore being a subclass of Agent.\nIn 3.6, other fixes on universal restriction involving expresses. Also added the property 'isConstraintFor' between parameters and entities. Moved the properties: 'assumes' and 'adopts' to the new module: http://www.ontologydesignpatterns.org/ont/dul/Conceptualization.owl.\nIn 3.7, some fixes on the names of classes and properties related to FormalEntity; created a new separate module for general universal restrictions (DULGCI.owl).\nIn 3.8, more fixes on the interface to formal entities and links to IOLite.owl.\nIn 3.9, some naming and comment fixes.\nIn 3.10, removed cardinality restriction from hasPart and isPartOf restrictions (changed to hasComponent and isComponentOf), for OWL(DL) compatibility. Also enlarged the range of includesAgent to contain both social and physical agents, and of conceptualizes universal restriction on agents, to include all social objects.\nIn 3.11, some more subproperty axioms have been introduced, and all elements have got English labels.\nIn 3.12, added some classes to map some old DolceLitePlus classes that were used to align OntoWordNet.\nIn 3.13, added the LocalConcept class to express a Concept that cannot be used in a Description different from the one that defines it. Also updated some comments.\nIn 3.14, added some comments.\nIn 3.15, removed some owl:disjointWith axioms relating Collection to InformationObject, Description, Situation, and SocialAgent. The rationale for doing that is to allow less strict constraints on domain relations involving collections that can be also conceived as descriptions, situations, social agents, or information objects; for example: a collection of sentences from a text (an information object) that are ranked with a relevance criterion can be still considered a text.\nIn 3.16, name of isActedBy changed to actsThrough, which is clearer. Also added SpatioTemporalRegion as constituted by a SpaceRegion and a TimeInterval.\nIn 3.17, removed redundant universal axioms from Entity and other top classes. Fixed restrictions on FunctionalSubstance class, and comments in Design and Substance classes.\nIn 3.18, removed subClassOf axiom from FunctionalSubstance to DesignedArtifact, created a new subclass of FunctionalSubstance, called DesignedSubstance, and created a subClassOf axiom from DesignedSubstance to DesignedArtifact.\nIn 3.19, removed disjointness axiom between Concept and Collection (the same rationale applies as in 3.15 version.\nIn 3.20, revised the comment for Quality, added InformationEntity as the superclass for InformationObject and InformationRealization (represented as the union of those classes). This is needed in many domain ontologies that do not need to distinguish between abstract and concrete aspects of information entities. One possible revision (not implemented here) would be to introduce the relations: expresses and isAbout with a broader domain:InformationEntity, and two more specific properties: abstractlyExpresses and isAbstractlyAbout. This last revision has not been implemented yet, since a large revision procedure should be carried out in order to check the impact of the revision on the existing DOLCE-DnS-Ultralite plugins.\nIn 3.21, added comment to InformationEntity, and optimized representation of equivalence for InformationRealization.\nIn 3.22, added comment to Personification.\nIn 3.23, added associatedWith object property, and put all object properties as subproperties of it.\nIn 3.24, removed hasProxy datatype property.\nIn 3.25, generalized domain and range of hasComponent and isComponentOf.\nIn 3.26, updated some comments in order to clarify or exemplify the concepts.\nIn 3.27, added rdfs:isDefinedBy annotations for Linked Data browsers.\nIn 3.28, broadened the universe of pre-/post-conditions to give room to events and states.\nIn 3.29, added some properties to support DBpedia alignment: sameSettingAs (situational analogous to coparticipation), including relations originating e.g. from sharing kinship, ownership, or roleplaying situations.\nIn 3.30, completed some domains and ranges (formerly owl:Thing, now dul:Entity), and added axiom: Organism subClassOf PhysicalAgent.\nIn 3.31, added a restriction to Quality and one to Region in order to ensure the original DOLCE constraint of qualities being always associated with a region, and vice versa. These axioms do not however exclude a direct applicability of qualities or regions to any other entity." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.w3.org/2000/01/rdf-schema#label> "DOLCE+DnS Ultralite" <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2002/07/owl#inverseOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isConceptualizedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#associatedWith> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#label> "conceptualizes"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#label> "concettualizza"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#comment> "A relation stating that an Agent is internally representing a SocialObject: situations, descriptions, concepts, etc. E.g., 'John believes in the conspiracy theory'; 'Niels Bohr created the solar-system metaphor for the atomic theory'; 'Jacques assumes all swans are white'; 'the task force members share the attack plan'.\nConceptualizations can be distinguished into different forms, primarily based on the type of SocialObject that is conceptualized. Descriptions and concepts can be 'assumed', situations can be 'believed' or 'known', plans can be 'adopted', etc. (see ontology: http://www.ontologydesignpatterns.org/ont/dul/Conceptualization.owl." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Agent> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#SocialObject> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#conceptualizes> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process> <http://www.w3.org/2000/01/rdf-schema#label> "Process"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Event> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process> <http://www.w3.org/2000/01/rdf-schema#label> "Processo"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process> <http://www.w3.org/2000/01/rdf-schema#comment> "This is a placeholder for events that are considered in their evolution, or anyway not strictly dependent on agents, tasks, and plans. \nSee Event class for some thoughts on classifying events. See also 'Transition'." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/ns/prov#category> "qualified" <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/ns/prov#dm> "http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-Association"^^<http://www.w3.org/2001/XMLSchema#anyURI> <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/ns/prov#category> "expanded" <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/ns/prov#component> "agents-responsibility" <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations."@en <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/prov#Entity> <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/ns/prov#n> "http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-Association"^^<http://www.w3.org/2001/XMLSchema#anyURI> <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/ns/prov#definition> "A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals." <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.w3.org/ns/prov#> .
<http://www.w3.org/ns/prov#Plan> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.w3.org/ns/prov-o#> <http://www.w3.org/ns/prov#> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis property identifies a specific instance of E29 Design or Procedure in order to carry out an instance of E7 Activity or parts of it.\n\nThe property differs from P32 used general technique (was technique of) in that P33 refers to an instance of E29 Design or Procedure, which is a concrete information object in its own right rather than simply being a term or a method known by tradition.\n\nTypical examples would include intervention plans for conservation or the construction plans of a building\n\nExamples:\n- Ornamentation of silver cup 232 (E11) used specific technique 'Instructions for golden chase work by A N Other' (E29)\n- Rebuilding of Reichstag (E11) used specific technique Architectural plans by Foster and Partners (E29)\n\nIn First Order Logic:\nP33(x,y) ⊃ E7(x)\nP33(x,y) ⊃ E29(y)\nP33(x,y) ⊃ P16(x,y)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://erlangen-crm.org/current/P16_used_specific_object> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2004/02/skos/core#notation> "P33" <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#label> "P33 used specific technique"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#domain> <http://erlangen-crm.org/current/E7_Activity> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2002/07/owl#inverseOf> <http://erlangen-crm.org/current/P33i_was_used_by> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P33_used_specific_technique> <http://www.w3.org/2000/01/rdf-schema#range> <http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://erlangen-crm.org/current/P15_was_influenced_by> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2002/07/owl#inverseOf> <http://erlangen-crm.org/current/P134i_was_continued_by> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2000/01/rdf-schema#domain> <http://erlangen-crm.org/current/E7_Activity> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2004/02/skos/core#notation> "P134" <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis property associates two instances of E7 Activity, where the domain is considered as an intentional continuation of the range. A continuation of an activity may happen when the continued activity is still ongoing or after the continued activity has completely ended. The continuing activity may have started already before it decided to continue the other one. Continuation implies a coherence of intentions and outcomes of the involved activities.\n\nExamples:\n- the construction of the Kölner Dom (Cologne Cathedral) (E7), abandoned in the 15th century, was continued by construction in the 19th century adapting the initial plans so as to preserve the intended appearance (E7)\n\nIn First Order Logic:\nP134(x,y) ⊃ E7(x)\nP134(x,y)⊃ E7(y)\nP134(x,y) ⊃ P15(x,y)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2000/01/rdf-schema#label> "P134 continued"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/P134_continued> <http://www.w3.org/2000/01/rdf-schema#range> <http://erlangen-crm.org/current/E7_Activity> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://erlangen-crm.org/current/E73_Information_Object> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2004/02/skos/core#notation> "E29" <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis class comprises documented plans for the execution of actions in order to achieve a result of a specific quality, form or contents. In particular it comprises plans for deliberate human activities that may result in the modification or production of instances of E24 Physical Thing.\n\nInstances of E29 Design or Procedure can be structured in parts and sequences or depend on others. This is modelled using P69 has association with (is associated with)..\n\nDesigns or procedures can be seen as one of the following:\n\n1. A schema for the activities it describes\n2. A schema of the products that result from their application.\n3. An independent intellectual product that may have never been applied, such as Leonardo da Vinci's famous plans for flying machines.\n\nBecause designs or procedures may never be applied or only partially executed, the CRM models a loose relationship between the plan and the respective product.\n\nExamples:\n- the ISO standardisation procedure\n- the musical notation of Beethoven's \"Ode to Joy\"\n- the architectural drawings for the Kölner Dom in Cologne, Germany\n- The drawing on the folio 860 of the Codex Atlanticus from Leonardo da Vinci, 1486-1490, kept in the Biblioteca Ambrosiana in Milan\n\nIn First Order Logic:\nE29(x) ⊃ E73(x)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "E29 Design or Procedure"@en <http://erlangen-crm.org/current/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#comment> "A way to model curves of power and energy over time, which also provides definitions for the modelling of power scheduling including alternative plans. With a PowerProfile, a device (or power sequences server) exposes the power sequences that are potentially relevant for the CEM (or power sequences client). "@en <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B71c8659b374ed0a06dad8be070f71cd0 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bdf2129a13a1c4e0375c8cf4c595cc92f <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#label> "Power profile"@en <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bf7a135187541d13283f3b0769e93752b <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bfaaa2014ac499860eb571e0ba5b1fd08 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B549d17239251dfbb0b6dc03beb973e67 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B0458e3cc4381e3543c6369a84d7cd1b6 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://saref.etsi.org/core/Profile> <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B32aacbeebb5591963b97a0ef2cf0a671 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bb24c9f73d8d1259f8204163a1ba32a00 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B1e8a0b34d9b32dffe248dd0099f64e25 <https://saref.etsi.org/saref4ener/> .
<https://saref.etsi.org/saref4ener/PowerProfile> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://saref.etsi.org/saref4ener/> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#comment> "A method is a Description that defines or uses concepts in order to guide carrying out actions aimed at a solution with respect to a problem. It is different from a Plan, because plans could be carried out in order to follow a method, but a method can be followed by executing alternative plans." <https://w3id.org/eepsa> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://w3id.org/eepsa> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Method> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <https://w3id.org/eepsa> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B5b933d831b5ec6d39afeeca499e88696 <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://data.nasa.gov/ontologies/atmonto/ATM#TrafficManagementInitiative> <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B7f9e1801ce745771191445910573992e <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B9d6f2881af135a031e7e69ab4d37a222 <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bb41c281164cb405bf002e6182fc7c51d <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#comment> "A ReRoute is a traffic management initiative (TMI) that mandates a change in the filed flight plan for a set of specified flights. There are multiple factors that might justify a reroute, including weather, traffic congestion, unusual airspace activity, etc. The substitute flight plans route air traffic around the airspace problem area." <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#label> "ReRoute" <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B0ca2dc733ce5ecb457bfb21e625fff61 <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B36d582cb3bd91a17e7e500281e737af9 <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bf8f25975698ec7b23c4d041c44c4b300 <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B9e3ce1b6c1c68d7d38d83bb5485d4e66 <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Bf1bcb9c2c0bd13b55563cf2ea019d03b <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<https://data.nasa.gov/ontologies/atmonto/ATM#ReRouteTMI> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B17d20b83133127329581ac4339d4eb4b <https://data.nasa.gov/ontologies/atmonto/ATM#> .
<http://cookingbigdata.com/linkeddata/ccpricing#hasPricingPlan> <http://www.w3.org/2000/01/rdf-schema#comment> "Has pricing plans"@en <http://cookingbigdata.com/linkeddata/ccpricing> .
<http://cookingbigdata.com/linkeddata/ccpricing#hasPricingPlan> <http://www.w3.org/2000/01/rdf-schema#range> <http://cookingbigdata.com/linkeddata/ccpricing#PricingPlan> <http://cookingbigdata.com/linkeddata/ccpricing> .
<http://cookingbigdata.com/linkeddata/ccpricing#hasPricingPlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> <http://cookingbigdata.com/linkeddata/ccpricing> .
<http://cookingbigdata.com/linkeddata/ccpricing#hasPricingPlan> <http://www.w3.org/2000/01/rdf-schema#label> "Has pricing"@en <http://cookingbigdata.com/linkeddata/ccpricing> .
<http://cookingbigdata.com/linkeddata/ccpricing#hasPricingPlan> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://cookingbigdata.com/linkeddata/ccpricing#> <http://cookingbigdata.com/linkeddata/ccpricing> .
<http://cookingbigdata.com/linkeddata/ccpricing#hasPricingPlan> <http://www.w3.org/2000/01/rdf-schema#domain> <http://cookingbigdata.com/linkeddata/ccpricing#ServicePricing> <http://cookingbigdata.com/linkeddata/ccpricing> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://d-nb.info/standards/elementset/gnd#marc21equivalent> "510 $0 $4=kame" <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#label> "Director of photography"@en <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://rdaregistry.info/Elements/u/P60452> <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#domain> <http://d-nb.info/standards/elementset/gnd#Work> <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://d-nb.info/standards/elementset/gnd#> <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#comment> "A person in charge of photographing a motion picture, who plans the technical aspets of lighting and photographing of scenes, and often assists the director in the choice of angles, camera setups, and lighting moods. He or she may also supervise the further processing of filmed material up to the completion of the work print. Cinematographer is also referred to as director of photography. Do not confuse with videographer"@en <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://d-nb.info/standards/elementset/gnd#marc21equivalent> "500 $0 $4=kame" <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#label> "Verantwortlicher Kameramann"@de <http://d-nb.info/standards/elementset/gnd#> .
<http://d-nb.info/standards/elementset/gnd#directorOfPhotography> <http://www.w3.org/2000/01/rdf-schema#range> _:Bdfdcec85c71f88cfe681d35181b61f96 <http://d-nb.info/standards/elementset/gnd#> .
<http://www.purl.org/drammar#Object> <http://www.w3.org/2000/01/rdf-schema#comment> "Object Class of entities (endurant) that participates into Perdurants, but\n            without having intentions. An object is formally defined as a subclass of DramaEndurant\n            whose member do not have plans. Objects can be filler of roles in the description of\n            processes and states (for example, a book can be \"theme\" in a giving action\n            (i.e. the entity that changes ownership as a consequence of a giving act). This class is\n            formally disjoint from Agents (Disjoint property)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Object> <http://www.w3.org/2002/07/owl#equivalentClass> _:Be95f3ebd7318cda079d5eea9a3f3e53f <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Object> <http://www.w3.org/2000/01/rdf-schema#label> "Object" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Object> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaEndurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Object> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#UnderspecifiedPlan> <http://www.w3.org/2000/01/rdf-schema#comment> "An UnderspecifiedPlan is a plan that is part of a larger plan to achieve some\n            goal, but has not been executed. In drama, it represents the unobservable part of a plan\n            that has not been fully carried out by some agent. Its existence (in the agent's\n            mind) can only be conjectured - remember that a Plan is intended by some agent by\n            definition. As the object of a conjecture, it does not contain any details in the\n            representation of drama (this does not mean that it does not contain them in the\n            agent's mind). As such, an UnderspecifiedPlan: - does *not* motivate a timeline (it\n            has not taken place); - does *not* achieve a goal (the actions/subplans composing it and\n            its specific goal are not known); - does *not* contain any actions. These conditions,\n            part of its definition as an Equivalent Class, distinguish it from Abstract and Directly\n            Executable Plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#UnderspecifiedPlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#UnderspecifiedPlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#UnderspecifiedPlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B849af31f6dfa80239e9219092feace0b <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#UnderspecifiedPlan> <http://www.w3.org/2000/01/rdf-schema#label> "UnderspecifiedPlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2000/01/rdf-schema#label> "DrammarScene" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Scene> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2002/07/owl#equivalentClass> _:B9c2bfc0a8293a0e73614bb62e4477b72 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/2000/01/rdf-schema#comment> "DrammarScene A DrammarScene is a type of scene that hinges on characters'\n            conflicting plans. In Drammar, the conflict over plans is represented by a class, the\n            ConflictSet, which contains the set of plans in conflict. The hingesOn object property\n            connects the DrammarScene with the Conflict Set." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DrammarScene> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#label> "OrderedListElement" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#comment> "Class of the elements of the ordered lists (lists are plans and timelines).\n            Sometimes referred to as OLE. The hasOrderedListElement object property has the List\n            class as its domain and the OrderedListElement as its range. Notice that this class\n            works as a placeholder that represents the single item in a list (it is not the list\n            content itself): the property hasData links the OrderedListElement with the actual data,\n            i.e. the content of the item. For example, the OrderedListElements Plans have other\n            plans or actions as their data." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#ADTComponent> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#OrderedListElement> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://purl.org/ontology/olo/core#olo:Slot> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#label> "isMotivationFor" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#Timeline> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#comment> "A plan is the motivation for a timeline, namely for a list of units containing\n            actions. This property is functional: so, a plan can motivate only a timeline. Notice\n            that this implies that a plan cannot motivate the same timeline motivated by a sub-plan,\n            and that a plan cannot motivate the same timeline motivated by a more abstract plan. Of\n            course, the fact that this property is functional does not imply that a single timeline\n            cannot be motivated by more plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#isMotivationFor> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#FunctionalProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#AbstractDataType> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#label> "Set" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B5dc2be0cc183bb1341ee6ba5506fb191 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/2000/01/rdf-schema#comment> "Set The class of set structures. The relation between sets and set members is\n            represented by the hasMember object property. It includes specific subclasses, with each\n            subclass characterized by a specific type of members. Sets include: - ConflictsSets:\n            sets of conflicting plans; - ConsistentStateSets: sets of consistent states (left and\n            right boundaries of timelines and plans). - Units: sets of actions." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Set> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#coOccurInScene> <http://www.w3.org/2000/01/rdf-schema#label> "coOccurInScene" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#coOccurInScene> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#coOccurInScene> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#SymmetricProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#coOccurInScene> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#ObjectProperty> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#coOccurInScene> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#coOccurInScene> <http://www.w3.org/2000/01/rdf-schema#comment> "coOccurInScene can be used to describe the fact that two Plans co-occur in the\n            same Scene." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#comment> "Abstract Plan An abstract plan is a recursive plan, i.e., a plan whose\n            elements are plans. Formally, an AbstractPlan is a list (List class) containing\n            (containsOLE) elements (OrderedListElements) that have plans as their data (hasData).\n            The plans contained in an abstract plan can be either abstract plans or directly\n            executable plans." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B0b7d2e0e70b9e6c7dd35b94f71eb483f <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Plan> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/2000/01/rdf-schema#label> "AbstractPlan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#AbstractPlan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#comment> "The Goal class represents the objectives of an agent. In the BDI model, the\n            agent is driven by her desires, or goal, and forms plans to achieve them. In Drammar, a\n            goal is achieved by a plan; the achives object property connects a plan with the goal it\n            achieves (a single goal, since the achieves property is functional). An agent intends\n            (intends object property) a goal. Formally, the Goal class is a defined as a subclass of\n            the MentalState class which is constrained: - to be the goal of some agent - to be part\n            of some ConsistentStateState - to be described by a GoalSchema Goal has a propositional\n            content that is - a process in the case of perform goal PG (Hamlet wants to ask Ophelia\n            ...) - a state in the case of - achievement (Hamlet wants Ophelia goes to a nunnery) -\n            maintenance (Hamlet wants Claudius (keeps) believing Hamlet is mad) - query (Hamlet\n            wants to know whether Ophelia is honest) In these various cases the propositional\n            content is different: - Perform Goal - PC: Action - AG - PC: State, embedded in one\n            Belief, with status false or Process, embedded in Belief, with accomplishment false - MG\n            - PC: State or Process, embedded in Belief, with status/accomplishment true - Query Goal\n            - PC: depends on query; e.g.: - Y/N question: the boolean status of a state (currently\n            implemented as a State with status TRUE) - Wh question: the filler of a role in some\n            state or process (currently not implemented) These are guidelines for writing the plans\n            correctly." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#label> "Goal" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#MentalState> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Goal> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bc92d95397ae1e3560df8d869c3f0fd84 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ConflictSet> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Set> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ConflictSet> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ConflictSet> <http://www.w3.org/2000/01/rdf-schema#comment> "This class represents the relation of conflict distributed over a set of\n            plans. It represents the orchestration of conflicts in drama. Although conflict may\n            occur, in drama, between (or within) entities of different types (characters may be in\n            conflict with each other, ir the same character may experience conflicting emotions),\n            here we reduce the notion of conflict to this single class." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ConflictSet> <http://www.w3.org/2002/07/owl#equivalentClass> _:B35a3423a0305af2599d35c0992d0e915 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#ConflictSet> <http://www.w3.org/2000/01/rdf-schema#label> "ConflictSet" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#state> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2002/07/owl#equivalentClass> _:Bff623e773c0d2c4053957f8b93acc148 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#comment> "State represents the static class of the Perdurant. State is the class that\n            bridges to the concept of State in upper ontologies, externally to Drammar. For example,\n            in DOLCE, states and process are the two distinct types of statives. Both factual and\n            eventive states are further divided into different state types: - MentalStates, namely\n            Belief, Goals, Values and Emotions (all sharing some propositional content in their\n            description); - StateOfAffairs, namely situations holding in the world. States participate\n            to some structure. In Drammar, these structures are ConsistenStateSets (types of Sets),\n            which borders timelines and plans. The specific type pf States are defined through the\n            use of specific types of StateSchema (subclass of DescriptionTemplate). So, its\n            subclasses are: - MentalState: the mental state of an agent; - StateOfAffairs: an\n            objective state of the story world." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/2000/01/rdf-schema#label> "State" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#State> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#process> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#label> "Process" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#comment> "Processes represents the dynamic class of the perdurants: they are gathered\n            into units, which are contained into ordered timelines bordered by states. Process is\n            the class that bridges to the concept of Process in upper ontologies, externally to\n            Drammar (like DOLCE, where States and Processes are types of Statives: here, we include\n            also the event types called accomplishments and achievements in DOLCE). Consider that\n            such resources are not of linguistic type. The DescriptionTemplate class (or, better,\n            its subclass FrameNetSchema), in fact, drives the behavior of the process inside a Plan\n            or a Unit, linking it (via the ExternalReference Class) to: 1. a Wordnet sense 2. a\n            Frame (from Framenet or Verbnet) 3. a set of Roles, played by roles encompassed in the\n            frame All these links are bridged by the ExternalReference Class, which has\n            \"quale\" properties that link the reference to specific resources. In the\n            external ontology, a process may be logically defined through the use of axioms: for\n            example, in the action of asking, it is assumed that Speaker and Addressee are connected\n            through some communication medium, e.g. co-presence in a room or a telephone. In\n            Drammar, the DramaStructures that contain the Processes are Units (subclasses of\n            DramaSets) and Plans (subclasses of DramaLists). They are then subdivided through a\n            further trait, that is whether the process is intentional (of an agent) or not (Action\n            or UnintentionalProcess). This trait is defined through a specific Datatype property, of\n            boolean type, called isIntentional. So, its subclasses are: - Action: with isIntentional\n            property valued TRUE; - UnintentionalProcess: with isIntentional property valued FALSE.\n            Same happens in parallel to the States, although in that case the trait concerns the\n            state schema." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaPerdurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Process> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DescriptionTemplate> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "The situation schema provides the pattern for the description of incidents and states. It is inspired by the Situation ontology Pattern of the Ontology Design Pattern initiative (http://ontologydesignpatterns.org/). So, a SituationSchema describes (\"describes\" object property) a DramaPerdurant (either a State or a Process).\nThe schema works as a hub for the roles involved in a situation. The property hasRole links the Situation class (its domain) with the Role class (the range of the property). Also, notice that, as illustrated in the documentation of the SituationSchema class, a Situation Schema (or, better, its subclasses) does not directly refer to the external linguistic knowledge employed to describe drama: rather, it refers to the ExternalRefSchema class (subclass of the top level ExternalReference class), which in  turn refers to the linguistic knowledge. The SituationSchema class specializes into specific schemata for describing specific type of situations: \n- FrameNetSchema: for describing processes, like giving or killing (in Drammar, they are grouped into units arranged on timelines), and states, like being behind some object or being dead (in Drammar, they are bundled into sets that border timelines and plans). \n- MentalStateSchema: this class groups the specific types of schemata for describing the mental states of the agents in Drammar, namely beliefs, goals, emotions and values. \nTechnically, the subtypes of SituationSchema are characterized by different values of the quale_schemaType data property: \"belief\", \"emotion\", \"framenet\", \"goal\",  \"value\". \nFinally, it is worth mentioning that is a specific design choice of Drammar not to represent the nesting of states: only the type of the top level state, e.g., a belief, is represented, independent of what that belief contains in turn. This flat style of representation is determined by the decision not to commit to a specific logical account of state types. When Drammar is employed for annotation, the content nested into a state is described informally in natural language description accompanying the state, if needed. \nRefs: Gangemi, A., & Presutti, V. (2009). Ontology design patterns. In Handbook on ontologies (pp. 221-243). Springer Berlin, Heidelberg." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#label> "SituationSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2002/07/owl#equivalentClass> _:B50d2eebb6368ec00377644b97a424fcf <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#UnintentionalProcess> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#comment> "An Action is an intentional Process, which is a type of Process. Formally, an\n            action is an Process which is constrained to be contained (isMemberOf) some Unit. In\n            Drammar, an Action can be part of a plan of an agent (formally, a plan ia a list of\n            actions), or can be included in a Unit (ordered into some timeline). Only direct\n            executable plans (DirectlyExecutablePlan class) contain actions The Action class is\n            formally disjoint with the UnintentionalEventiveProcess class. We have introduced an\n            explicit boolean datatype property isIntentional, because it could be that the\n            annotators will use actions directly in the units (i.e. without explicitly introducing a\n            plan for it)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#label> "Action" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Action> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#Process> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#label> "Plan" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2002/07/owl#equivalentClass> _:B3900329bcec474a721e9dd6156884a49 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#List> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Plan> <http://www.w3.org/2000/01/rdf-schema#comment> "Plan A plan is a sequence of actions devised by an agent to achieve some Goal.\n            In the BDI model, the agent's 'intention' to execute a plan is the bridge\n            between goals and practical actions. In Drammar, a plan is intended by (intendedBy\n            object property) an Agent to achieve (achieve property) some Goal. As a consequence, the\n            plan motivates (isMotivationFor object property) a timeline (i.e. a given extent of the\n            drama text). These are the necessary and sufficient conditions of class. Following the\n            paradigm of hierarchical planning, plans are recursive. So plans can contains actions or\n            other, simpler plans. Formally, a Plan is a list (namely, it is a subclass of the List\n            class) whose elements are simpler plans (for abstract plans) or actions (for directly\n            executable plans). A plan is related to its elements by the containsOLE\n            property." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2000/01/rdf-schema#comment> "Agent. Derived from BDI model, a mentalist model of agent which sees the agent\n            as a rational entity who form intentions, or plans, (based on her beliefs) to achieve\n            her desires (or goals). See Bratman et al. 1988 and Cohen and Levesque 1995. Agents are\n            those entities in drama, that potentially - have goals (object property hasGoal); -\n            intend plans to achieve goals (object property intends); - participate in actions with\n            some role (object property isFillerOf); In addition, agents have emotional states (as a\n            result of targeted emotions appraisal processes) and have moral values (hasValue): -\n            feel emotions as a result of a cognitive appraisal process (specific object properties\n            link each the appraisal of each emotion type to the agent); - have values (object\n            property hasValue); The requirement, in drama, is that an agent has a plan, since the\n            fact of having a goal would not be sufficient to ensure that the goal is translated into\n            some concrete, perceivable behavior in drama. Having a plan, instead, implies that the\n            agent also has goal. Notice that some Agent (e.g. Polonius) is involved in an action\n            without being intentional (e.g., being the topic of a conversation), it remains\n            classified as an Agent in Drammar, though it fills a different role in the frame (e.g.,\n            Topic of Conversation). References: Bratman, M. E., Israel, D. J., & Pollack, M. E.\n            (1988). Plans and resourceâbounded practical reasoning. Computational intelligence,\n            4(3), 349-355. Cohen, P. R., & Levesque, H. J. (1995, June). Communicative Actions\n            for Artificial Agents. In ICMAS (Vol. 95, pp. 65-72)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2002/07/owl#equivalentClass> _:B63447b25934404f7e81e4527e87b3a01 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2000/01/rdf-schema#label> "Agent" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2002/07/owl#disjointWith> <http://www.purl.org/drammar#Object> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaEndurant> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#Agent> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
