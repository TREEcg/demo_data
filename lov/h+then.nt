<http://purl.org/spar/pso/under-review> <http://www.w3.org/2000/01/rdf-schema#comment> "The status of a document that has been received from the author(s) by an editor or a publisher for potential publication, and then has been sent to independent reviewers for their comments as to its suitability for publication, prior to receipt of such reviews."@en <http://purl.org/spar/pso> .
<http://purl.org/spar/pso/under-review> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#NamedIndividual> <http://purl.org/spar/pso> .
<http://purl.org/spar/pso/under-review> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/spar/pso/PublicationStatus> <http://purl.org/spar/pso> .
<http://purl.org/spar/pso/under-review> <http://www.w3.org/2000/01/rdf-schema#label> "under review"@en <http://purl.org/spar/pso> .
<http://purl.org/twc/vocab/conversion/IndirectSameAsEnhancement> <http://www.w3.org/2000/01/rdf-schema#comment> "Refer to a local URI, which then has a single owl:sameAs triple pointing to external LOD bubbles. Depends on owl:sameAs inference OR extra graph patterns in SPARQL queries." <http://purl.org/twc/vocab/conversion/> .
<http://purl.org/twc/vocab/conversion/IndirectSameAsEnhancement> <http://www.w3.org/2000/01/rdf-schema#label> "IndirectSameAsEnhancement" <http://purl.org/twc/vocab/conversion/> .
<http://purl.org/twc/vocab/conversion/IndirectSameAsEnhancement> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.org/twc/vocab/conversion/> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/creator> "DERI International" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/type> "http://www.w3.org/2000/01/rdf-schema#Class" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/title> "Location"@EN <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/date> "2004-10-20" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/format> "application/rdf+xml" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/rights> "http://www.deri.org/privacy.html" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/publisher> "DERI International" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/coverage> "world" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://www.w3.org/2000/01/rdf-schema#comment> "This class is the superclass for all classes defining geographical locations. The approach for this subontology is to have a hierarchy of location classes, such that instances of the classes further down in the hierarchy can be contained in instances of the classes higher up in the hierarchy. On each level, there exist two sister classes: class L defines a certain type of location, while class SubL defines locations which can be contained in instances of L. SubL then defines a property inL, to express which instance of L an instance of SubL is contained in. E.g. for a class Continent, there exists a class SubContinent. All children of SubContinent (either direct or transitive) define locations that can be contained in a continent, such as countries, regions, cities, etc. By virtue of inheritance, all these location classes then have a property inContinent, to express that they are contained in some continent. In a simpler, flat structure, inContinent would have to be defined explicitly for all kinds of locations that can be contained in a continent.\nThe intepretation of the inL predicates should be as follows: if, for a particular instance K, inL has a value, this value is valid. If inL has no value, the value of inL in the next location K is contained in valid, and so forth. E.g. an instance \"Hawaii\" has the value \"Oceania\" defined for <link>inContinent</link> and \"USA\" for <link>inCountry</link>. \"Delaware\" has no value for inContinent. \"USA\" has the value \"North America\" for <link>inContinent</link>. The interpretation would be that \"Hawaii\" is located in \"Oceania\", while \"Delaware\" is located in \"North America\".\nWe are aware of the fact that this approach is idealized and can therefore conflict with reality in some situations. E.g., the exact borders of continents are not always defined (there are contradicting opinions on where exactly Europe begins or ends). Countries could be contained in more than one continent (Turkey belongs to both Europe and Asia). However, we think that these situations are marginal and have little or no impact on the intended use of this ontology.\nWe think that this recursive modelling of locations is at the same time simple and powerful enough to capture all necessary aspects of the concept of location for a domain such as an SWPortal. While the SubL classes might appear to be somewhat artificial, they are actually not. They are just an abstraction for geographical entities that are (under normal circumstances) smaller than entities of type L. As such, they are no more abstract than, say, the concept of an agent.\n" <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://www.w3.org/2000/01/rdf-schema#label> "Location"@en <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://purl.org/dc/elements/1.1/description> "This class is the superclass for all classes defining geographical locations. The approach for this subontology is to have a hierarchy of location classes, such that instances of the classes further down in the hierarchy can be contained in instances of the classes higher up in the hierarchy. On each level, there exist two sister classes: class L defines a certain type of location, while class SubL defines locations which can be contained in instances of L. SubL then defines a property inL, to express which instance of L an instance of SubL is contained in. E.g. for a class Continent, there exists a class SubContinent. All children of SubContinent (either direct or transitive) define locations that can be contained in a continent, such as countries, regions, cities, etc. By virtue of inheritance, all these location classes then have a property inContinent, to express that they are contained in some continent. In a simpler, flat structure, inContinent would have to be defined explicitly for all kinds of locations that can be contained in a continent.\nThe intepretation of the inL predicates should be as follows: if, for a particular instance K, inL has a value, this value is valid. If inL has no value, the value of inL in the next location K is contained in valid, and so forth. E.g. an instance \"Hawaii\" has the value \"Oceania\" defined for <link>inContinent</link> and \"USA\" for <link>inCountry</link>. \"Delaware\" has no value for inContinent. \"USA\" has the value \"North America\" for <link>inContinent</link>. The interpretation would be that \"Hawaii\" is located in \"Oceania\", while \"Delaware\" is located in \"North America\".\nWe are aware of the fact that this approach is idealized and can therefore conflict with reality in some situations. E.g., the exact borders of continents are not always defined (there are contradicting opinions on where exactly Europe begins or ends). Countries could be contained in more than one continent (Turkey belongs to both Europe and Asia). However, we think that these situations are marginal and have little or no impact on the intended use of this ontology.\nWe think that this recursive modelling of locations is at the same time simple and powerful enough to capture all necessary aspects of the concept of location for a domain such as an SWPortal. While the SubL classes might appear to be somewhat artificial, they are actually not. They are just an abstraction for geographical entities that are (under normal circumstances) smaller than entities of type L. As such, they are no more abstract than, say, the concept of an agent.\n"@EN <http://sw-portal.deri.org/ontologies/swportal> .
<http://sw-portal.deri.org/ontologies/swportal#Location> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://sw-portal.deri.org/ontologies/swportal> .
<http://purl.org/pav/hasVersion> <http://www.w3.org/2000/01/rdf-schema#comment> "This resource has a more specific, versioned resource. This property is intended for relating a non-versioned or abstract resource to several versioned resources, e.g. snapshots. For instance, if there are two snapshots of the News page, made on 23rd and 24th of December, then: <http://news.example.com/> pav:hasVersion <http://news.example.com/2013-12-23/> ; pav:hasVersion <http://news.example.com/2013-12-24/> . If one of the versions has somewhat the equivalent content to this resource (e.g. can be used as a permalink for this resource), then it should instead be indicated with the subproperty pav:hasCurrentVersion: <http://news.example.com/> pav:hasCurrentVersion <http://news.example.com/2013-12-25 > . To order the versions, use pav:previousVersion: <http://news.example.com/2013-12-25/> pav:previousVersion <http://news.example.com 2013-12-24/> . <http://news.example.com/2013-12-24/> pav:previousVersion <http://news.example.com/2013-12-23/> . Note that it might be confusing to also indicate pav:previousVersion from a resource that has pav:hasVersion relations, as such a resource is intended to be a long-living 'unversioned' resource. The PAV ontology does however not formally restrict this, to cater for more complex scenarios with multiple abstraction levels. pav:hasVersion is a subproperty of dcterms:hasVersion to more strongly define this hierarchical pattern. It is therefore also a subproperty of pav:generalizationOf (inverse of prov:specializationOf). To indicate the existence of other, non-hierarchical kind of editions and adaptations of this resource that are not versioned snapshots (e.g. Powerpoint slides has a video recording version), use instead dcterms:hasVersion or prov:alternateOf."@en <http://purl.org/net/tsn#> .
<http://purl.org/pav/hasVersion> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> <http://purl.org/net/tsn#> .
<http://purl.org/pav/hasVersion> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://purl.org/dc/terms/hasVersion> <http://purl.org/net/tsn#> .
<http://purl.org/pav/hasVersion> <http://www.w3.org/2000/01/rdf-schema#label> "pav:hasVersion"@en <http://purl.org/net/tsn#> .
<http://purl.org/pav/hasVersion> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://purl.org/pav/> <http://purl.org/net/tsn#> .
