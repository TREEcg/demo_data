<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC17_Conceptual_Object> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2003/06/sw-vocab-status/ns#term_status> "stable" <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#comment> "This class comprises documented plans for the execution of actions in order to achieve a result of a specific quality, form or contents. In particular it comprises plans for deliberate human activities that may result in the modification or production of instances of E24 Physical Thing.\n\nInstances of E29 Design or Procedure can be structured in parts and sequences or depend on others. This is modelled using P69 is associated with.\n\nDesigns or procedures can be seen as one of the following:\n\n1. schema for the activities it describes\n2. A schema of the products that result from their application.\n3. An independent intellectual product that may have never been applied, such as Leonardo da Vinci's famous plans for flying machines.\n4. Because designs or procedures may never be applied or only partially executed, the CRM models a loose relationship between the plan and the respective product.\n[Scope Note for E29 Design or Procedure (CIDOC CRM)]"@en <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl#BC64_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> <http://www.ics.forth.gr/isl/MarineTLO/v4/marinetlo.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "ha valore"@it <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "has data value"@en <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#comment> "A datatype property that encodes values from a datatype for an Entity. \nThere are several ways to encode values in DOLCE (Ultralite):\n\n1) Directly assert an xsd:_ value to an Entity by using hasDataValue\n2) Assert a Region for an Entity by using hasRegion, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n3) Assert a Quality for an Entity by using hasQuality, then assert a Region for that Quality, and assert an xsd:_ value to that Region, by using hasRegionDataValue\n4) When the value is required, but not directly observed, assert a Parameter for an xsd:_ value by using hasParameterDataValue, and then associate the Parameter to an Entity by using isConstraintFor\n5) When the value is required, but not directly observed, you can also assert a Parameter for a Region by using parametrizes, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n\nThe five approaches obey different requirements. \nFor example, a simple value can be easily asserted by using pattern (1), but if one needs to assert an interval between two values, a Region should be introduced to materialize that interval, as pattern (2) suggests. \nFurthermore, if one needs to distinguish the individual Quality of a value, e.g. the particular nature of the density of a substance, pattern (3) can be used. \nPatterns (4) and (5) should be used instead when a constraint or a selection is modeled, independently from the actual observation of values in the real world." <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Entity> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://erlangen-crm.org/current/E73_Information_Object> <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2004/02/skos/core#notation> "E29" <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#comment> "Scope note:\nThis class comprises documented plans for the execution of actions in order to achieve a result of a specific quality, form or contents. In particular it comprises plans for deliberate human activities that may result in the modification or production of instances of E24 Physical Thing.\n\nInstances of E29 Design or Procedure can be structured in parts and sequences or depend on others. This is modelled using P69 has association with (is associated with)..\n\nDesigns or procedures can be seen as one of the following:\n\n1. A schema for the activities it describes\n2. A schema of the products that result from their application.\n3. An independent intellectual product that may have never been applied, such as Leonardo da Vinci's famous plans for flying machines.\n\nBecause designs or procedures may never be applied or only partially executed, the CRM models a loose relationship between the plan and the respective product.\n\nExamples:\n- the ISO standardisation procedure\n- the musical notation of Beethoven's \"Ode to Joy\"\n- the architectural drawings for the Kölner Dom in Cologne, Germany\n- The drawing on the folio 860 of the Codex Atlanticus from Leonardo da Vinci, 1486-1490, kept in the Biblioteca Ambrosiana in Milan\n\nIn First Order Logic:\nE29(x) ⊃ E73(x)"@en <http://erlangen-crm.org/current/> .
<http://erlangen-crm.org/current/E29_Design_or_Procedure> <http://www.w3.org/2000/01/rdf-schema#label> "E29 Design or Procedure"@en <http://erlangen-crm.org/current/> .
<http://purl.oclc.org/NET/muo/muo#QualityValue> <http://www.w3.org/2000/01/rdf-schema#label> "Quality value"@en <http://purl.oclc.org/NET/muo/ucum/> .
<http://purl.oclc.org/NET/muo/muo#QualityValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://purl.oclc.org/NET/muo/ucum/> .
<http://purl.oclc.org/NET/muo/muo#QualityValue> <http://www.w3.org/2000/01/rdf-schema#comment> "The value of an individual quality, for instance, the weight of an individual object.   If we consider metrology, the value of a physical quality Q is expressed as the product of a numerical value {Q} and a physical unit [Q]: Q = {Q} x [Q]. In MUO, the class muo:QualityValue is used to represent the values of qualities, Q. Instances of this class are related with 1) exactly one unit, suitable for measure the physical quality (meters for length, grams for weight, etc), by means of the property muo:measuredIn, [Q]; 2) a number, which express the relationship between the value and the unit by means of the rdf:value property, {Q}; 3) a time, which expresses the quality value along the line of time. Quality values can be temporalized, but this is not always necessary.\n"@en <http://purl.oclc.org/NET/muo/ucum/> .
<http://www.w3.org/ns/dqv#UserQualityFeedback> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.w3.org/ns/dqv> .
<http://www.w3.org/ns/dqv#UserQualityFeedback> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> <http://www.w3.org/ns/dqv> .
<http://www.w3.org/ns/dqv#UserQualityFeedback> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/dqv#QualityAnnotation> <http://www.w3.org/ns/dqv> .
<http://www.w3.org/ns/dqv#UserQualityFeedback> <http://www.w3.org/2000/01/rdf-schema#label> "User Quality feedback"@en <http://www.w3.org/ns/dqv> .
<http://www.w3.org/ns/dqv#UserQualityFeedback> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/ns/duv#UserFeedback> <http://www.w3.org/ns/dqv> .
<http://www.w3.org/ns/dqv#UserQualityFeedback> <http://www.w3.org/2000/01/rdf-schema#comment> "Represents feedback that users have on the quality of datasets or distributions. Besides dqv:qualityAssessment, which is the motivation required by all quality annotations, one of the predefined instances of oa:Motivation should be indicated as motivation to distinguish among the different kinds of feedback, e.g., classifications, questions."@en <http://www.w3.org/ns/dqv> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#boolean> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#range> <http://www.w3.org/2001/XMLSchema#double> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "Has Data Value"@en <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#domain> <http://purl.oclc.org/NET/ssnx/ssn#ObservationValue> <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.loa.istc.cnr.it/ontologies/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#comment> "A datatype property that encodes values from a datatype for an Entity. \nThere are several ways to encode values in DOLCE (Ultralite):\n\n1) Directly assert an xsd:_ value to an Entity by using hasDataValue\n2) Assert a Region for an Entity by using hasRegion, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n3) Assert a Quality for an Entity by using hasQuality, then assert a Region for that Quality, and assert an xsd:_ value to that Region, by using hasRegionDataValue\n4) When the value is required, but not directly observed, assert a Parameter for an xsd:_ value by using hasParameterDataValue, and then associate the Parameter to an Entity by using isConstraintFor\n5) When the value is required, but not directly observed, you can also assert a Parameter for a Region by using parametrizes, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n\nThe five approaches obey different requirements. \nFor example, a simple value can be easily asserted by using pattern (1), but if one needs to assert an interval between two values, a Region should be introduced to materialize that interval, as pattern (2) suggests. \nFurthermore, if one needs to distinguish the individual Quality of a value, e.g. the particular nature of the density of a substance, pattern (3) can be used. \nPatterns (4) and (5) should be used instead when a constraint or a selection is modeled, independently from the actual observation of values in the real world." <http://purl.org/iot/ontology/fiesta-iot> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "has data value"@en <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#DatatypeProperty> <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#label> "ha valore"@it <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2002/07/owl#equivalentProperty> <http://www.semanticwater.com/WISDOM#hasValue> <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#domain> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Entity> <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasDataValue> <http://www.w3.org/2000/01/rdf-schema#comment> "A datatype property that encodes values from a datatype for an Entity. \nThere are several ways to encode values in DOLCE (Ultralite):\n\n1) Directly assert an xsd:_ value to an Entity by using hasDataValue\n2) Assert a Region for an Entity by using hasRegion, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n3) Assert a Quality for an Entity by using hasQuality, then assert a Region for that Quality, and assert an xsd:_ value to that Region, by using hasRegionDataValue\n4) When the value is required, but not directly observed, assert a Parameter for an xsd:_ value by using hasParameterDataValue, and then associate the Parameter to an Entity by using isConstraintFor\n5) When the value is required, but not directly observed, you can also assert a Parameter for a Region by using parametrizes, and then assert an xsd:_ value to that Region, by using hasRegionDataValue\n\nThe five approaches obey different requirements. \nFor example, a simple value can be easily asserted by using pattern (1), but if one needs to assert an interval between two values, a Region should be introduced to materialize that interval, as pattern (2) suggests. \nFurthermore, if one needs to distinguish the individual Quality of a value, e.g. the particular nature of the density of a substance, pattern (3) can be used. \nPatterns (4) and (5) should be used instead when a constraint or a selection is modeled, independently from the actual observation of values in the real world." <https://opendata.aragon.es/def/ei2a/ei2a.owl> .
<https://w3id.org/squap/SoftwareQualityFactor> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B83a47bebd95dde641213851a4a111829 <https://w3id.org/squap/> .
<https://w3id.org/squap/SoftwareQualityFactor> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <https://w3id.org/squap/Description> <https://w3id.org/squap/> .
<https://w3id.org/squap/SoftwareQualityFactor> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:B382cf6fc42928cdbfd1c4a62a52892df <https://w3id.org/squap/> .
<https://w3id.org/squap/SoftwareQualityFactor> <http://www.w3.org/2000/01/rdf-schema#label> "Software quality factor" <https://w3id.org/squap/> .
<https://w3id.org/squap/SoftwareQualityFactor> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://w3id.org/squap/> .
