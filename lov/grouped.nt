<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2000/01/rdf-schema#label> "MentalStateSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "The MentalStateSchema class collects all the schemata that license the\n            behavior of the mental states. Following the guidelines for describing mental states in\n            Ferrario, R., & Oltramari, A. (2005, March). Towards a computational ontology of\n            mind. In Aerospace Conference, 2005 IEEE (pp. 1-9). IEEE, propositional attitudes such\n            as beliefs and goals are considered mental states in Drammar. The MentalState class\n            includes: - BeliefSchema - EmotionSchema - GoalSchema - ValueSchema The schemata\n            match the mental states included in Drammar. Mental states are grouped in the\n            DramaPerdurant class as eventive mental states (MentalState class) or as factual mental\n            states (F_MentalState class)." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2002/07/owl#equivalentClass> _:B107952b39cde9043d927bdce651a3376 <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#MentalStateSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#SituationSchema> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DescriptionTemplate> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#comment> "The situation schema provides the pattern for the description of incidents and states. It is inspired by the Situation ontology Pattern of the Ontology Design Pattern initiative (http://ontologydesignpatterns.org/). So, a SituationSchema describes (\"describes\" object property) a DramaPerdurant (either a State or a Process).\nThe schema works as a hub for the roles involved in a situation. The property hasRole links the Situation class (its domain) with the Role class (the range of the property). Also, notice that, as illustrated in the documentation of the SituationSchema class, a Situation Schema (or, better, its subclasses) does not directly refer to the external linguistic knowledge employed to describe drama: rather, it refers to the ExternalRefSchema class (subclass of the top level ExternalReference class), which in  turn refers to the linguistic knowledge. The SituationSchema class specializes into specific schemata for describing specific type of situations: \n- FrameNetSchema: for describing processes, like giving or killing (in Drammar, they are grouped into units arranged on timelines), and states, like being behind some object or being dead (in Drammar, they are bundled into sets that border timelines and plans). \n- MentalStateSchema: this class groups the specific types of schemata for describing the mental states of the agents in Drammar, namely beliefs, goals, emotions and values. \nTechnically, the subtypes of SituationSchema are characterized by different values of the quale_schemaType data property: \"belief\", \"emotion\", \"framenet\", \"goal\",  \"value\". \nFinally, it is worth mentioning that is a specific design choice of Drammar not to represent the nesting of states: only the type of the top level state, e.g., a belief, is represented, independent of what that belief contains in turn. This flat style of representation is determined by the decision not to commit to a specific logical account of state types. When Drammar is employed for annotation, the content nested into a state is described informally in natural language description accompanying the state, if needed. \nRefs: Gangemi, A., & Presutti, V. (2009). Ontology design patterns. In Handbook on ontologies (pp. 221-243). Springer Berlin, Heidelberg." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#SituationSchema> <http://www.w3.org/2000/01/rdf-schema#label> "SituationSchema" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#comment> "The DramaPerdurant class contains the entities of drama that can described as\n            perdurants in DOLCE (Gangemi et al. 2002): \"Perdurants [...] just extend in time by\n            accumulating different temporal parts, so that, at any time they are present, they are\n            only partially present, in the sense that some of their proper temporal parts (e.g.,\n            their previous or future phases) may be not present.\" In other words, perdurants,\n            namaly processes, are not entirely present at any time they are present, differently\n            from endurants. The DramaEdurant is the class of elements of Drama that describe the\n            story dynamics, i.e. Processes and States. In the context of Drammar, the individuals of\n            this class describe the story advancement in terms of incidents and states holding\n            between incidents. Each has a specific relation to the segmentation of drama: processes\n            are grouped in units, states precedes and follows timelines (which contain units).\n            Notice that processes and states are not distinct in Framenet, the knowledge source we\n            refer to for describing perdurants outside of Drammar. Reference: Gangemi, A., Guarino,\n            N., Masolo, C., Oltramari, A., & Schneider, L. (2002). Sweetening ontologies with\n            DOLCE. In Knowledge engineering and knowledge management: Ontologies and the semantic\n            Web (pp. 166-181). Springer Berlin Heidelberg." <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.purl.org/drammar#DramaEntity> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#label> "DramaPerdurant" <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> _:Be091fb8b4d1efd48c8f205d40ce802de <http://www.purl.org/drammar> .
<http://www.purl.org/drammar#DramaPerdurant> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#perdurant> <http://www.purl.org/drammar> .
<https://w3id.org/cto#TaskContext> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <https://w3id.org/cto> <https://w3id.org/cto> .
<https://w3id.org/cto#TaskContext> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Class> <https://w3id.org/cto> .
<https://w3id.org/cto#TaskContext> <http://www.w3.org/2000/01/rdf-schema#comment> "A task context allows to group certain tasks that are related. Examples are tasks that fall under the responsibility of a certain organization, tasks grouped per activity or project (e.g. inspections, demolition, construction, etc.), work item (cost estimation) or a larger task that can be subdivided in smaller tasks."@en <https://w3id.org/cto> .
<https://w3id.org/cto#TaskContext> <http://www.w3.org/2000/01/rdf-schema#label> "a task context"@en <https://w3id.org/cto> .
